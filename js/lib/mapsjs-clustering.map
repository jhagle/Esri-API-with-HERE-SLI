{
	"version": 3,
	"file": "mapsjs-clusteringjs",
	"lineCount": 17,
	"mappings": "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",
	"sources": [
		"/home/here/repo/ext-clustering/dev/node_modules/closure-library/closure/goog/base.js",
		"out/tmp/src/clustering/util/namespace.js",
		"out/tmp/src/clustering/quadtree/Node.js",
		"out/tmp/src/clustering/quadtree/Tree.js",
		"out/tmp/src/clustering/ICluster.js",
		"out/tmp/src/clustering/NoisePoint.js",
		"out/tmp/src/clustering/Clusterer.js",
		"out/tmp/src/clustering/Cluster.js",
		"out/tmp/src/clustering/DefaultTheme.js",
		"out/tmp/src/clustering/DataPoint.js",
		"out/tmp/src/clustering/Provider.js",
		"out/tmp/src/clustering/namespace.js"
	],
	"names": [
		"goog.global",
		"goog.bindNative_",
		"fn",
		"selfObj",
		"var_args",
		"call",
		"apply",
		"bind",
		"arguments",
		"goog.bindJs_",
		"Error",
		"length",
		"boundArgs",
		"Array",
		"prototype",
		"slice",
		"newArgs",
		"unshift",
		"goog.bind",
		"Function",
		"toString",
		"indexOf",
		"goog.bind.apply",
		"goog.exportSymbol",
		"publicPath",
		"object",
		"parts",
		"split",
		"cur",
		"execScript",
		"part",
		"shift",
		"undefined",
		"H.clustering.util.isDef",
		"obj",
		"H.clustering.util.Infinity",
		"H.clustering.util.UNDEF",
		"eval",
		"H.clustering.quadtree.Node",
		"parent",
		"childNodeAddr",
		"opt_minX",
		"opt_minY",
		"opt_maxX",
		"opt_maxY",
		"childCount",
		"H.clustering.quadtree.Node.prototype.getChildNode",
		"traverse",
		"H.clustering.quadtree.Node.prototype.traverse",
		"callback",
		"remainingDepth",
		"depth",
		"current",
		"traverseInternal",
		"H.clustering.quadtree.Node.prototype.traverseInternal",
		"i",
		"child",
		"clusterX",
		"clusterY",
		"clusterWeight",
		"H.clustering.quadtree.Tree",
		"opt_depth",
		"opt_radiusX",
		"opt_radiusY",
		"opt_centerX",
		"opt_centerY",
		"maxDepth",
		"root",
		"centerX_",
		"centerY_",
		"radiusX_",
		"radiusY_",
		"init",
		"H.clustering.quadtree.Tree.prototype.init",
		"head",
		"NaN",
		"H.clustering.quadtree.Tree.prototype.cleanup_",
		"node",
		"cleanup_",
		"entries",
		"H.clustering.quadtree.Tree.prototype.adjustHead",
		"opt_node",
		"insertPoint",
		"H.clustering.quadtree.Tree.prototype.insertPoint",
		"x",
		"y",
		"weight",
		"opt_data",
		"extremes",
		"insert_",
		"H.clustering.quadtree.Tree.prototype.insert_",
		"entry",
		"childNode",
		"insertIntoChild_",
		"getChildNode",
		"clusterMinX",
		"clusterMinY",
		"clusterMaxX",
		"clusterMaxY",
		"adjustHead",
		"H.clustering.quadtree.Tree.Entry",
		"push",
		"H.clustering.quadtree.Tree.prototype.traverse",
		"opt_maxDepth",
		"data",
		"H.clustering.ICluster",
		"getMaxZoom",
		"H.clustering.ICluster.prototype.getMaxZoom",
		"getBounds",
		"H.clustering.ICluster.prototype.getBounds",
		"forEachEntry",
		"H.clustering.ICluster.prototype.forEachEntry",
		"forEachDataPoint",
		"H.clustering.ICluster.prototype.forEachDataPoint",
		"H.clustering.NoisePoint",
		"clusterer",
		"minDepth",
		"clusterer_",
		"entry_",
		"minDepth_",
		"getPosition",
		"H.clustering.NoisePoint.prototype.getPosition",
		"position_",
		"xyToGeo",
		"goog.exportProperty",
		"getWeight",
		"H.clustering.NoisePoint.prototype.getWeight",
		"isCluster",
		"H.clustering.util.returnFalse",
		"getMinZoom",
		"H.clustering.NoisePoint.prototype.getMinZoom",
		"depthLevelOffset_",
		"getData",
		"H.clustering.NoisePoint.prototype.getData",
		"H.clustering.Cluster",
		"node_",
		"maxDepth_",
		"forEachEntryTraverser_",
		"forEachDataPointTraverser_",
		"H.clustering.Cluster.prototype.getPosition",
		"H.clustering.Cluster.prototype.getWeight",
		"H.clustering.util.returnTrue",
		"H.clustering.Cluster.prototype.getMinZoom",
		"H.clustering.Cluster.prototype.getMaxZoom",
		"H.clustering.Cluster.prototype.getBounds",
		"bounds_",
		"H",
		"geo",
		"Rect",
		"fromPoints",
		"H.clustering.Cluster.prototype.forEachEntry",
		"forEachEntryCallback_",
		"H.clustering.Cluster.prototype.forEachEntryTraverser_",
		"clusterWasFound",
		"minWeight",
		"H.clustering.Cluster.prototype.forEachDataPoint",
		"forEachDataPointCallback_",
		"H.clustering.Cluster.prototype.forEachDataPointTraverser_",
		"H.clustering.Clusterer",
		"opt_options",
		"options",
		"val",
		"minZoom",
		"maxZoom",
		"_2_POWER_31",
		"_2_POWER_31_",
		"projection_",
		"mercator",
		"maxZoom_",
		"Math",
		"max",
		"round",
		"log",
		"LN2",
		"quadtree_",
		"_2_POWER_32_",
		"setDataPoints",
		"H.clustering.Clusterer.prototype.setDataPoints",
		"dataPoints",
		"dataPoint",
		"projPoint",
		"math",
		"Point",
		"_2_POWER_32",
		"projection",
		"quadtree",
		"geoToPoint",
		"scale",
		"floor",
		"H.clustering.Clusterer.prototype.xyToGeo",
		"opt_out",
		"H.clustering.Clusterer.prototype.getResults",
		"result",
		"computeResults_",
		"H.clustering.Clusterer.prototype.computeResults_",
		"residualDepth",
		"lastClusterDepth",
		"pendingCluster",
		"finalizePendingCluster_",
		"collectNoisePoints_",
		"H.clustering.Clusterer.prototype.collectNoisePoints_",
		"noisePoints",
		"H.clustering.DefaultTheme",
		"canvas",
		"document",
		"createElement",
		"ctx",
		"getContext",
		"size",
		"width",
		"height",
		"beginPath",
		"strokeStyle",
		"fillStyle",
		"arc",
		"PI",
		"fill",
		"lineWidth",
		"stroke",
		"noisePointIcon_",
		"map",
		"Icon",
		"clusterBackgrounds_",
		"clusterIcons_",
		"H.clustering.DefaultTheme.prototype.createClusterBg_",
		"rgbString",
		"bgKey",
		"existingBg",
		"putImageData",
		"radius",
		"getImageData",
		"getClusterPresentation",
		"H.clustering.DefaultTheme.prototype.getClusterPresentation",
		"cluster",
		"icon",
		"bg",
		"createClusterBg_",
		"getClusterVisual_",
		"textCoord",
		"font",
		"fillText",
		"marker",
		"Marker",
		"setData",
		"getNoisePresentation",
		"H.clustering.DefaultTheme.prototype.getNoisePresentation",
		"noisePoint",
		"H.clustering.DataPoint",
		"lat",
		"lng",
		"opt_weight",
		"H.clustering.Provider",
		"clusteringOptions",
		"objectProvider_",
		"provider",
		"LocalObjectProvider",
		"setParentEventTarget",
		"theme_",
		"cluster_",
		"getRootGroup",
		"rootGroup",
		"removeAll",
		"result_",
		"getResults",
		"applyThemedResults_",
		"lang",
		"inherits",
		"util",
		"EventTarget",
		"EventType",
		"dispatchUpdate",
		"H.clustering.Provider.prototype.dispatchUpdate",
		"dispatchEvent",
		"UPDATE",
		"H.clustering.Provider.prototype.applyThemedResults_",
		"clusters",
		"addObject",
		"setTheme",
		"H.clustering.Provider.prototype.setTheme",
		"theme",
		"clearObjects_",
		"getTheme",
		"H.clustering.Provider.prototype.getTheme",
		"H.clustering.Provider.prototype.setDataPoints",
		"providesDomMarkers",
		"H.clustering.Provider.prototype.providesDomMarkers",
		"requestDomMarkers",
		"H.clustering.Provider.prototype.requestDomMarkers",
		"geoRect",
		"zoomLevel",
		"visiblesOnly",
		"cacheOnly",
		"providesMarkers",
		"H.clustering.Provider.prototype.providesMarkers",
		"requestMarkers",
		"H.clustering.Provider.prototype.requestMarkers",
		"providesSpatials",
		"H.clustering.Provider.prototype.providesSpatials",
		"requestSpatials",
		"H.clustering.Provider.prototype.requestSpatials",
		"getInvalidations",
		"H.clustering.Provider.prototype.getInvalidations",
		"invalidateObject",
		"H.clustering.Provider.prototype.invalidateObject",
		"mapObject",
		"changes",
		"getCopyrights",
		"H.clustering.Provider.prototype.getCopyrights",
		"H.clustering.buildInfo",
		"BuildInfo",
		"get"
	],
	"sourcesContent": [
		"// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will write out Closure's deps file, unless the\n * global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects to\n * include their own deps file(s) from different locations.\n *\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler when --closure_pass\n *     or --mark_as_compiled is specified.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is\n * already defined in the current scope before assigning to prevent\n * clobbering if base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {}; // Identifies this file as the Closure base.\n\n\n/**\n * Reference to the global context.  In most cases this will be 'window'.\n */\ngoog.global = this;\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production js_binary can be easily stripped\n * by specifying --define goog.DEBUG=false to the JSCompiler. For example, most\n * toString() methods should be declared inside an \"if (goog.DEBUG)\" conditional\n * because they are generally used for debugging purposes and it is difficult\n * for the JSCompiler to statically determine whether they are used.\n */\ngoog.DEBUG = true;\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as JSCompiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he), see http://wiki/Main/IIISynonyms.\n */\ngoog.LOCALE = 'en';  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the JSCompiler.\n */\ngoog.TRUSTED_SITE = true;\n\n\n/**\n * Creates object stubs for a namespace.  The presence of one or more\n * goog.provide() calls indicate that the file defines the given\n * objects/namespaces.  Build tools also scan for provide/require statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n * @see goog.require\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice. This is intended\n    // to teach new developers that 'goog.provide' is effectively a variable\n    // declaration. And when JSCompiler transforms goog.provide into a real\n    // variable declaration, the compiled JS should work the same as the raw\n    // JS--even when the raw JS uses goog.provide incorrectly.\n    if (goog.isProvided_(name)) {\n      throw Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name);\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact\n * namespace for the test (e.g. 'goog.stringTest'). The linter will then\n * ignore the extra provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (COMPILED && !goog.DEBUG) {\n    opt_message = opt_message || '';\n    throw Error('Importing test-only code into non-debug environment' +\n                opt_message ? ': ' + opt_message : '.');\n  }\n};\n\n\nif (!COMPILED) {\n\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return !goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares\n   * that 'goog' and 'goog.events' must be namespaces.\n   *\n   * @type {Object}\n   * @private\n   */\n  goog.implicitNamespaces_ = {};\n}\n\n\n/**\n * Builds an object structure for the provided namespace path,\n * ensuring that names that already exist are not overwritten. For\n * example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} opt_object the object to expose at the end of the path.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n * @private\n */\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\n  var parts = name.split('.');\n  var cur = opt_objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && cur.execScript) {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  // Certain browsers cannot parse code in the form for((a in b); c;);\n  // This pattern is produced by the JSCompiler when it collapses the\n  // statement above into the conditional loop below. To prevent this from\n  // happening, use a for-loop and reserve the init logic as below.\n\n  // Parentheses added to eliminate strict JS warning in Firefox.\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && goog.isDef(opt_object)) {\n      // last part and we have an object; use it\n      cur[part] = opt_object;\n    } else if (cur[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Returns an object based on its fully qualified external name.  If you are\n * using a compilation pass that renames property names beware that using this\n * function will not find renamed properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var part; part = parts.shift(); ) {\n    if (goog.isDefAndNotNull(cur[part])) {\n      cur = cur[part];\n    } else {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {Object} obj The namespace to globalize.\n * @param {Object=} opt_global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, opt_global) {\n  var global = opt_global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {Array} provides An array of strings with the names of the objects\n *                         this file provides.\n * @param {Array} requires An array of strings with the names of the objects\n *                         this file requires.\n */\ngoog.addDependency = function(relPath, provides, requires) {\n  if (!COMPILED) {\n    var provide, require;\n    var path = relPath.replace(/\\\\/g, '/');\n    var deps = goog.dependencies_;\n    for (var i = 0; provide = provides[i]; i++) {\n      deps.nameToPath[provide] = path;\n      if (!(path in deps.pathToNames)) {\n        deps.pathToNames[path] = {};\n      }\n      deps.pathToNames[path][provide] = true;\n    }\n    for (var j = 0; require = requires[j]; j++) {\n      if (!(path in deps.requires)) {\n        deps.requires[path] = {};\n      }\n      deps.requires[path][require] = true;\n    }\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an orignal\n// way to do \"debug-mode\" development.  The dependency system can sometimes\n// be confusing, as can the debug DOM loader's asyncronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the\n// script will not load until some point after the current script.  If a\n// namespace is needed at runtime, it needs to be defined in a previous\n// script, or loaded via require() with its registered dependencies.\n// User-defined namespaces may need their own deps file.  See http://go/js_deps,\n// http://go/genjsdeps, or, externally, DepsWriter.\n// http://code.google.com/closure/library/docs/depswriter.html\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work is being done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = true;\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies\n * that works in parallel with the BUILD system. Note that all calls\n * to goog.require will be stripped by the JSCompiler when the\n * --closure_pass option is used.\n * @see goog.provide\n * @param {string} name Namespace to include (as was given in goog.provide())\n *     in the form \"goog.package.part\".\n */\ngoog.require = function(name) {\n\n  // if the object already exists we do not need do do anything\n  // TODO(arv): If we start to support require based on file name this has\n  //            to change\n  // TODO(arv): If we allow goog.foo.* this has to change\n  // TODO(arv): If we implement dynamic load after page load we should probably\n  //            not remove this code for the compiled output\n  if (!COMPILED) {\n    if (goog.isProvided_(name)) {\n      return;\n    }\n\n    if (goog.ENABLE_DEBUG_LOADER) {\n      var path = goog.getPathFromDeps_(name);\n      if (path) {\n        goog.included_[path] = true;\n        goog.writeScripts_();\n        return;\n      }\n    }\n\n    var errorMessage = 'goog.require could not find: ' + name;\n    if (goog.global.console) {\n      goog.global.console['error'](errorMessage);\n    }\n\n\n      throw Error(errorMessage);\n\n  }\n};\n\n\n/**\n * Path for included scripts\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to write out Closure's deps file. By default,\n * the deps are written.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The function is passed the script source, which is a relative URI. It should\n * return true if the script was imported, false otherwise.\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * The identity function. Returns its first argument.\n *\n * @param {*=} opt_returnValue The single value that will be returned.\n * @param {...*} var_args Optional trailing arguments. These are ignored.\n * @return {?} The first argument. We can't know the type -- just pass it along\n *      without type.\n * @deprecated Use goog.functions.identity instead.\n */\ngoog.identityFunction = function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n *\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error\n * will be thrown when bar() is invoked.\n *\n * Note: This does not take the name of the function to override as\n * an argument because that would make it more difficult to obfuscate\n * our JavaScript code.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be\n *   overridden.\n */\ngoog.abstractMethod = function() {\n  throw Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a {@code getInstance} static method that always return the same instance\n * object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n */\ngoog.addSingletonGetter = function(ctor) {\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    return ctor.instance_ = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the {@code goog.testing.singleton} module. The compiler\n * removes this variable if unused.\n * @type {!Array.<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\nif (!COMPILED && goog.ENABLE_DEBUG_LOADER) {\n  /**\n   * Object used to keep track of urls that have already been added. This\n   * record allows the prevention of circular dependencies.\n   * @type {Object}\n   * @private\n   */\n  goog.included_ = {};\n\n\n  /**\n   * This object is used to keep track of dependencies and other data that is\n   * used for loading scripts\n   * @private\n   * @type {Object}\n   */\n  goog.dependencies_ = {\n    pathToNames: {}, // 1 to many\n    nameToPath: {}, // 1 to 1\n    requires: {}, // 1 to many\n    // used when resolving dependencies to prevent us from\n    // visiting the file twice\n    visited: {},\n    written: {} // used to keep track of script files we have written\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    var doc = goog.global.document;\n    return typeof doc != 'undefined' &&\n           'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * Tries to detect the base path of the base.js script that bootstraps Closure\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH) {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    var doc = goog.global.document;\n    var scripts = doc.getElementsByTagName('script');\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var src = scripts[i].src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n\n  /**\n   * Imports a script if, and only if, that script hasn't already been imported.\n   * (Must be called at execution time)\n   * @param {string} src Script source.\n   * @private\n   */\n  goog.importScript_ = function(src) {\n    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||\n        goog.writeScriptTag_;\n    if (!goog.dependencies_.written[src] && importScript(src)) {\n      goog.dependencies_.written[src] = true;\n    }\n  };\n\n\n  /**\n   * The default implementation of the import function. Writes a script tag to\n   * import the script.\n   *\n   * @param {string} src The script source.\n   * @return {boolean} True if the script was imported, false otherwise.\n   * @private\n   */\n  goog.writeScriptTag_ = function(src) {\n    if (goog.inHtmlDocument_()) {\n      var doc = goog.global.document;\n\n      // If the user tries to require a new symbol after document load,\n      // something has gone terribly wrong. Doing a document.write would\n      // wipe out the page.\n      if (doc.readyState == 'complete') {\n        // Certain test frameworks load base.js multiple times, which tries\n        // to write deps.js each time. If that happens, just fail silently.\n        // These frameworks wipe the page between each load of base.js, so this\n        // is OK.\n        var isDeps = /\\bdeps.js$/.test(src);\n        if (isDeps) {\n          return false;\n        } else {\n          throw Error('Cannot write \"' + src + '\" after document load');\n        }\n      }\n\n      doc.write(\n          '<script type=\"text/javascript\" src=\"' + src + '\"></' + 'script>');\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * Resolves dependencies based on the dependencies added using addDependency\n   * and calls importScript_ in the correct order.\n   * @private\n   */\n  goog.writeScripts_ = function() {\n    // the scripts we need to write this time\n    var scripts = [];\n    var seenScript = {};\n    var deps = goog.dependencies_;\n\n    function visitNode(path) {\n      if (path in deps.written) {\n        return;\n      }\n\n      // we have already visited this one. We can get here if we have cyclic\n      // dependencies\n      if (path in deps.visited) {\n        if (!(path in seenScript)) {\n          seenScript[path] = true;\n          scripts.push(path);\n        }\n        return;\n      }\n\n      deps.visited[path] = true;\n\n      if (path in deps.requires) {\n        for (var requireName in deps.requires[path]) {\n          // If the required name is defined, we assume that it was already\n          // bootstrapped by other means.\n          if (!goog.isProvided_(requireName)) {\n            if (requireName in deps.nameToPath) {\n              visitNode(deps.nameToPath[requireName]);\n            } else {\n              throw Error('Undefined nameToPath for ' + requireName);\n            }\n          }\n        }\n      }\n\n      if (!(path in seenScript)) {\n        seenScript[path] = true;\n        scripts.push(path);\n      }\n    }\n\n    for (var path in goog.included_) {\n      if (!deps.written[path]) {\n        visitNode(path);\n      }\n    }\n\n    for (var i = 0; i < scripts.length; i++) {\n      if (scripts[i]) {\n        goog.importScript_(goog.basePath + scripts[i]);\n      } else {\n        throw Error('Undefined script input');\n      }\n    }\n  };\n\n\n  /**\n   * Looks at the dependency rules and tries to determine the script file that\n   * fulfills a particular rule.\n   * @param {string} rule In the form goog.namespace.Class or project.script.\n   * @return {?string} Url corresponding to the rule, or null.\n   * @private\n   */\n  goog.getPathFromDeps_ = function(rule) {\n    if (rule in goog.dependencies_.nameToPath) {\n      return goog.dependencies_.nameToPath[rule];\n    } else {\n      return null;\n    }\n  };\n\n  goog.findBasePath_();\n\n  // Allow projects to manage the deps files themselves.\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.importScript_(goog.basePath + 'deps.js');\n  }\n}\n\n\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {*} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (value) {\n      // Check these first, so we can avoid calling Object.prototype.toString if\n      // possible.\n      //\n      // IE improperly marshals tyepof across execution contexts, but a\n      // cross-context object will still return false for \"instanceof Object\".\n      if (value instanceof Array) {\n        return 'array';\n      } else if (value instanceof Object) {\n        return s;\n      }\n\n      // HACK: In order to use an Object prototype method on the arbitrary\n      //   value, the compiler requires the value be cast to type Object,\n      //   even though the ECMA spec explicitly allows it.\n      var className = Object.prototype.toString.call(\n          /** @type {Object} */ (value));\n      // In Firefox 3.6, attempting to access iframe window objects' length\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\n      // here.\n      if (className == '[object Window]') {\n        return 'object';\n      }\n\n      // We cannot always use constructor == Array or instanceof Array because\n      // different frames have different Array objects. In IE6, if the iframe\n      // where the array was created is destroyed, the array loses its\n      // prototype. Then dereferencing val.splice here throws an exception, so\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\n      // so that will work. In this case, this function will return false and\n      // most array functions will still work because the array is still\n      // array-like (supports length and []) even though it has lost its\n      // prototype.\n      // Mark Miller noticed that Object.prototype.toString\n      // allows access to the unforgeable [[Class]] property.\n      //  15.2.4.2 Object.prototype.toString ( )\n      //  When the toString method is called, the following steps are taken:\n      //      1. Get the [[Class]] property of this object.\n      //      2. Compute a string value by concatenating the three strings\n      //         \"[object \", Result(1), and \"]\".\n      //      3. Return Result(2).\n      // and this behavior survives the destruction of the execution context.\n      if ((className == '[object Array]' ||\n           // In IE all non value types are wrapped as objects across window\n           // boundaries (not iframe though) so we have to do object detection\n           // for this edge case\n           typeof value.length == 'number' &&\n           typeof value.splice != 'undefined' &&\n           typeof value.propertyIsEnumerable != 'undefined' &&\n           !value.propertyIsEnumerable('splice')\n\n          )) {\n        return 'array';\n      }\n      // HACK: There is still an array case that fails.\n      //     function ArrayImpostor() {}\n      //     ArrayImpostor.prototype = [];\n      //     var impostor = new ArrayImpostor;\n      // this can be fixed by getting rid of the fast path\n      // (value instanceof Array) and solely relying on\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\n      // but that would require many more function calls and is not warranted\n      // unless closure code is receiving objects from untrusted sources.\n\n      // IE in cross-window calls does not correctly marshal the function type\n      // (it appears just as an object) so we cannot use just typeof val ==\n      // 'function'. However, if the object has a call property, it is a\n      // function.\n      if ((className == '[object Function]' ||\n          typeof value.call != 'undefined' &&\n          typeof value.propertyIsEnumerable != 'undefined' &&\n          !value.propertyIsEnumerable('call'))) {\n        return 'function';\n      }\n\n\n    } else {\n      return 'null';\n    }\n\n  } else if (s == 'function' && typeof value.call == 'undefined') {\n    // In Safari typeof nodeList returns 'function', and on Firefox\n    // typeof behaves similarly for HTML{Applet,Embed,Object}Elements\n    // and RegExps.  We would like to return object for those and we can\n    // detect an invalid function by making sure that the function\n    // object has a call method.\n    return 'object';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the specified value is not |undefined|.\n * WARNING: Do not use this to test if an object has a property. Use the in\n * operator instead.  Additionally, this function assumes that the global\n * undefined variable has not been redefined.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\ngoog.isDef = function(val) {\n  return val !== undefined;\n};\n\n\n/**\n * Returns true if the specified value is |null|\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is null.\n */\ngoog.isNull = function(val) {\n  return val === null;\n};\n\n\n/**\n * Returns true if the specified value is defined and not null\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is an array\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArray = function(val) {\n  return goog.typeOf(val) == 'array';\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like\n * the value needs to be an object and have a getFullYear() function.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is a string\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Returns true if the specified value is a boolean\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\ngoog.isBoolean = function(val) {\n  return typeof val == 'boolean';\n};\n\n\n/**\n * Returns true if the specified value is a number\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\ngoog.isNumber = function(val) {\n  return typeof val == 'number';\n};\n\n\n/**\n * Returns true if the specified value is a function\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.isFunction = function(val) {\n  return goog.typeOf(val) == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays\n * and functions.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further\n * calls with the same object as a parameter returns the same value. The unique\n * ID is guaranteed to be unique across the current session amongst objects that\n * are passed into {@code getUid}. There is no guarantee that the ID is unique\n * or consistent across sessions. It is unsafe to generate unique ID for\n * function prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\n  // and SubClass.prototype will be the same.\n  return obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using {@code goog.getUid} in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // DOM nodes in IE are not instance of Object and throws exception\n  // for delete. Instead we try to use removeAttribute\n  if ('removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n  /** @preserveTry */\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure javascript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Adds a hash code field to an object. The hash code is unique for the\n * given object.\n * @param {Object} obj The object to get the hash code for.\n * @return {number} The hash code for the object.\n * @deprecated Use goog.getUid instead.\n */\ngoog.getHashCode = goog.getUid;\n\n\n/**\n * Removes the hash code field from an object.\n * @param {Object} obj The object to remove the field from.\n * @deprecated Use goog.removeUid instead.\n */\ngoog.removeHashCode = goog.removeUid;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (obj.clone) {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {Function} fn A function to partially apply.\n * @param {Object|undefined} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @private\n * @suppress {deprecated} The compiler thinks that Function.prototype.bind\n *     is deprecated because some people have declared a pure-JS version.\n *     Only the pure-JS version is truly deprecated.\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {Function} fn A function to partially apply.\n * @param {Object|undefined} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of |this| 'pre-specified'.<br><br>\n *\n * Remaining arguments specified at call-time are appended to the pre-\n * specified ones.<br><br>\n *\n * Also see: {@link #partial}.<br><br>\n *\n * Usage:\n * <pre>var barMethBound = bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default\n      // Chrome extension environment. This means that for Chrome extensions,\n      // they get the implementation of Function.prototype.bind that\n      // calls goog.bind instead of the native one. Even worse, we don't want\n      // to introduce a circular dependency between goog.bind and\n      // Function.prototype.bind, so we have to hack this to make sure it\n      // works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Prepend the bound arguments to the current arguments.\n    var newArgs = Array.prototype.slice.call(arguments);\n    newArgs.unshift.apply(newArgs, args);\n    return fn.apply(this, newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n * @param {Object} target Target.\n * @param {Object} source Source.\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n */\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\n  // Unary plus operator converts its operand to a number which in the case of\n  // a date is done by calling getTime().\n  return +new Date();\n});\n\n\n/**\n * Evals javascript in the global scope.  In IE this uses execScript, other\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\n * global scope (for example, in Safari), appends a script tag instead.\n * Throws an exception if neither execScript or eval is defined.\n * @param {string} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  if (goog.global.execScript) {\n    goog.global.execScript(script, 'JavaScript');\n  } else if (goog.global.eval) {\n    // Test to see if eval works\n    if (goog.evalWorksForGlobals_ == null) {\n      goog.global.eval('var _et_ = 1;');\n      if (typeof goog.global['_et_'] != 'undefined') {\n        delete goog.global['_et_'];\n        goog.evalWorksForGlobals_ = true;\n      } else {\n        goog.evalWorksForGlobals_ = false;\n      }\n    }\n\n    if (goog.evalWorksForGlobals_) {\n      goog.global.eval(script);\n    } else {\n      var doc = goog.global.document;\n      var scriptElt = doc.createElement('script');\n      scriptElt.type = 'text/javascript';\n      scriptElt.defer = false;\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\n      scriptElt.appendChild(doc.createTextNode(script));\n      doc.body.appendChild(scriptElt);\n      doc.body.removeChild(scriptElt);\n    }\n  } else {\n    throw Error('goog.globalEval not available');\n  }\n};\n\n\n/**\n * Indicates whether or not we can call 'eval' directly to eval code in the\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\n * empirically tests whether eval works for globals). @see goog.globalEval\n * @type {?boolean}\n * @private\n */\ngoog.evalWorksForGlobals_ = null;\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @type {Object|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a\n * hyphen and passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which\n * these mappings are used. In the BY_PART style, each part (i.e. in\n * between hyphens) of the passed in css name is rewritten according\n * to the map. In the BY_WHOLE style, the full css name is looked up in\n * the map directly. If a rewrite is not specified by the map, the\n * compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls\n * to goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x= 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed\n * only the modifier will be processed, as it is assumed the first\n * argument was generated as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename = goog.cssNameMappingStyle_ == 'BY_WHOLE' ?\n        getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  if (opt_modifier) {\n    return className + '-' + rename(opt_modifier);\n  } else {\n    return rename(className);\n  }\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --closure_pass flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {Object|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object=} opt_values Map of place holder name to value.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values) {\n  var values = opt_values || {};\n  for (var key in values) {\n    var value = ('' + values[key]).replace(/\\$/g, '$$$$');\n    str = str.replace(new RegExp('\\\\{\\\\$' + key + '\\\\}', 'gi'), value);\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primtive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated,\n * unless they are exported in turn via this function or\n * goog.exportProperty\n *\n * <p>Also handy for making public items that are defined in anonymous\n * closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction',\n *                       Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n */\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { }\n *\n * function ChildClass(a, b, c) {\n *   goog.base(this, a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // works\n * </pre>\n *\n * In addition, a superclass' implementation of a method can be invoked\n * as follows:\n *\n * <pre>\n * ChildClass.prototype.foo = function(a) {\n *   ChildClass.superClass_.foo.call(this, a);\n *   // other code\n * };\n * </pre>\n *\n * @param {Function} childCtor Child class.\n * @param {Function} parentCtor Parent class.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {};\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n};\n\n\n/**\n * Call up to the superclass.\n *\n * If this is called from a constructor, then this calls the superclass\n * contructor with arguments 1-N.\n *\n * If this is called from a prototype method, then you must pass\n * the name of the method as the second argument to this function. If\n * you do not, you will get a runtime error. This calls the superclass'\n * method with arguments 2-N.\n *\n * This function only works if you use goog.inherits to express\n * inheritance relationships between your classes.\n *\n * This function is a compiler primitive. At compile-time, the\n * compiler will do macro expansion to remove a lot of\n * the extra overhead that this function introduces. The compiler\n * will also enforce a lot of the assumptions that this function\n * makes, and treat it as a compiler error if you break them.\n *\n * @param {!Object} me Should always be \"this\".\n * @param {*=} opt_methodName The method name if calling a super method.\n * @param {...*} var_args The rest of the arguments.\n * @return {*} The return value of the superclass method.\n */\ngoog.base = function(me, opt_methodName, var_args) {\n  var caller = arguments.callee.caller;\n  if (caller.superClass_) {\n    // This is a constructor. Call the superclass constructor.\n    return caller.superClass_.constructor.apply(\n        me, Array.prototype.slice.call(arguments, 1));\n  }\n\n  var args = Array.prototype.slice.call(arguments, 2);\n  var foundCaller = false;\n  for (var ctor = me.constructor;\n       ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {\n    if (ctor.prototype[opt_methodName] === caller) {\n      foundCaller = true;\n    } else if (foundCaller) {\n      return ctor.prototype[opt_methodName].apply(me, args);\n    }\n  }\n\n  // If we did not find the caller in the prototype chain,\n  // then one of two things happened:\n  // 1) The caller is an instance method.\n  // 2) This method was not called by the right caller.\n  if (me[opt_methodName] === caller) {\n    return me.constructor.prototype[opt_methodName].apply(me, args);\n  } else {\n    throw Error(\n        'goog.base called from a method of one name ' +\n        'to a method of a different name');\n  }\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the\n * aliases applied.  In uncompiled code the function is simply run since the\n * aliases as written are valid JavaScript.\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *    (e.g. \"var Timer = goog.Timer\").\n */\ngoog.scope = function(fn) {\n  fn.call(goog.global);\n};\n\n\n",
		"/**\n * Utilities used across clustering module\n * @namespace\n */\ngoog.provide('H.clustering.util');\n\n\n/**\n * checks if object is defined\n * @param {*} obj\n * @return {boolean}\n */\nH.clustering.util.isDef = function(obj) {\n  'use strict';\n  return typeof(obj) !== 'undefined';\n};\n\n\n/**\n * @ignore\n * @const\n */\nH.clustering.util.Infinity = 1 / 0;\n\n\n/**\n * Returns true\n * @return {boolean}\n */\nH.clustering.util.returnTrue = function() {\n  'use strict';\n  return true;\n};\n\n\n/**\n * Returns false\n * @return {boolean}\n */\nH.clustering.util.returnFalse = function() {\n  'use strict';\n  return false;\n};\n\n\n/**\n * @ignore\n */\nH.clustering.util.UNDEF = /** @type {undefined} */ (eval(''));\n\n",
		"goog.provide('H.clustering.quadtree.Node');\n\ngoog.require('H.clustering.util');\n\n\n\n//################################################  Constructor  #######################################################\n/**\n * A quadtree node holds the tree hierarchy informations (parent node and child nodes) to traverse the QuadTreee.\n * It holds also min/mid/max values to specify the x/y range of the node for performance optimization as far as a list\n * of it's entries. It contains also information for clustering computation.\n * @constructor\n * @param {H.clustering.quadtree.Node|undefined} parent\n *        The parent node or {@code undefined} if it is a root node\n * @param {number} childNodeAddr\n *        The address of the child node (TL, TR, BL or BR) or {@code NaN} if it is a root node\n * @param {number=} opt_minX The minimum x value of the node, mandatory if no parent was passed (it's a root node)\n * @param {number=} opt_minY The minimum y value of the node, mandatory if no parent was passed (it's a root node)\n * @param {number=} opt_maxX The maximum x value of the node, mandatory if no parent was passed (it's a root node)\n * @param {number=} opt_maxY The maximum y value of the node, mandatory if no parent was passed (it's a root node)\n */\nH.clustering.quadtree.Node = function(parent, childNodeAddr, opt_minX, opt_minY, opt_maxX, opt_maxY) {\n  'use strict';\n\n  /**\n   * The address of this child node (TL, TR, BL or BR)\n   * @type {number}\n   */\n  this.addr = childNodeAddr;\n\n  // We got a parent node reference?\n  if (parent) {\n\n    /**\n     * The reference to the parent node or undefined if it has no no parent node (root)\n     * @type {?H.clustering.quadtree.Node}\n     */\n    this.parent = parent;\n\n    // Compute the min, mid and max values out of the min/mid/max values of the parent node:\n\n    // It's a child node in the right half?\n    if (childNodeAddr & 1 /*RIGHT*/) {\n      opt_minX = parent[8 /*MID_X*/];\n      opt_maxX = parent[5 /*MAX_X*/];\n    } else {\n      opt_minX = parent[7 /*MIN_X*/];\n      opt_maxX = parent[8 /*MID_X*/];\n    }\n    // It's a child node in the bottom half?\n    if (childNodeAddr & 2 /*BOTTOM*/) {\n      opt_minY = parent[9 /*MID_Y*/];\n      opt_maxY = parent[6 /*MAX_Y*/];\n    } else {\n      opt_minY = parent[4 /*MIN_Y*/];\n      opt_maxY = parent[9 /*MID_Y*/];\n    }\n  }\n\n  /**\n   * The minimum x (left) value (inclusive)\n   * @type {number}\n   * @private\n   */\n  this[7 /*MIN_X*/] = opt_minX;\n\n  /**\n   * The maximum x (right) value (exclusive)\n   * @type {number}\n   * @private\n   */\n  this[5 /*MAX_X*/] = opt_maxX;\n\n  /**\n   * The middle x (center) value\n   * @type {number}\n   * @private\n   */\n  this[8 /*MID_X*/] = (opt_minX + opt_maxX) / 2;\n\n  /**\n   * The minimum y (top) value (inclusive)\n   * @type {number}\n   * @private\n   */\n  this[4 /*MIN_Y*/] = opt_minY;\n\n  /**\n   * The maximum y (bottom) value (exclusive)\n   * @type {number}\n   * @private\n   */\n  this[6 /*MAX_Y*/] = opt_maxY;\n\n  /**\n   * The middle y (center) value\n   * @type {number}\n   * @private\n   */\n  this[9 /*MID_Y*/] = (opt_minY + opt_maxY) / 2;\n\n};\n\nif (goog.DEBUG) {\n\n\n  /**\n   * Returns a string representing the address of the node by concatenating (from right to left) its child-node-address\n   * and all child-node-addresses of the nodes in the ancestor axis\n   * @return {string} A string in form of e.g. '2013'\n   * @override\n   */\n  H.clustering.quadtree.Node.prototype.toString = function() {\n    'use strict';\n    var str = '',\n        node = this;\n    while (node.parent) {\n      str = node.addr + str;\n      node = node.parent;\n    }\n    return (str ? 'N' + str : 'R') +\n        (this.clusterWeight !== undefined ? ' W' + this.clusterWeight : '') +\n        (this.entries ? ' E' + this.entries.length : '');\n  };\n\n}\n\n\n/**\n * The number of child-nodes\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.childCount = 0;\n\n\n/**\n * To fetch a specified child node. If the child node doesn't exists, a new Node is created and registered.\n * @param {number} childNodeAddr The address of the child-node, one of TL, TR, BL, BR\n * @return {H.clustering.quadtree.Node} The requested child node\n */\nH.clustering.quadtree.Node.prototype.getChildNode = function(childNodeAddr) {\n  'use strict';\n  return this[childNodeAddr] ||\n      (++this.childCount, this[childNodeAddr] = new H.clustering.quadtree.Node(this, childNodeAddr));\n};\n\n\n/**\n * To remove a child node.\n * @param {H.clustering.quadtree.Node} child\n */\nH.clustering.quadtree.Node.prototype.removeChild = function(child) {\n  'use strict';\n  var childAddr = child.addr;\n  // Is it is a child of this node?\n  if (this[childAddr] === child) {\n    // Delete the parent-child and child-parent relations:\n    delete this[childAddr];\n    delete child.parent;\n    // Update the \"childCount\" property:\n    --this.childCount;\n  }\n};\n\n\n/**\n * To traverse a quadtree node in \"depth first\" mode. Nodes are traversed in pre-order (top-left, top-right, bottom-left\n * and bottom-right).\n * @param {function(H.clustering.quadtree.Node, number): (boolean|undefined)} callback\n *      The function to invoke for each node. It gets the currently traversed node and the depth as arguments.\n *      If the callback returns {@code true} for a the given node, then the children of that node are not traversed;\n *      otherwise, all child nodes are traversed.\n * @param {number} remainingDepth The number levels on descendant axis to traverse.\n */\nH.clustering.quadtree.Node.prototype.traverse = function(callback, remainingDepth) {\n  'use strict';\n  var depth = 0,\n      current = this;\n  while (current = current.parent) {\n    ++depth;\n  }\n  this.traverseInternal(callback, remainingDepth, depth);\n};\n\n\n/**\n * Same as traverse(), but with an additional argument depth which will be implict increased for each level.\n * @param {function(H.clustering.quadtree.Node, number): (boolean|undefined)} callback\n * @param {number} remainingDepth\n * @param {number} depth\n */\nH.clustering.quadtree.Node.prototype.traverseInternal = function(callback, remainingDepth, depth) {\n  'use strict';\n  var i,\n      child;\n  // The callback signals to traverse the child nodes and we have remaining depth levels?\n  if (!callback(this, depth) && remainingDepth--) {\n    ++depth;\n    // Iterate over all child nodes (TL: 0 ... BR: 3):\n    for (i = 0; i < 4; i++) {\n      if (child = this[i]) {\n        child.traverseInternal(callback, remainingDepth, depth);\n      }\n    }\n  }\n};\n\n\n/**\n * To add an entry and register it to the node\n * @param {H.clustering.quadtree.Tree.Entry} entry The entry to add\n */\nH.clustering.quadtree.Node.prototype.addEntry = function(entry) {\n  'use strict';\n  (this.entries || (this.entries = [])).push(entry);\n};\n\n\n/**\n * Returns the first encountered child node (order is TL, TR, BL, BR) or {@code null} if the node is a leaf.\n * @return {?H.clustering.quadtree.Node}\n */\nH.clustering.quadtree.Node.prototype.getFirstChild = function() {\n  'use strict';\n  return this.childCount ? this[0 /*TL*/] || this[1 /*TR*/] || this[2 /*BL*/] || this[3 /*BR*/] : null;\n};\n\n\n//--------------------------------------------  CLUSTERING DATA  -------------------------------------------------------\n/**\n * The x-component of the mass center for all cumulated entries\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.clusterX = 0;\n\n\n/**\n * The y-component of the mass center for all cumulated entries\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.clusterY = 0;\n\n\n/**\n * The weight for all cumulated entries\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.clusterWeight = 0;\n\n\n/**\n * Stores the minimum x boundary for all cumulated entries of the cluster\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.clusterMinX;\n\n\n/**\n * Stores the minimum y boundary for all cumulated entries of the cluster\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.clusterMinY;\n\n\n/**\n * Stores the maximum x boundary for all cumulated entries of the cluster\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.clusterMaxX;\n\n\n/**\n * Stores the maximum y boundary for all cumulated entries of the cluster\n * @type {number}\n */\nH.clustering.quadtree.Node.prototype.clusterMaxY;\n\n\n/**\n * Adds the given entry to the cumulated clustering data\n *\n * @param {number} x The x-component of the entry\n * @param {number} y The y-component of the entry\n * @param {number} weight The weight of the entry\n */\nH.clustering.quadtree.Node.prototype.addClusterData = function(x, y, weight) {\n  'use strict';\n\n  this.clusterX += x * weight;\n  this.clusterY += y * weight;\n  this.clusterWeight += weight;\n\n  // Update the cluster boundaries:\n  if (this.clusterMinX === H.clustering.util.UNDEF) {\n    this.clusterMinX = this.clusterMaxX = x;\n    this.clusterMinY = this.clusterMaxY = y;\n  } else {\n    if (x < this.clusterMinX) {\n      this.clusterMinX = x;\n    } else if (x > this.clusterMaxX) {\n      this.clusterMaxX = x;\n    }\n    if (y < this.clusterMinY) {\n      this.clusterMinY = y;\n    } else if (y > this.clusterMaxY) {\n      this.clusterMaxY = y;\n    }\n  }\n};\n\n\n/**\n * Copies clusterData from the node's parent, needed, when an entry was moved to a child node during insertPoint.\n * In this case the node and the parent node get the same clustering date\n *\n * @param {H.clustering.quadtree.Node} node The node from where the cluster data should be copied\n */\nH.clustering.quadtree.Node.prototype.copyClusterDataFrom = function(node) {\n  this.clusterX = node.clusterX;\n  this.clusterY = node.clusterY;\n  this.clusterWeight = node.clusterWeight;\n  this.clusterMinX = node.clusterMinX;\n  this.clusterMinY = node.clusterMinY;\n  this.clusterMaxX = node.clusterMaxX;\n  this.clusterMaxY = node.clusterMaxY;\n};\n",
		"goog.provide('H.clustering.quadtree.Tree');\n\ngoog.require('H.clustering.quadtree.Node');\ngoog.require('H.clustering.util');\n\n\n\n/**\n * A quadtree to store and retrieve geographical points and to create clustering meta data for them\n * @constructor\n * @param {number=} opt_depth To limit the depth levels of the tree,\n *    default is {@code 10} if the value is a falsy.\n * @param {number=} opt_radiusX The root node's half size on x-axis,\n *    default is {@code 1} if the value is a falsy.\n * @param {number=} opt_radiusY The root node's half size on y-axis,\n *    default is {@code 1} if the value is a falsy.\n * @param {number=} opt_centerX The x coordinate of the root node's center,\n *    default is {@code 0} if the value is a falsy.\n * @param {number=} opt_centerY The y coordinate of the root node's center,\n *    default is {@code 0} if the value is a falsy.\n */\nH.clustering.quadtree.Tree = function(opt_depth, opt_radiusX, opt_radiusY, opt_centerX, opt_centerY) {\n  'use strict';\n\n  // The clustering.QuadTree is a \"code fusion\" of H.util.QuadTree (without extremes support) and\n  // H.util.PointQuadTree plus additional functionality to provide clustering.\n  // That's caused by the fact that we can't just extend H.util.PointQuadTree from within a ext module yet\n\n  /**\n   * Holds a depth limit for the quadtree.\n   * @protected\n   * @type {number}\n   */\n  this.maxDepth = opt_depth || 10;\n\n  /**\n   * Keeps a reference to the root node of this quadtree.\n   * @type {?H.clustering.quadtree.Node}\n   */\n  this.root = null; // Will be initial set by init()\n\n  /**\n   * Holds a reference to the first node which holds more then one child-nodes or one or more entries. Using the head\n   * instead of root optimizes read operations because during the intersection operation it ignores all parent nodes of\n   * the head but starts directly on the head node.\n   * @protected\n   * @type {?H.clustering.quadtree.Node}\n   */\n  this.head; // Will be initial set by init()\n\n  /**\n   * Holds the x component of the root node's center\n   * @private\n   * @type {number}\n   */\n  this.centerX_ = opt_centerX || 0;\n\n  /**\n   * Holds the y component of the root node's center.\n   * @private\n   * @type {number}\n   */\n  this.centerY_ = opt_centerY || 0;\n\n  /**\n   * Holds the starting axis radius of the quadtree in x direction.\n   * @private\n   * @type {number}\n   */\n  this.radiusX_ = opt_radiusX || 1;\n\n  /**\n  * Holds the starting axis radius of the quadtree in y direction.\n  * @private\n  * @type {number}\n  */\n  this.radiusY_ = opt_radiusY || 1;\n\n  // Invoke init() to set up internal state:\n  this.init();\n};\n\n\n//###############################################  EXTREMES  ###########################################################\n/**\n * Data structure to store the minimum and maximum extreme values for x and y. The indexes are:\n *\n * * 0: The minimum y value (top)\n * * 1: The maximum x value (right)\n * * 2: The maximum y value (bottom)\n * * 3: The minimum x value (left)\n *\n * @protected\n * @typedef {Object.<number, number>}\n */\nH.clustering.quadtree.Tree.Extremes;\n\n\n//#############################################  INIT / CLEANUP  #######################################################\n/**\n * This method initializes the root and the head node\n */\nH.clustering.quadtree.Tree.prototype.init = function() {\n  'use strict';\n\n  this.head = this.root = new H.clustering.quadtree.Node(\n      null,\n      NaN,\n      this.centerX_ - this.radiusX_,\n      this.centerY_ - this.radiusY_,\n      this.centerX_ + this.radiusX_,\n      this.centerY_ + this.radiusY_);\n};\n\n\n/**\n * To cleanup a tree by deleteing all child-parent references and entries collection.\n * Afterwards init() is called to initialze the root and head.\n */\nH.clustering.quadtree.Tree.prototype.cleanup = function() {\n  'use strict';\n  this.cleanup_(this.root);\n  this.init();\n};\n\n\n/**\n * A recursively called cleanup method, invoked by cleanup() with the root node as argument\n * @private\n * @param {H.clustering.quadtree.Node} node The current node to cleanup\n */\nH.clustering.quadtree.Tree.prototype.cleanup_ = function(node) {\n  'use strict';\n  var i,\n      child;\n  // Iterate over all child nodes (TL: 0 ... BR: 3). In comparisioon with traverse() at first we iterate recursively\n  // over the node's children, then we processing the node:\n  for (i = 0; i < 4; i++) {\n    if (child = node[i]) {\n      this.cleanup_(child);\n      delete node[i];\n    }\n  }\n  delete node.parent;\n  delete node.entries;\n};\n\n\n//##################################################  HEAD  ############################################################\n/**\n * Returns the head node of this quadtree\n * @return {H.clustering.quadtree.Node}\n */\nH.clustering.quadtree.Tree.prototype.getHead = function() {\n  'use strict';\n  return this.head;\n};\n\n\n/**\n * When an entry is inserted into the tree the first parent node which is shared by all entries is computed\n * and used as the new head node. Head is used for intersection to spare unnecessary traversing from\n * root to head node. If the last entry of a node is removed and this node is the head node than head is updated to\n * an ancestor of the prvious head\n * @example\n *\n *   ROOT                    HEAD\n * +------+    +------+    +------+       +-------+       +-------+\n * | node +----> node +----> node +--+----> entry |   +---> entry |\n * +------+    +------+    +------+  |    +-------+   |   +-------+\n *                                   |                |\n *                                   |    +-------+   |   +------+    +-------+\n *                                   +----> node  +---+---> leaf +----> entry |\n *                                        +-------+       +------+    +-------+\n * @protected\n * @param {H.clustering.quadtree.Node=} opt_node The new added node or ommited, if a node was removed\n */\nH.clustering.quadtree.Tree.prototype.adjustHead = function(opt_node) {\n  'use strict';\n  var head = this.head,\n      cur,\n      childCount;\n  // A node was added, adjust the head to a node on self/ancestor axes which has entries or more than one child-node:\n  if (opt_node) {\n    cur = opt_node;\n    if (cur !== head) {\n      head = cur;\n      while (cur = cur.parent) {\n        // The node has entries or more than 1 child node?\n        if (cur.entries || cur.childCount > 1) {\n          head = cur;\n        }\n      }\n    }\n  // Invoked after an entry was removed, tree is already cleaned up, head points to an ancestor of the most recently\n  // removed node (either a node with entries and/or child-nodes or the root node).\n  // Adjust the head to a node on self/descendant axes which has entries or more than one child-node:\n  } else {\n    // While head has no entries and less than 2 child nodes:\n    while (!head.entries && (childCount = head.childCount) < 2) {\n      // Does the head has at least one child-node?\n      if (childCount) {\n        head = cur;\n      } else {\n        // We hit a leaf node, break up:\n        break;\n      }\n    }\n  }\n  this.head = head;\n};\n\n\n//#################################################  INSERT  ###########################################################\n/**\n * Checks if the given coordinates fit into the given extremes\n * @protected\n * @param {number} minX The minimum x coordinate.\n * @param {number} minY The minimum y coordinate.\n * @param {number} maxX The maximum x coordinate.\n * @param {number} maxY The maximum y coordinate.\n * @param {H.clustering.quadtree.Tree.Extremes} extremes\n * @return {boolean}\n */\nH.clustering.quadtree.Tree.fitsIntoExtremes = function(minX, minY, maxX, maxY, extremes) {\n  'use strict';\n  return minX >= extremes[7 /*MIN_X*/] &&\n      minY >= extremes[4 /*MIN_Y*/] &&\n      maxX <= extremes[5 /*MAX_X*/] &&\n      maxY <= extremes[6 /*MAX_Y*/];\n};\n\n\n/**\n * Inserts a point entry (defined by a x and y coordinate) into the tree.\n * @method\n * @param {number} x The x component of the coordinate.\n * @param {number} y The y component of the coordinate.\n * @param {number} weight The weight of the entry\n * @param {*=} opt_data optional data which can be insterted int oquadtree\n * @return {?H.clustering.quadtree.Tree.Entry} The created quadtree entry or {@code null} if not supported.\n */\nH.clustering.quadtree.Tree.prototype.insertPoint = function(x, y, weight, opt_data) {\n  'use strict';\n  var root = this.root;\n\n  if (!H.clustering.quadtree.Tree.fitsIntoExtremes(x, y, x, y,\n      /** @type {H.clustering.quadtree.Tree.Extremes}*/ (root))) {\n    throw new Error('Coordinates out of bounds');\n  }\n  return this.insert_(this.root, x, y, weight, this.maxDepth, opt_data);\n};\n\n\n/**\n * Inserts an point entry into the tree for the given coordinate starting at the given node (recursively if necessary).\n * @private\n * @param {H.clustering.quadtree.Node} node The current node of the tree.\n * @param {number} x The x component of the coordinate.\n * @param {number} y The y component of the coordinate.\n * @param {number} weight The weight of the entry\n * @param {number} remainingDepth The number of remaining depth levels to fill the tree.\n * @param {*=} opt_data optional data which can be inserted into treee\n * @return {H.clustering.quadtree.Tree.Entry} The created entry\n */\nH.clustering.quadtree.Tree.prototype.insert_ = function(node, x, y, weight, remainingDepth, opt_data) {\n  'use strict';\n  var entry,\n      entries = node.entries,\n      childNode;\n\n  // The maximum depth level is not reached?\n  if (remainingDepth) {\n    if (!node.childCount) {\n      // Does the node already have an entry (it could be a leaf root node which has no entries)?\n      if (entries) {\n        // We have to move this entry to a child node, because a node (beside nodes on max depth level) can only have\n        // one entry or child node(s):\n        entry = entries[0];\n        childNode = node.getChildNode(\n            (entry[1 /*X*/] >= node[8 /*MID_X*/]) | (entry[0 /*MIN_Y*/] >= node[9 /*MID_Y*/]) << 1);\n        childNode.entries = node.entries;\n        childNode.copyClusterDataFrom(node);\n        delete node.entries;\n        entry.node = childNode;\n        // Additional adjustHead() call, because it could differ from the node where the new entry will be added:\n        this.adjustHead(childNode);\n        // Insert the new entry into a child node because the current node is now no longer a leaf node:\n        entry = this.insertIntoChild_(node, x, y, weight, remainingDepth, opt_data);\n      } else {\n        // It's an empty leaf node, lets add the entry to the node:\n        node.addEntry(entry = new H.clustering.quadtree.Tree.Entry(x, y, weight, opt_data));\n        this.adjustHead(node);\n      }\n    } else {\n      // It's not a leaf node, insert the new entry to a child node (implies a recursive insert_() call):\n      entry = this.insertIntoChild_(node, x, y, weight, remainingDepth, opt_data);\n    }\n  } else { // maximum depth level reached\n    // If the node was newly created (has no entry) we have to adjust the head:\n    if (!entries) {\n      this.adjustHead(node);\n    }\n    // Add the new entry to the node:\n    node.addEntry(entry = new H.clustering.quadtree.Tree.Entry(x, y, weight, opt_data));\n  }\n\n  // In ANY case - we have to add the clustering data to cumulate the data in of all entriues in the ancestor nodes:\n  node.addClusterData(x, y, weight);\n\n  return entry;\n};\n\n\n/**\n * Inserts a point entry into the tree for the given coordinate starting at the corresponding child of the given node\n * (recursively if necessary). The caller has to check beforehand that remainingDepth is greater 0!\n * @private\n * @param {H.clustering.quadtree.Node} node The current node of the tree.\n * @param {number} x The x component of the coordinate.\n * @param {number} y The y component of the coordinate.\n * @param {number} weight The weight of the entry\n * @param {number} remainingDepth The number of remaining depth levels to fill the tree.\n * @param {*=} opt_data optionals data\n * @return {H.clustering.quadtree.Tree.Entry} The created entry\n */\nH.clustering.quadtree.Tree.prototype.insertIntoChild_ = function(node, x, y, weight, remainingDepth, opt_data) {\n  'use strict';\n  var addr = (x >= node[8 /*MID_X*/]) | (y >= node[9 /*MID_Y*/]) << 1;\n  return this.insert_(node.getChildNode(addr), x, y, weight, remainingDepth - 1, opt_data);\n};\n\n\nif (goog.DEBUG) {\n\n  /**\n   * Returns a string representing the structure of the tree\n   * @override\n   * @return {string}\n   */\n  H.clustering.quadtree.Tree.prototype.toString = function() {\n    'use strict';\n    var str = '';\n    this.traverse(function(node, depth) {\n      'use strict';\n      var indent = '',\n          curr = node;\n      while (curr = curr.parent) {\n        indent += ' ';\n      }\n      str += indent + node + '\\n';\n    });\n    return str;\n  };\n\n}\n\n\n/**\n * To traverse the nodes of the quadtree starting at root node.\n * @see {H.clustering.quadtree.Node.prototype.traverse}\n * @param {function(H.clustering.quadtree.Node, number): (boolean|undefined)} callback\n *      The function to invoke for each node. It gets the currently visited node and the depth as arguments.\n *      If the callback returns {@code true} for a the given node, then the children of that node are not traversed;\n *      otherwise, all child nodes are traversed.\n * @param {number=} opt_maxDepth The maximum depth level to travers. The root node is at level 0, its child-nodes are at\n *      level 1 and so on and so forth. If ommited the depth level is not restricted\n */\nH.clustering.quadtree.Tree.prototype.traverse = function(callback, opt_maxDepth) {\n  'use strict';\n  this.root.traverseInternal(\n      callback,\n      (opt_maxDepth === +opt_maxDepth) ? /** @type {number} */ (opt_maxDepth) : this.maxDepth,\n      0);\n};\n\n\n\n//################################################  ENTRY  #############################################################\n/**\n * A quadtree entry to store a point\n * @constructor\n * @param {number} x The x coordinate of the point\n * @param {number} y The y coordinate of the point\n * @param {number} weight The weight of the point\n * @param {*=} opt_data data\n */\nH.clustering.quadtree.Tree.Entry = function(x, y, weight, opt_data) {\n  'use strict';\n\n  /**\n   * The y value\n   * @type {number}\n   */\n  this[0 /*Y*/] = y;\n\n\n  /**\n   * The x value\n   * @type {number}\n   */\n  this[1 /*X*/] = x;\n\n  /**\n   * The weight value\n   * @type {number}\n   */\n  this.weight = weight;\n\n  /**\n   * The data\n   * @type {*}\n   */\n  this.data = opt_data;\n\n};\n",
		"goog.provide('H.clustering.ICluster');\n\ngoog.require('H.clustering.IResult');\n\n\n\n/**\n * This interface describes a cluster of data points, which fulfill the clustering specification\n * (i.e. data points are within the epsilon and there are enough points to form a cluster).\n *\n * <p>\n * We can make an analogue with {@link http://en.wikipedia.org/w/index.php?search=Tree+(data+structure)}.\n * In that case given cluster is a node in a tree, children of that node are sub-clusters and leafs of that\n * sub-tree are the noise points.\n * </p>\n *\n * <p>\n * Sub-clusters of a cluster can be seen on a map when changing a zoom level, that time parent cluster splits into\n * smaller clusters and possible noise points.\n * </p>\n * @interface\n * @extends {H.clustering.IResult}\n * @publish\n */\nH.clustering.ICluster = function() {};\n\n\n/**\n * Returns the maximum zoom level where this cluster doesn't fall apart into sub clusters and/or noise poinst\n * @publish\n * @return {number}\n */\nH.clustering.ICluster.prototype.getMaxZoom = function() {};\n\n\n/**\n * Returns the bounding rectangle of this cluster.\n * @publish\n * @return {H.geo.Rect}\n */\nH.clustering.ICluster.prototype.getBounds = function() {};\n\n\n/**\n * Invokes the specified callback for each \"entry\" of the cluster. That \"entry\" can be either a cluster\n * which implements {@link H.clustering.ICluster} interface or a noise point which\n * implements {@link H.clustering.INoisePoint} interface.\n *\n * <p>\n * In analogue example from this class description, method traverses through all nodes of the tree beside the root.\n * </p>\n *\n * @param {function(H.clustering.IResult)} callback\n *        The callback gets the currently traversed entry as an argument, which is cluster or noise point.\n *\n * @export\n * @publish\n */\nH.clustering.ICluster.prototype.forEachEntry = function(callback) {};\n\n\n/**\n * Invokes the specified callback for each data point which is part of this cluster, even indirectly.\n * <p>\n * In analogue example from this class description, method traverses only through leaf nodes of the tree.\n * </p>\n *\n * @param {function(H.clustering.INoisePoint)} callback\n *        The callback gets the currently traversed noise point as argument.\n * @export\n * @publish\n */\nH.clustering.ICluster.prototype.forEachDataPoint = function(callback) {};\n",
		"goog.provide('H.clustering.NoisePoint');\n\ngoog.require('H.clustering.INoisePoint');\ngoog.require('H.clustering.util');\n\n\n\n//###############################################  Constructor  ########################################################\n/**\n * This class represents a data point which does not belong to a cluster.\n *\n * @implements {H.clustering.INoisePoint}\n * @constructor\n * @param {H.clustering.Clusterer} clusterer The clusterer which produces this noise point\n * @param {H.clustering.quadtree.Tree.Entry} entry The according quadtree entry of this noise point\n * @param {number} minDepth The minimum depth level where the noise point is not part of a cluster\n * @export\n */\nH.clustering.NoisePoint = function(clusterer, entry, minDepth) {\n  'use strict';\n\n\n  /**\n   * @private\n   * @type {H.clustering.Clusterer}\n   */\n  this.clusterer_ = clusterer;\n\n\n  /**\n   * @private\n   * @type {H.clustering.quadtree.Tree.Entry}\n   */\n  this.entry_ = entry;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minDepth_ = minDepth;\n\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.NoisePoint.prototype.getPosition = function() {\n  'use strict';\n  if (!this.position_) {\n    /**\n     * @private\n     * @type {H.geo.Point}\n     */\n    this.position_ = this.clusterer_.xyToGeo(this.entry_[1 /*X*/], this.entry_[0 /*Y*/], 1);\n  }\n\n  return this.position_;\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.NoisePoint.prototype.getWeight = function() {\n  'use strict';\n  return this.entry_.weight;\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.NoisePoint.prototype.isCluster = H.clustering.util.returnFalse;\n\n\n/**\n * @override\n * @export\n */\nH.clustering.NoisePoint.prototype.getMinZoom = function() {\n  'use strict';\n  return this.clusterer_.depthToZoom(this.minDepth_);\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.NoisePoint.prototype.getData = function() {\n  'use strict';\n  return this.entry_.data;\n};\n\n",
		"goog.provide('H.clustering.Clusterer');\n\n\ngoog.require('H.clustering.Cluster');\ngoog.require('H.clustering.NoisePoint');\ngoog.require('H.clustering.quadtree.Tree');\ngoog.require('H.clustering.util');\n\n\n\n//################################################  Constructor  #######################################################\n/**\n * @constructor\n * @param {H.clustering.Clusterer.Options=} opt_options The optional parameters to initialze the Clusterer\n */\nH.clustering.Clusterer = function(opt_options) {\n  'use strict';\n\n  var options = opt_options || {},\n      key,\n      val,\n      minZoom,\n      maxZoom,\n      eps,\n      _2_POWER_31 = this._2_POWER_31_;\n\n  /**\n   * The projection to use\n   * @private\n   * @type {H.geo.IProjection}\n   */\n  this.projection_ = H.clustering.util.isDef(val = options['projection']) ? val : H.geo.mercator;\n\n  /**\n   * The minimum zoom level where clusters are computed\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = minZoom = H.clustering.util.isDef(val = options['min']) ? val : 0;\n\n  /**\n   * The maximum zoom level where clusters are computed\n   * @private\n   * @type {number}\n   */\n  this.maxZoom_ = maxZoom = Math.max(minZoom, H.clustering.util.isDef(val = options['max']) ? val : 22);\n\n  /**\n   * The minimum number of points that must be present within a cluster\n   * @type {number}\n   */\n  this.minWeight = Math.max(2, H.clustering.util.isDef(val = options['minWeight']) ? val : 2);\n\n  //\n  //\n  /**\n   * The offset between zoom levels and tree depth levels\n   * Example: max zoom is 22, eps is 32px, the offset must be 2 to get clusters for quad cells with a radius\n   * of 32 pixel (64x64 px):\n   * @private\n   * @type {number}\n   */\n  this.depthLevelOffset_ =\n      // Add 8 to get the 1 pixel level:\n      8 -\n      // Subtract 1 because epsilon is not the width and height of the grid cell but the radius:\n      1 -\n      // Subtract by the rounded base-2 exponent of epsilon\n      Math.round(Math.log(\n          // Assure that eps is a positive integer in range\n          Math.max(1, options['eps']) || 32\n          ) / Math.LN2);\n\n  // To achieve a performant clustering we store the entries in a quadtree which stores projected coordinates based on\n  // map pixel coordinates where the map has a size of 2^32 x 2^32 pixels. This results in a quadtree with a center\n  // at 2^31 and a radius of 2^31\n  this.quadtree_ = new H.clustering.quadtree.Tree(\n      Math.max(minZoom, maxZoom + this.depthLevelOffset_),\n      _2_POWER_31, _2_POWER_31, _2_POWER_31, _2_POWER_31);\n\n};\n\n\n//################################################  DATA POINTS  #######################################################\n/**\n * The cached result of 2^31, used for radius and center of the quadtree\n * @private\n * @const\n * @type {number}\n */\nH.clustering.Clusterer.prototype._2_POWER_31_ = 0x80000000; // === Math.pow(2, 31)\n\n\n/**\n * The cached result of 2^32, used for projected coordinates\n * @private\n * @type {number}\n */\nH.clustering.Clusterer.prototype._2_POWER_32_ = 0x100000000;\n\n\n/**\n * Sets the data points for the clustering\n * @param {Array.<H.clustering.DataPoint>} dataPoints\n */\nH.clustering.Clusterer.prototype.setDataPoints = function(dataPoints) {\n  'use strict';\n  var i = 0,\n      length = dataPoints.length,\n      dataPoint,\n      projPoint = new H.math.Point(0, 0),\n      _2_POWER_32 = this._2_POWER_32_,\n      projection = this.projection_,\n      quadtree = this.quadtree_;\n  quadtree.cleanup();\n  for (; i < length; i++) {\n    projection.geoToPoint(\n        /** @type {H.geo.IPoint} */ (dataPoint = dataPoints[i]), projPoint).scale(_2_POWER_32).floor();\n    quadtree.insertPoint(projPoint['x'], projPoint['y'], dataPoint['wt'], dataPoint['data']);\n  }\n};\n\n\n/**\n * To scale pixel coordinates for a specified zoom level\n * @private\n * @param {H.math.Point} pxPoint The pixel coordinates to scale\n * @param {number} zoom The zoom level to scale the pixel coordinates for\n * @param {H.geo.Point} scaledPxPoint The pixel coordinates where to store the result\n */\nH.clustering.Clusterer.prototype.scalePixel_ = function(pxPoint, zoom, scaledPxPoint) {\n  'use strict';\n  var y = pxPoint['y'];\n  // The pixels are stored in 2^32 range, so we have shift it by the difference (zoom 0 corresponds with level 8)\n  scaledPxPoint['x'] = pxPoint['x'] >>> 32 - 8 - zoom;\n  scaledPxPoint['y'] = y < this._2_POWER_32_ ? y >>> 32 - 8 - zoom : 1 << zoom + 8 >>> 0;\n};\n\n\n/**\n * To convert a weighted pixel address to georgraphical coordinates\n * Don't publish it, API internally use only!\n *\n * @param {number} x The pixel adress on x-axis\n * @param {number} y The pixel adress on y-axis\n * @param {number} weight\n * @param {H.geo.Point=} opt_out The optional geo point to store the result\n * @return {H.geo.Point}\n */\nH.clustering.Clusterer.prototype.xyToGeo = function(x, y, weight, opt_out) {\n  return this.projection_.xyToGeo(\n      x / weight / this._2_POWER_32_,\n      y / weight / this._2_POWER_32_,\n      opt_out);\n};\n\n\n/**\n * To convert a weighted pixel address to georgraphical coordinates\n * Don't publish it, API internally use only!\n * @param {number} depth\n * @return {number}\n */\nH.clustering.Clusterer.prototype.depthToZoom = function(depth) {\n  return depth - this.depthLevelOffset_;\n};\n\n\n//############################################  CLUSTER RESULT  ########################################################\n/**\n * Returns the clustering results\n * @return {H.clustering.Clusterer.Result}\n */\nH.clustering.Clusterer.prototype.getResults = function() {\n  'use strict';\n  // Initialize the results struct:\n  var result = /** @type {H.clustering.Clusterer.Result} */ ({'clusters': [], 'noisePoints': []});\n  // Populate the result struct:\n  this.computeResults_(this.quadtree_.root, 0, this.maxZoom_ + this.depthLevelOffset_, -1 / 0, result, null);\n  return result;\n};\n\n\n/**\n * @typedef {{\n *   node: (H.clustering.quadtree.Node),\n *   depth: (number)\n * }}\n */\nH.clustering.Clusterer.PendingCluster;\n\n\n/**\n * To compute the clustering for a given node\n * @private\n * @param {H.clustering.quadtree.Node} node\n * @param {number} depth The depth leel of the node\n * @param {number} residualDepth The residual depth levels to traverse (relative to the current level)\n * @param {number} lastClusterDepth The depth level where the last cluster on ancestor axis was found\n * @param {H.clustering.Clusterer.Result} result\n * @param {?H.clustering.Clusterer.PendingCluster} pendingCluster\n */\nH.clustering.Clusterer.prototype.computeResults_ = function(node, depth, residualDepth, lastClusterDepth,\n    result, pendingCluster) {\n  'use strict';\n  var clusterWeight = node.clusterWeight,\n      cluster,\n      entries,\n      length,\n      i,\n      child;\n  // Do we have a pending cluster from the ancestors?\n  if (pendingCluster) {\n    // Does the current node has a different weight than the pending cluster?\n    if (pendingCluster.node.clusterWeight !== clusterWeight) {\n      // Finalize the pending cluster:\n      this.finalizePendingCluster_(pendingCluster, depth - 1, result);\n      // Reset the variable:\n      pendingCluster = null;\n    } else {\n      // The cluster is still pending, increase the lastClusterDepth:\n      lastClusterDepth++;\n    }\n  }\n\n  // We didn't got a pending cluster or it is finalized now?\n  if (!pendingCluster) {\n    // Is the current node a cluster?\n    if (clusterWeight >= this.minWeight) {\n      // Create a new pending cluster:\n      pendingCluster = {node: node, depth: depth};\n      // Update the depth level of the last cluster:\n      lastClusterDepth = depth;\n    } else {\n      this.collectNoisePoints_(node, lastClusterDepth + 1, result);\n    }\n  }\n\n  // Does the node has chidren and we we have still remaining depth level to traverse?\n  if (node.childCount && residualDepth--) {\n    depth++;\n    // Iterate over all child nodes (TL: 0 ... BR: 3):\n    for (i = 0; i < 4; i++) {\n      if (child = node[i]) {\n        // Recursion:\n        this.computeResults_(child, depth, residualDepth, lastClusterDepth, result, pendingCluster);\n        // Reset the pendingCluster after the first recursive call, because this call must finalize the pending cluster:\n        pendingCluster = null;\n      }\n    }\n  }\n\n  // Do we have still a pending cluster (node is a leaf or max depth reached)?\n  if (pendingCluster) {\n    // Finalize it:\n    this.finalizePendingCluster_(pendingCluster, this.maxZoom_ + this.depthLevelOffset_, result);\n  }\n};\n\n\n/**\n * To finalize a pending cluster\n * @private\n * @param {H.clustering.Clusterer.PendingCluster} pendingCluster\n * @param {number} maxDepth The maximum depth level where the cluster doesn't fall apart into sub clusters and/or noise\n * @param {H.clustering.Clusterer.Result} result The result object where to store the cluster\n */\nH.clustering.Clusterer.prototype.finalizePendingCluster_ = function(pendingCluster, maxDepth, result) {\n  'use strict';\n  // Store the pending cluster into result:\n  result['clusters'].push(\n      new H.clustering.Cluster(this, pendingCluster.node, pendingCluster.depth, maxDepth));\n};\n\n\n/**\n * To collect all noise points for the given node on self-or-descandants axis\n * @private\n * @param {H.clustering.quadtree.Node} node\n * @param {number} minDepth The minimum depth level where the noise points ar not part of a cluster\n * @param {H.clustering.Clusterer.Result} result The result object where to store the noise points\n */\nH.clustering.Clusterer.prototype.collectNoisePoints_ = function(node, minDepth, result) {\n  'use strict';\n  var entries = node.entries,\n      length,\n      noisePoints,\n      i,\n      child;\n  if (entries) {\n    // Collect the noise points of this node:\n    length = entries.length;\n    noisePoints = result['noisePoints'];\n    for (i = 0; i < length; i++) {\n      noisePoints.push(new H.clustering.NoisePoint(this, entries[i], minDepth));\n    }\n  } else {\n    // Continue recursively to collect noise points from descandant nodes:\n    for (i = 0; i < 4; i++) {\n      if (child = this[i]) {\n        this.collectNoisePoints_(child, minDepth, result);\n      }\n    }\n  }\n};\n\n\n/**\n * An aggregation of clustering results which provides a colection of cluster points and a collection of noise points.\n *\n * @property {Array.<H.clustering.Cluster>} clusters\n * @property {Array.<H.clustering.NoisePoint>} noisePoints\n *\n * @typedef {{\n *   clusters: (Array.<H.clustering.Cluster>),\n *   noisePoints: (Array.<H.clustering.NoisePoint>)\n * }}\n */\nH.clustering.Clusterer.Result;\n\n\n/**\n * Options used to initialize a clusterer\n *\n * @property {H.geo.IProjection=} projection\n *           The projection to use for the clustering, defaults to {@link H.geo.mercator}\n * @property {number=} min\n *           The minimum zoom level for which the clusters should be created,\n *           default is {@code 0}\n * @property {number=} max\n *           The maximum zoom level for which the clusters should be created,\n *           default is {@code 22}\n * @property {number=} eps\n *           The epsilon value to use for clustering, must be 2^n, where n is an integer {@code >=0},\n *           default is  {@code 32}\n *\n * @property {number=} minWeight\n *           The smallest number of points that must be present within a cluster in range {@code [2 ...]},\n *           default is  {@code 2}.\n *\n * @typedef {{\n *   projection: (H.geo.IProjection|undefined),\n *   min: (number|undefined),\n *   max: (number|undefined),\n *   eps: (number|undefined),\n *   minWeight: (number|undefined)\n * }}\n */\nH.clustering.Clusterer.Options;\n\n",
		"goog.provide('H.clustering.Cluster');\n\ngoog.require('H.clustering.ICluster');\ngoog.require('H.clustering.NoisePoint');\ngoog.require('H.clustering.util');\n\n\n\n/**\n * This class represents a cluster of data points, which fulfill the clustering specification (i.e. data points are\n *   within the epsilon and there are enough points to form a cluster).\n * @implements {H.clustering.ICluster}\n * @constructor\n * @param {H.clustering.Clusterer} clusterer\n * @param {H.clustering.quadtree.Node} node\n * @param {number} minDepth The minimum clustering depth where the cluster is valid\n * @param {number} maxDepth The maximum clustering depth where the cluster is valid\n * @export\n */\nH.clustering.Cluster = function(clusterer, node, minDepth, maxDepth) {\n  'use strict';\n  // TODO minDepth is sometimes bigger than maxDepth\n  /**\n   * @private\n   * @type {H.clustering.Clusterer}\n   */\n  this.clusterer_ = clusterer;\n\n\n  /**\n   * @private\n   * @type {H.clustering.quadtree.Node}\n   */\n  this.node_ = node;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minDepth_ = minDepth;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDepth_ = maxDepth;\n\n  // Bind the traverser callbacks to this cluster instance:\n  this.forEachEntryTraverser_ = goog.bind(this.forEachEntryTraverser_, this);\n  this.forEachDataPointTraverser_ = goog.bind(this.forEachDataPointTraverser_, this);\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.getPosition = function() {\n  if (!this.position_) {\n    /**\n      * @private\n      * @type {H.geo.Point}\n      */\n    this.position_ = this.clusterer_.xyToGeo(this.node_.clusterX, this.node_.clusterY, this.node_.clusterWeight);\n  }\n\n  return this.position_;\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.getWeight = function() {\n  return this.node_.clusterWeight;\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.isCluster = H.clustering.util.returnTrue;\n\n\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.getMinZoom = function() {\n  'use strict';\n  var depth = this.minDepth_;\n  // If the tree depth level is 0 we have too return -Infinity as the min. zoom level:\n  return this.minDepth_ ? this.clusterer_.depthToZoom(this.minDepth_) : -1 / 0;\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.getMaxZoom = function() {\n  'use strict';\n  return this.clusterer_.depthToZoom(this.maxDepth_);\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.getBounds = function() {\n  if (!this.bounds_) {\n    /**\n     * @private\n     * @type {H.geo.Rect}\n     */\n    this.bounds_ = H.geo.Rect.fromPoints(\n        this.clusterer_.xyToGeo(this.node_.clusterMinX, this.node_.clusterMinY, 1),\n        this.clusterer_.xyToGeo(this.node_.clusterMaxX, this.node_.clusterMaxY, 1),\n        true);\n  }\n  return this.bounds_;\n};\n\n\n//#############################################  For Each Entry  #######################################################\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.forEachEntry = function(callback) {\n  'use strict';\n  this.forEachEntryCallback_ = callback;\n  this.node_.traverse(this.forEachEntryTraverser_, H.clustering.util.Infinity);\n};\n\n\n/**\n * Holds a reference to the callback function which was most recently passed to the forEachEntry method\n * @private\n * @type {function(H.clustering.IResult)}\n */\nH.clustering.Cluster.prototype.forEachEntryCallback_;\n\n\n/**\n * A callback function used for clustering.quadtree.Tree.Node#traverse() to collect collect all directly sub clusters\n * and data points.\n * @private\n * @param {H.clustering.quadtree.Node} node\n * @param {number} depth\n * @return {boolean}\n */\nH.clustering.Cluster.prototype.forEachEntryTraverser_ = function(node, depth) {\n  'use strict';\n  var clusterWasFound = false,\n      entries,\n      length,\n      i;\n\n  // Is it a node with a cluster?\n  if (node.clusterWeight >= this.clusterer_.minWeight) {\n    // Exclude the node of this cluster:\n    if (node !== this.node_) {\n      // If a child node has the same weight we ignore it:\n      if (node.clusterWeight !== this.node_.clusterWeight) {\n        this.forEachEntryCallback_(new H.clustering.Cluster(this.clusterer_, node, 0, depth));\n        clusterWasFound = true;\n      }\n    } else {\n\n    }\n  }\n  if (!clusterWasFound && (entries = node.entries)) {\n    length = entries.length;\n    for (i = 0; i < length; i++) {\n      this.forEachEntryCallback_(new H.clustering.NoisePoint(this.clusterer_, entries[i], depth));\n    }\n  }\n  // If a cluster was found we signalize to not visit the child nodes of the given node:\n  return clusterWasFound;\n};\n\n\n//###########################################  For Each DataPoint  #####################################################\n/**\n * @override\n * @export\n */\nH.clustering.Cluster.prototype.forEachDataPoint = function(callback) {\n  'use strict';\n  this.forEachDataPointCallback_ = callback;\n  this.node_.traverse(this.forEachDataPointTraverser_, H.clustering.util.Infinity);\n};\n\n\n/**\n * Holds a reference to the callback function which was most recently passed to the forEachDataPoint method\n * @private\n * @type {Function}\n */\nH.clustering.Cluster.prototype.forEachDataPointCallback_;\n\n\n/**\n * A callback function used to traverse the corresponding node of this cluster and its child nodes to collect all\n * sub clusters and directly clustered data points.\n * @private\n * @param {H.clustering.quadtree.Node} node\n * @param {number} depth\n * @return {boolean}\n */\nH.clustering.Cluster.prototype.forEachDataPointTraverser_ = function(node, depth) {\n  'use strict';\n  var entries,\n      length,\n      i;\n  if (entries = node.entries) {\n    length = entries.length;\n    for (i = 0; i < length; i++) {\n      this.forEachDataPointCallback_(new H.clustering.NoisePoint(this.clusterer_, entries[i], depth));\n    }\n  }\n  return false;\n};\n\n\n",
		"goog.provide('H.clustering.DefaultTheme');\n\ngoog.require('H.clustering.Cluster');\ngoog.require('H.clustering.ITheme');\ngoog.require('H.clustering.NoisePoint');\n\n\n\n/**\n * Implementation for a default clustering theme.\n * @constructor\n * @implements {H.clustering.ITheme}\n * @export\n */\nH.clustering.DefaultTheme = function() {\n  'use strict';\n\n  /**\n   * Noise point icon\n   * @private\n   */\n  this.noisePointIcon_ = this.createNoisePointIcon_();\n\n  /**\n   * Cluster backgrounds\n   * @private\n   */\n  this.clusterBackgrounds_ = {};\n\n  /**\n   * Cluster icons cache (for reuse)\n   * @private\n   */\n  this.clusterIcons_ = {};\n};\n\n\n/**\n * This method returns cluster background image depending on size\n * @param {number} weight\n * @return {H.clustering.DefaultTheme.ClusterVisual}\n * @private\n */\nH.clustering.DefaultTheme.prototype.getClusterVisual_ = function(weight) {\n  'use strict';\n  var textCoord,\n      bg;\n\n  if (weight < 10) {\n    bg = this.createClusterBg_(28, '118,209,0');\n    textCoord = {\n      'x': 11,\n      'y': 18\n    };\n  } else if (weight < 25) {\n    bg = this.createClusterBg_(38, '255,105,0');\n    textCoord = {\n      'x': 13,\n      'y': 23\n    };\n  } else if (weight < 50) {\n    bg = this.createClusterBg_(38, '240,60,0');\n    textCoord = {\n      'x': 13,\n      'y': 23\n    };\n  } else if (weight < 100) {\n    bg = this.createClusterBg_(38, '181,0,21');\n    textCoord = {\n      'x': 13,\n      'y': 23\n    };\n  } else if (weight < 1000) {\n    bg = this.createClusterBg_(48, '181,0,21');\n    textCoord = {\n      'x': 15,\n      'y': 28\n    };\n  } else {\n    bg = this.createClusterBg_(66, '181,0,21');\n    textCoord = {\n      'x': 20,\n      'y': 38\n    };\n  }\n\n  return /** @type {H.clustering.DefaultTheme.ClusterVisual} */ ({\n    bg: bg,\n    textCoord: textCoord\n  });\n};\n\n\n/**\n * This method creates cluster iamge background\n * @private\n * @param {number} size\n * @param {string} rgbString\n * @return {Element}\n */\nH.clustering.DefaultTheme.prototype.createClusterBg_ = function(size, rgbString) {\n  'use strict';\n  var bgKey = size + ':' + rgbString,\n      existingBg,\n      canvas = document.createElement('canvas'),\n      ctx = canvas.getContext('2d'),\n      radius;\n  canvas.width = canvas.height = size;\n  //create background only if needed otherwise copy cached image data\n  existingBg = this.clusterBackgrounds_[bgKey];\n  if (existingBg) {\n    ctx.putImageData(existingBg, 0, 0);\n  } else {\n    radius = size / 2;\n    ctx.beginPath();\n    ctx.strokeStyle = 'rgba(' + rgbString + ',0.2)';\n    ctx.fillStyle = 'rgba(' + rgbString + ',1)';\n    ctx.arc(radius, radius, 3 * (radius / 5), 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 4 * (radius / 5);\n    ctx.stroke();\n    this.clusterBackgrounds_[bgKey] = ctx.getImageData(0, 0, size, size);\n  }\n\n  return canvas;\n};\n\n\n/**\n * This method creates reusable noise point icon\n * @private\n * @return {H.map.Icon}\n */\nH.clustering.DefaultTheme.prototype.createNoisePointIcon_ = function() {\n  'use strict';\n  var canvas = document.createElement('canvas'),\n      ctx = canvas.getContext('2d'),\n      size = canvas.width = canvas.height = 14;\n\n  ctx.beginPath();\n  ctx.strokeStyle = '#FFFFFF';\n  ctx.fillStyle = '#1080DD';\n  ctx.arc(size / 2, size / 2, 6, 0, 2 * Math.PI, false);\n  ctx.fill();\n  ctx.lineWidth = 1;\n  ctx.stroke();\n\n  return new H.map.Icon(/** @type {!HTMLCanvasElement} */ (canvas),\n      /** @type {H.map.Icon.Options} */ ({\n        'size': {\n          'w': size,\n          'h': size\n        },\n        'anchor': {\n          'x': 7,\n          'y': 7\n        }\n      }));\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.DefaultTheme.prototype.getClusterPresentation = function(cluster) {\n  'use strict';\n  var weight = cluster.getWeight(),\n      clusterVisual,\n      clusterImage,\n      textCoord,\n      size,\n      ctx,\n      icon,\n      marker;\n\n  icon = this.clusterIcons_[weight];\n  if (!icon) {\n    clusterVisual = this.getClusterVisual_(weight);\n    clusterImage = clusterVisual.bg;\n    textCoord = clusterVisual.textCoord;\n    size = clusterImage.width;\n    ctx = clusterImage.getContext('2d');\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '11px Arial';\n    ctx.fillText(weight, textCoord['x'], textCoord['y']);\n    icon = new H.map.Icon(clusterImage,\n        /** @type {H.map.Icon.Options} */({\n          'anchor': {\n            'x': size / 2,\n            'y': size / 2\n          }\n        }));\n    //store icon for reuse\n    this.clusterIcons_[weight] = icon;\n  }\n\n  marker = new H.map.Marker(cluster.getPosition(), {\n    'icon': icon,\n    'min': cluster.getMinZoom(),\n    'max': cluster.getMaxZoom()\n  });\n  marker.setData(cluster);\n  return marker;\n};\n\n\n/**\n * @override\n * @export\n */\nH.clustering.DefaultTheme.prototype.getNoisePresentation = function(noisePoint) {\n  'use strict';\n  var marker = new H.map.Marker(noisePoint.getPosition(), {\n    icon: this.noisePointIcon_,\n    min: noisePoint.getMinZoom()\n  });\n  marker.setData(noisePoint);\n  return marker;\n};\n\n\n/**\n * Visual definition for cluster\n * @property {!HTMLCanvasElement} bg background canvas image\n * @property {!H.math.IPoint} textCoord coordinates for textCoord\n *\n * @typedef {{\n *   bg: (!HTMLCanvasElement),\n *   textCoord: (!H.math.IPoint)\n * }}\n */\nH.clustering.DefaultTheme.ClusterVisual;\n\n",
		"goog.provide('H.clustering.DataPoint');\n\ngoog.require('H.clustering.util');\n\n\n\n/**\n * This class represents the input data structure for data points to be clustered.\n * @implements {H.geo.IPoint}\n * @constructor\n * @param {H.geo.Latitude} lat\n *           The latitude coordinate of the data point's position\n * @param {H.geo.Longitude} lng\n *           The longitude coordinate of the data point's position\n * @param {number=} opt_weight\n *           The weight of the data point as a positive number {@code > 0}. If not specified it\n *           , default is {@code 1}.\n * @param {*=} opt_data\n *           Optional data, which will be associated with this DataPoint\n * @export\n * @publish\n */\nH.clustering.DataPoint = function(lat, lng, opt_weight, opt_data) {\n  'use strict';\n\n  /**\n   * @override\n   */\n  this['lat'] = lat;\n\n  /**\n   * @override\n   */\n  this['lng'] = lng;\n\n  /**\n   * @override\n   */\n  this['wt'] = (opt_weight === +opt_weight) ? opt_weight : 1;\n\n  /**\n   * @override\n   */\n  this['data'] = opt_data;\n};\n\n\n/**\n * The latitude coordinate of the data point's position\n * @type {H.geo.Latitude}\n *\n * @publish\n */\nH.clustering.DataPoint.prototype.lat = NaN;\n\n\n/**\n * The longitude coordinate of the data point's position\n * @type {H.geo.Longitude}\n *\n * @publish\n */\nH.clustering.DataPoint.prototype.lng = NaN;\n\n\n/**\n * The weight of the data point\n * @type {number}\n *\n * @publish\n */\nH.clustering.DataPoint.prototype.wt = 1;\n\n\n/**\n * Data associated with this data point\n * @type {*}\n *\n * @publish\n */\nH.clustering.DataPoint.prototype.data;\n\n\n",
		"goog.provide('H.clustering.Provider');\n\ngoog.require('H.clustering.Clusterer');\ngoog.require('H.clustering.DataPoint');\ngoog.require('H.clustering.DefaultTheme');\ngoog.require('H.clustering.ITheme');\ngoog.require('H.clustering.Provider_jsdoc');\n\n\n\n/**\n * The clustering provider serves clusters and noise point representation\n * for the map depending on the provided data set. Levels for clustering\n * as well as custom cluster representation can be set via Options.\n *\n * @example\n * var dataPoints = [\n *     new H.clustering.DataPoint(52, 1),\n *     new H.clustering.DataPoint(52.1, 1)\n * ];\n *\n * var cluteringProvider = new H.clustering.Provider(dataPoints, {\n *   clusteringOptions: {\n *      minWeight: 1,\n *      eps: 32\n *   }\n * });\n * //clustering should be used with ObjectLayer\n * var clusteringLayer = new H.map.layer.ObjectLayer(clusteringPprovider);\n * map.addLayer(clusteringLayer);\n *\n * @constructor\n * @extends {H.util.EventTarget}\n *\n * @param {Array.<H.clustering.DataPoint>} dataPoints\n * @param {H.clustering.Provider.Options=} opt_options\n *\n * @export\n * @publish\n */\nH.clustering.Provider = function(dataPoints, opt_options) {\n  'use strict';\n  var options = opt_options || {},\n      clusteringOptions = options['clusteringOptions'] || {};\n\n  this['min'] = options['min'] || 0;\n  this['max'] = options['max'] || 22;\n\n  this.objectProvider_ = new H.map.provider.LocalObjectProvider({\n    'min': this['min'],\n    'max': this['max']\n  });\n  this.objectProvider_.setParentEventTarget(this);\n\n  /**\n   * @type {H.clustering.Clusterer}\n   * @private\n   */\n  this.clusterer_ = new H.clustering.Clusterer(clusteringOptions);\n\n  //set data for clsuterer\n  this.clusterer_.setDataPoints(dataPoints);\n\n  /**\n   * @type {H.clustering.ITheme}\n   * @private\n   */\n  this.theme_ = options['theme'] || new H.clustering.DefaultTheme();\n\n  this.cluster_();\n};\nH.lang.inherits(H.clustering.Provider, H.util.EventTarget);\n\n\n/**\n * @type {H.map.provider.LocalObjectProvider}\n * @private\n */\nH.clustering.Provider.objectProvider_;\n\n\n/**\n * Events fired by Provider\n * @enum {string}\n */\nH.clustering.Provider.prototype.EventType = {\n  UPDATE: 'update'\n};\n\n\n/**\n * Fired when this provider's data updates\n * @publish\n * @event H.map.provider.Provider#update\n * @type {H.util.Event}\n */\n\n\n/**\n * Minimum zoom level at which provider can cluster data\n * @publish\n * @type {number}\n */\nH.clustering.Provider.prototype.min;\n\n\n/**\n * Maximum zoom level at which provider can cluster data\n * @publish\n * @type {number}\n */\nH.clustering.Provider.prototype.max;\n\n\n/**\n * Result from current clustering\n * @type {Object}\n * @private\n */\nH.clustering.Provider.prototype.result_;\n\n\n/**\n * This method dispatches update event\n * @protected\n */\nH.clustering.Provider.prototype.dispatchUpdate = function() {\n  'use strict';\n  this.dispatchEvent(this.EventType.UPDATE);\n};\n\n\n/**\n * Function clears LOP and starts clustering\n * @private\n */\nH.clustering.Provider.prototype.cluster_ = function() {\n  'use strict';\n  this.clearObjects_();\n  this.result_ = this.clusterer_.getResults();\n  this.applyThemedResults_();\n};\n\n\n/**\n * This method applies theme to cluster\n * @private\n */\nH.clustering.Provider.prototype.applyThemedResults_ = function() {\n  'use strict';\n  var clusters = this.result_['clusters'],\n      noisePoints = this.result_['noisePoints'],\n      rootGroup = this.objectProvider_.getRootGroup(),\n      i;\n\n  this.clusters = [];\n  this.noisePoints = [];\n  //TODO override min/max settings in marker returned by the user ?\n  i = clusters.length;\n  while (i--) {\n    rootGroup.addObject(this.theme_['getClusterPresentation'](clusters[i]));\n  }\n\n  i = noisePoints.length;\n  while (i--) {\n    rootGroup.addObject(this.theme_['getNoisePresentation'](noisePoints[i]));\n  }\n\n  this.dispatchUpdate();\n};\n\n\n/**\n * This method clear the object provider\n * @private\n */\nH.clustering.Provider.prototype.clearObjects_ = function() {\n  'use strict';\n  var rootGroup = this.objectProvider_.getRootGroup();\n  rootGroup.removeAll();\n};\n\n\n/**\n * This method sets new theme on the provider. Calling this method will\n * change visuals for displayed clusters and noise points.\n * @param {H.clustering.ITheme} theme\n * @publish\n * @export\n */\nH.clustering.Provider.prototype.setTheme = function(theme) {\n  'use strict';\n  this.theme_ = theme;\n  if (this.result_) {\n    this.clearObjects_();\n    this.applyThemedResults_();\n  }\n};\n\n\n/**\n * This method returns current theme used for creating\n * cluster visualization\n * @return {H.clustering.ITheme}\n * @export\n * @publish\n */\nH.clustering.Provider.prototype.getTheme = function() {\n  'use strict';\n  return this.theme_;\n};\n\n\n/**\n * This method sets new data to the provider\n * @param {Array.<H.clustering.DataPoint>} data\n * @publish\n * @export\n */\nH.clustering.Provider.prototype.setDataPoints = function(data) {\n  'use strict';\n  this.clusterer_.setDataPoints(data);\n  this.cluster_();\n};\n\n\n/**\n * This method returns true if Provider supplies map with dom markers\n * @return {boolean}\n * @publish\n * @export\n */\nH.clustering.Provider.prototype.providesDomMarkers = function() {\n  'use strict';\n  return this.objectProvider_ && this.objectProvider_.providesDomMarkers();\n};\n\n\n/**\n * Returns all DomMarker cluster and noise point\n * representations which intersect with the provided rectangular area.\n * @publish\n * @export\n *\n * @param {H.geo.Rect} geoRect A rectangular area in geo space to intersect with\n * @param {number} zoomLevel The zoom level for which the objects are requested\n * @param {boolean} visiblesOnly Indicates whether only invisible objects are to be considered\n * @param {boolean} cacheOnly Indicates whether only cached objects are to be considered\n * @return {Array.<H.map.DomMarker>} a list of intersecting objects\n */\nH.clustering.Provider.prototype.requestDomMarkers = function(geoRect, zoomLevel, visiblesOnly, cacheOnly) {\n  'use strict';\n  return this.objectProvider_.requestDomMarkers(geoRect, zoomLevel, visiblesOnly, cacheOnly);\n};\n\n\n/**\n * This method returns true if Provider supplies map with bitmap markers\n * @return {boolean}\n * @publish\n * @export\n */\nH.clustering.Provider.prototype.providesMarkers = function() {\n  'use strict';\n  return this.objectProvider_ && this.objectProvider_.providesMarkers();\n};\n\n\n/**\n * Returns all cluster and noise point markers\n * which intersect with the provided rectangular area.\n * @publish\n * @export\n *\n * @param {H.geo.Rect} geoRect A rectangular area in geo space to intersect with\n * @param {number} zoomLevel The zoom level for which the objects are requested\n * @param {boolean} visiblesOnly Indicates whether only invisible objects are to be considered\n * @param {boolean} cacheOnly Indicates whether only cached objects are to be considered\n * @return {Array.<H.map.Marker>} a list of intersecting objects\n */\nH.clustering.Provider.prototype.requestMarkers = function(geoRect, zoomLevel, visiblesOnly, cacheOnly) {\n  'use strict';\n  return this.objectProvider_.requestMarkers(geoRect, zoomLevel, visiblesOnly, cacheOnly);\n};\n\n\n/**\n * This method returns true if Provider supplies map with spatial objects\n * @return {boolean}\n * @publish\n * @export\n */\nH.clustering.Provider.prototype.providesSpatials = function() {\n  'use strict';\n  return this.objectProvider_ && this.objectProvider_.providesSpatials();\n};\n\n\n/**\n * Returns all polyline, polygon, circle and rect objects which represent cluster and\n * noise points and intersect with the provided area.\n * @publish\n * @export\n *\n * @param {H.geo.Rect} geoRect A rectangular area in geo space to intersect with\n * @param {number} zoomLevel The zoom level for which the objects are requested\n * @param {boolean} visiblesOnly Indicates whether only invisible objects are to be considered\n * @param {boolean} cacheOnly Indicates whether only cached objects are to be considered\n * @return {Array.<H.map.Spatial>} a list of intersecting objects\n */\nH.clustering.Provider.prototype.requestSpatials = function(geoRect, zoomLevel, visiblesOnly, cacheOnly) {\n  'use strict';\n  return this.objectProvider_.requestSpatials(geoRect, zoomLevel, visiblesOnly, cacheOnly);\n};\n\n\n/**\n * Returns the accumulate invalidations of this provider's objects that have occurred.\n * @publish\n * @export\n * @return {H.map.provider.Invalidations} an invalidations object\n */\nH.clustering.Provider.prototype.getInvalidations = function() {\n  'use strict';\n  return this.objectProvider_.getInvalidations();\n};\n\n\n/**\n * To signal to this provider that a map object has been changed.\n * The method updates the Invalidations of this provider and the given map object and triggers dispatchUpdate()\n * @publish\n *\n * @export\n * @param {!H.map.Object} mapObject The map object to be invalidated\n * @param {H.math.BitMask} changes The flags indicating the types of occurred changes\n */\nH.clustering.Provider.prototype.invalidateObject = function(mapObject, changes) {\n  'use strict';\n  this.objectProvider_.invalidateObject(mapObject, changes);\n};\n\n\n/**\n * This method returns the copyrights of the provided content for a certain geographical area at a specified zoom level.\n * @export\n *\n * @param {H.geo.Rect} bounds The bounding area for which to retrieve the copyright information\n * @param {number} level The zoom level for which to retrieve the copyright information\n * @return {?Array.<H.map.ICopyright>} a list of copyright information objects for the provided area and zoom level\n */\nH.clustering.Provider.prototype.getCopyrights = function(bounds, level) {\n  'use strict';\n  return null;\n};\n\n\n/**\n * This method manages object disposal\n * @protected\n */\nH.clustering.Provider.prototype.dispose = function() {\n  'use strict';\n  this.clearObjects_();\n  this.objectProvider_ = null;\n  this.clusterer_ = null;\n  this.result_ = null;\n  this.theme_ = null;\n};\n\n\n/**\n * Options which are used to initialize the clustering Provider\n * @publish\n *\n * @property {number=} min The minimal supported zoom level, default is {@code 0}\n * @property {number=} max The maximal supported zoom level, default is {@code 22}\n * @property {H.clustering.Provider.ClusteringOptions=} clusteringOptions options for clustering algorithm\n * @property {H.clustering.ITheme=} theme cluster and noise point graphical representation\n *\n * @typedef {{\n *   min: (number|undefined),\n *   max: (number|undefined),\n *   clusteringOptions: (H.clustering.Provider.ClusteringOptions|undefined),\n *   theme: (H.clustering.ITheme|undefined)\n * }}\n */\nH.clustering.Provider.Options;\n\n\n/**\n * Options which are used within cluster calculations.\n * @publish\n *\n * @property {number=} eps epsilon parameter for cluster calculation\n * @property {number=} minWeight the minimum points weight sum to form a cluster\n * @property {H.geo.IProjection=} projection projection to use for clustering, default is\n *    {@link H.geo.mercator}\n *\n * @typedef {{\n *   eps: (number|undefined),\n *   minWeight: (number|undefined),\n *   projection: (H.geo.IProjection|undefined)\n * }}\n */\nH.clustering.Provider.ClusteringOptions;\n\n",
		"if (COMPILED) {\n  goog.provide('H');\n}\n\n\n/** @suppress {duplicate} */\nvar H = H || {};\n\n\n/**\n * This namespace contains classes and functionality to enable marker clustering.\n * @namespace H.clustering\n * @publish\n */\ngoog.provide('H.clustering');\n\ngoog.require('H.clustering.DataPoint');\ngoog.require('H.clustering.Provider');\n\n\n/**\n * Function returns build information\n * @return {Object}\n * @export\n */\nH.clustering.buildInfo = function() {\n  'use strict';\n  return H.util.BuildInfo.get('{BUILD_NAME}', '{BUILD_VERSION}', '{BUILD_REVISION}');\n};\n\n"
	]
}