{
	"version": 3,
	"file": "mapsjs-datajs",
	"lineCount": 23,
	"mappings": "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",
	"sources": [
		"/home/here/repo/ext-kml/dev/node_modules/closure-library/closure/goog/base.js",
		"out/tmp/src/data/AbstractReader.js",
		"out/tmp/src/data/geojson/ObjectFactory.js",
		"out/tmp/src/data/geojson/Reader.js",
		"out/tmp/src/data/kml/HotSpot.js",
		"out/tmp/src/data/kml/Icon.js",
		"out/tmp/src/data/utils/Dom.js",
		"out/tmp/src/data/kml/IconStyle.js",
		"out/tmp/src/data/utils/ColorHelper.js",
		"out/tmp/src/data/kml/BalloonStyle.js",
		"out/tmp/src/data/kml/ColorStyle.js",
		"out/tmp/src/data/kml/PolyStyle.js",
		"out/tmp/src/data/kml/LineStyle.js",
		"out/tmp/src/data/kml/Style.js",
		"out/tmp/src/data/kml/StyleContainer.js",
		"out/tmp/src/data/kml/Feature.js",
		"out/tmp/src/data/kml/Pair.js",
		"out/tmp/src/data/kml/StyleMap.js",
		"out/tmp/src/data/kml/Point.js",
		"out/tmp/src/data/kml/Polygon.js",
		"out/tmp/src/data/kml/Line.js",
		"out/tmp/src/data/kml/ObjectFactory.js",
		"out/tmp/src/data/kml/Reader.js",
		"out/tmp/src/data/namespace.js"
	],
	"names": [
		"goog.global",
		"goog.exportSymbol",
		"publicPath",
		"object",
		"parts",
		"split",
		"cur",
		"execScript",
		"part",
		"length",
		"shift",
		"undefined",
		"H.data.AbstractReader",
		"url",
		"collection",
		"lop",
		"createObjects",
		"H",
		"lang",
		"bind",
		"util",
		"EventTarget",
		"call",
		"inherits",
		"H.data.AbstractReader.State",
		"prototype",
		"state",
		"EventType",
		"getLayer",
		"H.data.AbstractReader.prototype.getLayer",
		"lopRootGroup",
		"map",
		"provider",
		"LocalObjectProvider",
		"getRootGroup",
		"addObjects",
		"layer",
		"ObjectLayer",
		"goog.exportProperty",
		"getParsedObjects",
		"H.data.AbstractReader.prototype.getParsedObjects",
		"concat",
		"getUrl",
		"H.data.AbstractReader.prototype.getUrl",
		"setUrl",
		"H.data.AbstractReader.prototype.setUrl",
		"Error",
		"getState",
		"H.data.AbstractReader.prototype.getState",
		"H.data.AbstractReader.prototype.setState",
		"opt_target",
		"opt_msg",
		"dispatchEvent",
		"H.data.AbstractReader.Event",
		"STATECHANGE",
		"parse",
		"H.data.AbstractReader.prototype.parse",
		"that",
		"setState",
		"net",
		"Xhr",
		"xhrResponse",
		"data",
		"err",
		"target",
		"type",
		"message",
		"getSuperProto",
		"constructor",
		"Event",
		"H.data.geojson.ObjectFactory",
		"style",
		"style_",
		"create",
		"H.data.geojson.ObjectFactory.prototype.create",
		"obj",
		"opt_group",
		"mapObject",
		"Marker",
		"getPoint_",
		"Polyline",
		"getStrip_",
		"Polygon",
		"Group",
		"i",
		"len",
		"coords",
		"marker",
		"group",
		"addObject",
		"polyline",
		"polygon",
		"objs",
		"getGeometryCollection_",
		"properties",
		"opt_type",
		"setData",
		"H.data.geojson.ObjectFactory.prototype.getPoint_",
		"geo",
		"Point",
		"H.data.geojson.ObjectFactory.prototype.getStrip_",
		"strip",
		"Strip",
		"pushPoint",
		"H.data.geojson.Reader",
		"opt_options",
		"defaultStyle_",
		"H.data.AbstractReader.call",
		"H.data.geojson.Reader.prototype.createObjects",
		"geoJSON",
		"objectFactory",
		"features",
		"JSON",
		"addObject_",
		"getFeature_",
		"ex",
		"H.data.geojson.Reader.prototype.defaultStyle_",
		"H.data.geojson.Reader.prototype.getFeature_",
		"geometry",
		"feature",
		"H.data.geojson.Reader.prototype.addObject_",
		"push",
		"H.data.kml.HotSpot",
		"node",
		"attributes",
		"att",
		"name",
		"x",
		"parseFloat",
		"value",
		"y",
		"isFractionalX",
		"H.data.utils.Dom",
		"getString",
		"isFractionalY",
		"H.data.kml.Icon",
		"childNodes",
		"childNode",
		"dom",
		"offsetX",
		"offsetY",
		"nodeName",
		"href",
		"getBoolean",
		"H.data.utils.Dom.prototype.getBoolean",
		"test",
		"H.data.utils.Dom.prototype.getString",
		"string",
		"nodeType",
		"nodeValue",
		"replace",
		"e",
		"getFloat",
		"H.data.utils.Dom.prototype.getFloat",
		"parseCoords",
		"H.data.utils.Dom.prototype.parseCoords",
		"coordsString",
		"coordStrs",
		"l",
		"IS_OGC_MODE",
		"step",
		"coord",
		"parseCoord",
		"slice",
		"H.data.utils.Dom.prototype.parseCoord",
		"coordStr",
		"Array",
		"lng",
		"lat",
		"alt",
		"isNaN",
		"getColor",
		"H.data.utils.Dom.prototype.getColor",
		"str",
		"substr",
		"H.data.kml.IconStyle",
		"scale",
		"icon",
		"hotSpot",
		"H.data.utils.ColorHelper",
		"internalMap",
		"4",
		"charAt",
		"join",
		"5",
		"7",
		"9",
		"rgbaMap",
		"shortHandHexToInt_",
		"val",
		"parseInt",
		"substring",
		"H.data.utils.ColorHelper.prototype.shortHandHexToInt_",
		"num",
		"H.data.utils.ColorHelper.prototype.intToHex_",
		"Math",
		"round",
		"toString",
		"H.data.utils.ColorHelper.prototype.toRGBA",
		"normalized",
		"result",
		"normalize_",
		"matches",
		"match",
		"intToHex_",
		"color",
		"toRandomRGBA",
		"H.data.utils.ColorHelper.prototype.toRandomRGBA",
		"rgba",
		"text",
		"possible",
		"floor",
		"random",
		"toRGBA",
		"max",
		"min",
		"H.data.kml.BalloonStyle",
		"bgColor",
		"H.data.kml.ColorStyle",
		"ch",
		"colorMode",
		"H.data.kml.PolyStyle",
		"outline",
		"fill",
		"colorStyle",
		"H.data.kml.LineStyle",
		"width",
		"H.data.kml.Style",
		"id",
		"getAttribute",
		"iconStyle",
		"lineStyle",
		"polyStyle",
		"balloonStyle",
		"H.data.kml.StyleContainer",
		"styles",
		"addStyle",
		"H.data.kml.StyleContainer.prototype.addStyle",
		"getStyleById",
		"H.data.kml.StyleContainer.prototype.getStyleById",
		"highlighted",
		"H.data.kml.StyleMap",
		"getStyle",
		"H.data.kml.Feature",
		"stylesContainer",
		"visibility",
		"placemark",
		"description",
		"open",
		"styleUrl",
		"featureStyle",
		"localStyle",
		"H.data.kml.Pair",
		"styleContainer",
		"key",
		"H.data.kml.Pair.prototype.getStyle",
		"pairs",
		"pair",
		"H.data.kml.StyleMap.prototype.getStyle",
		"H.data.kml.Point",
		"coordinate",
		"latLngAlt",
		"getCoordinates",
		"H.data.kml.Point.prototype.getCoordinates",
		"H.data.kml.Polygon",
		"line",
		"outerBoundaryChildNodes",
		"geoStrip",
		"childLen",
		"outerBoundaryChild",
		"H.data.kml.Line",
		"H.data.kml.Polygon.prototype.getCoordinates",
		"path",
		"coordinates",
		"H.data.kml.Line.prototype.getCoordinates",
		"lineLen",
		"H.data.kml.ObjectFactory",
		"opt_baseUrl",
		"dummyCanvas",
		"document",
		"createElement",
		"height",
		"iconCache_",
		"pendingIcons_",
		"emptyIcon_",
		"Icon",
		"baseUrl_",
		"H.data.kml.ObjectFactory.prototype.create",
		"placemarkNode",
		"getMapObject_",
		"H.data.kml.ObjectFactory.prototype.getMapObject_",
		"child",
		"options",
		"getOptions_",
		"pendingIcon",
		"events",
		"listenOnce",
		"iconKey",
		"anchor",
		"anchorX",
		"anchorY",
		"State",
		"size",
		"getSize",
		"getBitmap",
		"setIcon",
		"H.data.kml.ObjectFactory.prototype.getOptions_",
		"colorHelper",
		"mergeStyles_",
		"H.data.kml.ObjectFactory.absoluteUrlRegExp_.test",
		"math",
		"Size",
		"HitArea",
		"ShapeType",
		"POLYGON",
		"strokeColor",
		"lineWidth",
		"fillColor",
		"H.data.kml.ObjectFactory.prototype.mergeStyles_",
		"opt_mergedStyle",
		"mergedStyle",
		"hasOwnProperty",
		"H.data.kml.ObjectFactory.absoluteUrlRegExp_",
		"H.data.kml.Reader",
		"slashIndex",
		"queue_",
		"lastIndexOf",
		"kmlPath_",
		"H.data.kml.Reader.prototype.createObjects",
		"queueEntry",
		"currentGroup",
		"trim",
		"xmlDoc",
		"parseFromString",
		"DOMParser",
		"getElementsByTagName",
		"root",
		"documentNode",
		"fetchNodes_",
		"styleLen",
		"styleNodeArr",
		"styleMapNodeArr",
		"nodes",
		"parseNode_",
		"H.data.kml.Reader.prototype.addObject_",
		"H.data.kml.Reader.prototype.fetchNodes_",
		"tag",
		"opt_docOnly",
		"requestedNodes",
		"H.data.buildInfo",
		"BuildInfo",
		"get"
	],
	"sourcesContent": [
		"// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will write out Closure's deps file, unless the\n * global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects to\n * include their own deps file(s) from different locations.\n *\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler when --closure_pass\n *     or --mark_as_compiled is specified.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is\n * already defined in the current scope before assigning to prevent\n * clobbering if base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {}; // Identifies this file as the Closure base.\n\n\n/**\n * Reference to the global context.  In most cases this will be 'window'.\n */\ngoog.global = this;\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production js_binary can be easily stripped\n * by specifying --define goog.DEBUG=false to the JSCompiler. For example, most\n * toString() methods should be declared inside an \"if (goog.DEBUG)\" conditional\n * because they are generally used for debugging purposes and it is difficult\n * for the JSCompiler to statically determine whether they are used.\n */\ngoog.DEBUG = true;\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as JSCompiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he), see http://wiki/Main/IIISynonyms.\n */\ngoog.LOCALE = 'en';  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the JSCompiler.\n */\ngoog.TRUSTED_SITE = true;\n\n\n/**\n * Creates object stubs for a namespace.  The presence of one or more\n * goog.provide() calls indicate that the file defines the given\n * objects/namespaces.  Build tools also scan for provide/require statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n * @see goog.require\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice. This is intended\n    // to teach new developers that 'goog.provide' is effectively a variable\n    // declaration. And when JSCompiler transforms goog.provide into a real\n    // variable declaration, the compiled JS should work the same as the raw\n    // JS--even when the raw JS uses goog.provide incorrectly.\n    if (goog.isProvided_(name)) {\n      throw Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name);\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact\n * namespace for the test (e.g. 'goog.stringTest'). The linter will then\n * ignore the extra provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (COMPILED && !goog.DEBUG) {\n    opt_message = opt_message || '';\n    throw Error('Importing test-only code into non-debug environment' +\n                opt_message ? ': ' + opt_message : '.');\n  }\n};\n\n\nif (!COMPILED) {\n\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return !goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares\n   * that 'goog' and 'goog.events' must be namespaces.\n   *\n   * @type {Object}\n   * @private\n   */\n  goog.implicitNamespaces_ = {};\n}\n\n\n/**\n * Builds an object structure for the provided namespace path,\n * ensuring that names that already exist are not overwritten. For\n * example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} opt_object the object to expose at the end of the path.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n * @private\n */\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\n  var parts = name.split('.');\n  var cur = opt_objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && cur.execScript) {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  // Certain browsers cannot parse code in the form for((a in b); c;);\n  // This pattern is produced by the JSCompiler when it collapses the\n  // statement above into the conditional loop below. To prevent this from\n  // happening, use a for-loop and reserve the init logic as below.\n\n  // Parentheses added to eliminate strict JS warning in Firefox.\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && goog.isDef(opt_object)) {\n      // last part and we have an object; use it\n      cur[part] = opt_object;\n    } else if (cur[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Returns an object based on its fully qualified external name.  If you are\n * using a compilation pass that renames property names beware that using this\n * function will not find renamed properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var part; part = parts.shift(); ) {\n    if (goog.isDefAndNotNull(cur[part])) {\n      cur = cur[part];\n    } else {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {Object} obj The namespace to globalize.\n * @param {Object=} opt_global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, opt_global) {\n  var global = opt_global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {Array} provides An array of strings with the names of the objects\n *                         this file provides.\n * @param {Array} requires An array of strings with the names of the objects\n *                         this file requires.\n */\ngoog.addDependency = function(relPath, provides, requires) {\n  if (!COMPILED) {\n    var provide, require;\n    var path = relPath.replace(/\\\\/g, '/');\n    var deps = goog.dependencies_;\n    for (var i = 0; provide = provides[i]; i++) {\n      deps.nameToPath[provide] = path;\n      if (!(path in deps.pathToNames)) {\n        deps.pathToNames[path] = {};\n      }\n      deps.pathToNames[path][provide] = true;\n    }\n    for (var j = 0; require = requires[j]; j++) {\n      if (!(path in deps.requires)) {\n        deps.requires[path] = {};\n      }\n      deps.requires[path][require] = true;\n    }\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an orignal\n// way to do \"debug-mode\" development.  The dependency system can sometimes\n// be confusing, as can the debug DOM loader's asyncronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the\n// script will not load until some point after the current script.  If a\n// namespace is needed at runtime, it needs to be defined in a previous\n// script, or loaded via require() with its registered dependencies.\n// User-defined namespaces may need their own deps file.  See http://go/js_deps,\n// http://go/genjsdeps, or, externally, DepsWriter.\n// http://code.google.com/closure/library/docs/depswriter.html\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work is being done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = true;\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies\n * that works in parallel with the BUILD system. Note that all calls\n * to goog.require will be stripped by the JSCompiler when the\n * --closure_pass option is used.\n * @see goog.provide\n * @param {string} name Namespace to include (as was given in goog.provide())\n *     in the form \"goog.package.part\".\n */\ngoog.require = function(name) {\n\n  // if the object already exists we do not need do do anything\n  // TODO(arv): If we start to support require based on file name this has\n  //            to change\n  // TODO(arv): If we allow goog.foo.* this has to change\n  // TODO(arv): If we implement dynamic load after page load we should probably\n  //            not remove this code for the compiled output\n  if (!COMPILED) {\n    if (goog.isProvided_(name)) {\n      return;\n    }\n\n    if (goog.ENABLE_DEBUG_LOADER) {\n      var path = goog.getPathFromDeps_(name);\n      if (path) {\n        goog.included_[path] = true;\n        goog.writeScripts_();\n        return;\n      }\n    }\n\n    var errorMessage = 'goog.require could not find: ' + name;\n    if (goog.global.console) {\n      goog.global.console['error'](errorMessage);\n    }\n\n\n      throw Error(errorMessage);\n\n  }\n};\n\n\n/**\n * Path for included scripts\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to write out Closure's deps file. By default,\n * the deps are written.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The function is passed the script source, which is a relative URI. It should\n * return true if the script was imported, false otherwise.\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * The identity function. Returns its first argument.\n *\n * @param {*=} opt_returnValue The single value that will be returned.\n * @param {...*} var_args Optional trailing arguments. These are ignored.\n * @return {?} The first argument. We can't know the type -- just pass it along\n *      without type.\n * @deprecated Use goog.functions.identity instead.\n */\ngoog.identityFunction = function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n *\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error\n * will be thrown when bar() is invoked.\n *\n * Note: This does not take the name of the function to override as\n * an argument because that would make it more difficult to obfuscate\n * our JavaScript code.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be\n *   overridden.\n */\ngoog.abstractMethod = function() {\n  throw Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a {@code getInstance} static method that always return the same instance\n * object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n */\ngoog.addSingletonGetter = function(ctor) {\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    return ctor.instance_ = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the {@code goog.testing.singleton} module. The compiler\n * removes this variable if unused.\n * @type {!Array.<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\nif (!COMPILED && goog.ENABLE_DEBUG_LOADER) {\n  /**\n   * Object used to keep track of urls that have already been added. This\n   * record allows the prevention of circular dependencies.\n   * @type {Object}\n   * @private\n   */\n  goog.included_ = {};\n\n\n  /**\n   * This object is used to keep track of dependencies and other data that is\n   * used for loading scripts\n   * @private\n   * @type {Object}\n   */\n  goog.dependencies_ = {\n    pathToNames: {}, // 1 to many\n    nameToPath: {}, // 1 to 1\n    requires: {}, // 1 to many\n    // used when resolving dependencies to prevent us from\n    // visiting the file twice\n    visited: {},\n    written: {} // used to keep track of script files we have written\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    var doc = goog.global.document;\n    return typeof doc != 'undefined' &&\n           'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * Tries to detect the base path of the base.js script that bootstraps Closure\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH) {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    var doc = goog.global.document;\n    var scripts = doc.getElementsByTagName('script');\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var src = scripts[i].src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n\n  /**\n   * Imports a script if, and only if, that script hasn't already been imported.\n   * (Must be called at execution time)\n   * @param {string} src Script source.\n   * @private\n   */\n  goog.importScript_ = function(src) {\n    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||\n        goog.writeScriptTag_;\n    if (!goog.dependencies_.written[src] && importScript(src)) {\n      goog.dependencies_.written[src] = true;\n    }\n  };\n\n\n  /**\n   * The default implementation of the import function. Writes a script tag to\n   * import the script.\n   *\n   * @param {string} src The script source.\n   * @return {boolean} True if the script was imported, false otherwise.\n   * @private\n   */\n  goog.writeScriptTag_ = function(src) {\n    if (goog.inHtmlDocument_()) {\n      var doc = goog.global.document;\n\n      // If the user tries to require a new symbol after document load,\n      // something has gone terribly wrong. Doing a document.write would\n      // wipe out the page.\n      if (doc.readyState == 'complete') {\n        // Certain test frameworks load base.js multiple times, which tries\n        // to write deps.js each time. If that happens, just fail silently.\n        // These frameworks wipe the page between each load of base.js, so this\n        // is OK.\n        var isDeps = /\\bdeps.js$/.test(src);\n        if (isDeps) {\n          return false;\n        } else {\n          throw Error('Cannot write \"' + src + '\" after document load');\n        }\n      }\n\n      doc.write(\n          '<script type=\"text/javascript\" src=\"' + src + '\"></' + 'script>');\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * Resolves dependencies based on the dependencies added using addDependency\n   * and calls importScript_ in the correct order.\n   * @private\n   */\n  goog.writeScripts_ = function() {\n    // the scripts we need to write this time\n    var scripts = [];\n    var seenScript = {};\n    var deps = goog.dependencies_;\n\n    function visitNode(path) {\n      if (path in deps.written) {\n        return;\n      }\n\n      // we have already visited this one. We can get here if we have cyclic\n      // dependencies\n      if (path in deps.visited) {\n        if (!(path in seenScript)) {\n          seenScript[path] = true;\n          scripts.push(path);\n        }\n        return;\n      }\n\n      deps.visited[path] = true;\n\n      if (path in deps.requires) {\n        for (var requireName in deps.requires[path]) {\n          // If the required name is defined, we assume that it was already\n          // bootstrapped by other means.\n          if (!goog.isProvided_(requireName)) {\n            if (requireName in deps.nameToPath) {\n              visitNode(deps.nameToPath[requireName]);\n            } else {\n              throw Error('Undefined nameToPath for ' + requireName);\n            }\n          }\n        }\n      }\n\n      if (!(path in seenScript)) {\n        seenScript[path] = true;\n        scripts.push(path);\n      }\n    }\n\n    for (var path in goog.included_) {\n      if (!deps.written[path]) {\n        visitNode(path);\n      }\n    }\n\n    for (var i = 0; i < scripts.length; i++) {\n      if (scripts[i]) {\n        goog.importScript_(goog.basePath + scripts[i]);\n      } else {\n        throw Error('Undefined script input');\n      }\n    }\n  };\n\n\n  /**\n   * Looks at the dependency rules and tries to determine the script file that\n   * fulfills a particular rule.\n   * @param {string} rule In the form goog.namespace.Class or project.script.\n   * @return {?string} Url corresponding to the rule, or null.\n   * @private\n   */\n  goog.getPathFromDeps_ = function(rule) {\n    if (rule in goog.dependencies_.nameToPath) {\n      return goog.dependencies_.nameToPath[rule];\n    } else {\n      return null;\n    }\n  };\n\n  goog.findBasePath_();\n\n  // Allow projects to manage the deps files themselves.\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.importScript_(goog.basePath + 'deps.js');\n  }\n}\n\n\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {*} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (value) {\n      // Check these first, so we can avoid calling Object.prototype.toString if\n      // possible.\n      //\n      // IE improperly marshals tyepof across execution contexts, but a\n      // cross-context object will still return false for \"instanceof Object\".\n      if (value instanceof Array) {\n        return 'array';\n      } else if (value instanceof Object) {\n        return s;\n      }\n\n      // HACK: In order to use an Object prototype method on the arbitrary\n      //   value, the compiler requires the value be cast to type Object,\n      //   even though the ECMA spec explicitly allows it.\n      var className = Object.prototype.toString.call(\n          /** @type {Object} */ (value));\n      // In Firefox 3.6, attempting to access iframe window objects' length\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\n      // here.\n      if (className == '[object Window]') {\n        return 'object';\n      }\n\n      // We cannot always use constructor == Array or instanceof Array because\n      // different frames have different Array objects. In IE6, if the iframe\n      // where the array was created is destroyed, the array loses its\n      // prototype. Then dereferencing val.splice here throws an exception, so\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\n      // so that will work. In this case, this function will return false and\n      // most array functions will still work because the array is still\n      // array-like (supports length and []) even though it has lost its\n      // prototype.\n      // Mark Miller noticed that Object.prototype.toString\n      // allows access to the unforgeable [[Class]] property.\n      //  15.2.4.2 Object.prototype.toString ( )\n      //  When the toString method is called, the following steps are taken:\n      //      1. Get the [[Class]] property of this object.\n      //      2. Compute a string value by concatenating the three strings\n      //         \"[object \", Result(1), and \"]\".\n      //      3. Return Result(2).\n      // and this behavior survives the destruction of the execution context.\n      if ((className == '[object Array]' ||\n           // In IE all non value types are wrapped as objects across window\n           // boundaries (not iframe though) so we have to do object detection\n           // for this edge case\n           typeof value.length == 'number' &&\n           typeof value.splice != 'undefined' &&\n           typeof value.propertyIsEnumerable != 'undefined' &&\n           !value.propertyIsEnumerable('splice')\n\n          )) {\n        return 'array';\n      }\n      // HACK: There is still an array case that fails.\n      //     function ArrayImpostor() {}\n      //     ArrayImpostor.prototype = [];\n      //     var impostor = new ArrayImpostor;\n      // this can be fixed by getting rid of the fast path\n      // (value instanceof Array) and solely relying on\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\n      // but that would require many more function calls and is not warranted\n      // unless closure code is receiving objects from untrusted sources.\n\n      // IE in cross-window calls does not correctly marshal the function type\n      // (it appears just as an object) so we cannot use just typeof val ==\n      // 'function'. However, if the object has a call property, it is a\n      // function.\n      if ((className == '[object Function]' ||\n          typeof value.call != 'undefined' &&\n          typeof value.propertyIsEnumerable != 'undefined' &&\n          !value.propertyIsEnumerable('call'))) {\n        return 'function';\n      }\n\n\n    } else {\n      return 'null';\n    }\n\n  } else if (s == 'function' && typeof value.call == 'undefined') {\n    // In Safari typeof nodeList returns 'function', and on Firefox\n    // typeof behaves similarly for HTML{Applet,Embed,Object}Elements\n    // and RegExps.  We would like to return object for those and we can\n    // detect an invalid function by making sure that the function\n    // object has a call method.\n    return 'object';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the specified value is not |undefined|.\n * WARNING: Do not use this to test if an object has a property. Use the in\n * operator instead.  Additionally, this function assumes that the global\n * undefined variable has not been redefined.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\ngoog.isDef = function(val) {\n  return val !== undefined;\n};\n\n\n/**\n * Returns true if the specified value is |null|\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is null.\n */\ngoog.isNull = function(val) {\n  return val === null;\n};\n\n\n/**\n * Returns true if the specified value is defined and not null\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is an array\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArray = function(val) {\n  return goog.typeOf(val) == 'array';\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like\n * the value needs to be an object and have a getFullYear() function.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is a string\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Returns true if the specified value is a boolean\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\ngoog.isBoolean = function(val) {\n  return typeof val == 'boolean';\n};\n\n\n/**\n * Returns true if the specified value is a number\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\ngoog.isNumber = function(val) {\n  return typeof val == 'number';\n};\n\n\n/**\n * Returns true if the specified value is a function\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.isFunction = function(val) {\n  return goog.typeOf(val) == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays\n * and functions.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further\n * calls with the same object as a parameter returns the same value. The unique\n * ID is guaranteed to be unique across the current session amongst objects that\n * are passed into {@code getUid}. There is no guarantee that the ID is unique\n * or consistent across sessions. It is unsafe to generate unique ID for\n * function prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\n  // and SubClass.prototype will be the same.\n  return obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using {@code goog.getUid} in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // DOM nodes in IE are not instance of Object and throws exception\n  // for delete. Instead we try to use removeAttribute\n  if ('removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n  /** @preserveTry */\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure javascript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Adds a hash code field to an object. The hash code is unique for the\n * given object.\n * @param {Object} obj The object to get the hash code for.\n * @return {number} The hash code for the object.\n * @deprecated Use goog.getUid instead.\n */\ngoog.getHashCode = goog.getUid;\n\n\n/**\n * Removes the hash code field from an object.\n * @param {Object} obj The object to remove the field from.\n * @deprecated Use goog.removeUid instead.\n */\ngoog.removeHashCode = goog.removeUid;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (obj.clone) {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {Function} fn A function to partially apply.\n * @param {Object|undefined} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @private\n * @suppress {deprecated} The compiler thinks that Function.prototype.bind\n *     is deprecated because some people have declared a pure-JS version.\n *     Only the pure-JS version is truly deprecated.\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {Function} fn A function to partially apply.\n * @param {Object|undefined} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of |this| 'pre-specified'.<br><br>\n *\n * Remaining arguments specified at call-time are appended to the pre-\n * specified ones.<br><br>\n *\n * Also see: {@link #partial}.<br><br>\n *\n * Usage:\n * <pre>var barMethBound = bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default\n      // Chrome extension environment. This means that for Chrome extensions,\n      // they get the implementation of Function.prototype.bind that\n      // calls goog.bind instead of the native one. Even worse, we don't want\n      // to introduce a circular dependency between goog.bind and\n      // Function.prototype.bind, so we have to hack this to make sure it\n      // works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Prepend the bound arguments to the current arguments.\n    var newArgs = Array.prototype.slice.call(arguments);\n    newArgs.unshift.apply(newArgs, args);\n    return fn.apply(this, newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n * @param {Object} target Target.\n * @param {Object} source Source.\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n */\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\n  // Unary plus operator converts its operand to a number which in the case of\n  // a date is done by calling getTime().\n  return +new Date();\n});\n\n\n/**\n * Evals javascript in the global scope.  In IE this uses execScript, other\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\n * global scope (for example, in Safari), appends a script tag instead.\n * Throws an exception if neither execScript or eval is defined.\n * @param {string} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  if (goog.global.execScript) {\n    goog.global.execScript(script, 'JavaScript');\n  } else if (goog.global.eval) {\n    // Test to see if eval works\n    if (goog.evalWorksForGlobals_ == null) {\n      goog.global.eval('var _et_ = 1;');\n      if (typeof goog.global['_et_'] != 'undefined') {\n        delete goog.global['_et_'];\n        goog.evalWorksForGlobals_ = true;\n      } else {\n        goog.evalWorksForGlobals_ = false;\n      }\n    }\n\n    if (goog.evalWorksForGlobals_) {\n      goog.global.eval(script);\n    } else {\n      var doc = goog.global.document;\n      var scriptElt = doc.createElement('script');\n      scriptElt.type = 'text/javascript';\n      scriptElt.defer = false;\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\n      scriptElt.appendChild(doc.createTextNode(script));\n      doc.body.appendChild(scriptElt);\n      doc.body.removeChild(scriptElt);\n    }\n  } else {\n    throw Error('goog.globalEval not available');\n  }\n};\n\n\n/**\n * Indicates whether or not we can call 'eval' directly to eval code in the\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\n * empirically tests whether eval works for globals). @see goog.globalEval\n * @type {?boolean}\n * @private\n */\ngoog.evalWorksForGlobals_ = null;\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @type {Object|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a\n * hyphen and passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which\n * these mappings are used. In the BY_PART style, each part (i.e. in\n * between hyphens) of the passed in css name is rewritten according\n * to the map. In the BY_WHOLE style, the full css name is looked up in\n * the map directly. If a rewrite is not specified by the map, the\n * compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls\n * to goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x= 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed\n * only the modifier will be processed, as it is assumed the first\n * argument was generated as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename = goog.cssNameMappingStyle_ == 'BY_WHOLE' ?\n        getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  if (opt_modifier) {\n    return className + '-' + rename(opt_modifier);\n  } else {\n    return rename(className);\n  }\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --closure_pass flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {Object|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object=} opt_values Map of place holder name to value.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values) {\n  var values = opt_values || {};\n  for (var key in values) {\n    var value = ('' + values[key]).replace(/\\$/g, '$$$$');\n    str = str.replace(new RegExp('\\\\{\\\\$' + key + '\\\\}', 'gi'), value);\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primtive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated,\n * unless they are exported in turn via this function or\n * goog.exportProperty\n *\n * <p>Also handy for making public items that are defined in anonymous\n * closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction',\n *                       Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n */\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { }\n *\n * function ChildClass(a, b, c) {\n *   goog.base(this, a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // works\n * </pre>\n *\n * In addition, a superclass' implementation of a method can be invoked\n * as follows:\n *\n * <pre>\n * ChildClass.prototype.foo = function(a) {\n *   ChildClass.superClass_.foo.call(this, a);\n *   // other code\n * };\n * </pre>\n *\n * @param {Function} childCtor Child class.\n * @param {Function} parentCtor Parent class.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {};\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n};\n\n\n/**\n * Call up to the superclass.\n *\n * If this is called from a constructor, then this calls the superclass\n * contructor with arguments 1-N.\n *\n * If this is called from a prototype method, then you must pass\n * the name of the method as the second argument to this function. If\n * you do not, you will get a runtime error. This calls the superclass'\n * method with arguments 2-N.\n *\n * This function only works if you use goog.inherits to express\n * inheritance relationships between your classes.\n *\n * This function is a compiler primitive. At compile-time, the\n * compiler will do macro expansion to remove a lot of\n * the extra overhead that this function introduces. The compiler\n * will also enforce a lot of the assumptions that this function\n * makes, and treat it as a compiler error if you break them.\n *\n * @param {!Object} me Should always be \"this\".\n * @param {*=} opt_methodName The method name if calling a super method.\n * @param {...*} var_args The rest of the arguments.\n * @return {*} The return value of the superclass method.\n */\ngoog.base = function(me, opt_methodName, var_args) {\n  var caller = arguments.callee.caller;\n  if (caller.superClass_) {\n    // This is a constructor. Call the superclass constructor.\n    return caller.superClass_.constructor.apply(\n        me, Array.prototype.slice.call(arguments, 1));\n  }\n\n  var args = Array.prototype.slice.call(arguments, 2);\n  var foundCaller = false;\n  for (var ctor = me.constructor;\n       ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {\n    if (ctor.prototype[opt_methodName] === caller) {\n      foundCaller = true;\n    } else if (foundCaller) {\n      return ctor.prototype[opt_methodName].apply(me, args);\n    }\n  }\n\n  // If we did not find the caller in the prototype chain,\n  // then one of two things happened:\n  // 1) The caller is an instance method.\n  // 2) This method was not called by the right caller.\n  if (me[opt_methodName] === caller) {\n    return me.constructor.prototype[opt_methodName].apply(me, args);\n  } else {\n    throw Error(\n        'goog.base called from a method of one name ' +\n        'to a method of a different name');\n  }\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the\n * aliases applied.  In uncompiled code the function is simply run since the\n * aliases as written are valid JavaScript.\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *    (e.g. \"var Timer = goog.Timer\").\n */\ngoog.scope = function(fn) {\n  fn.call(goog.global);\n};\n\n\n",
		"goog.provide('H.data.AbstractReader');\ngoog.provide('H.data.AbstractReader.Event');\n\n\n\n// FIXME: At the moment this class is tested imlicitly by derived classes\n/**\n * An abstract reader class defines interface for data readers and has general functionality\n * related to fetching data and reader events.\n *\n * @constructor\n * @publish\n * @export\n * @extends {H.util.EventTarget}\n * @param {string} url\n */\nH.data.AbstractReader = function(url) {\n  'use strict';\n\n  /**\n   * Holds Url string\n   * @protected\n   * @type {string}\n   */\n  this.url = url;\n\n  /**\n   * Contains all root data elements as map objects.\n   * @protected\n   * @type {Array.<H.map.Object>}\n   */\n  this.collection = [];\n\n  /**\n   * Local object provider that's populated with map data\n   * @protected\n   * @type {H.map.provider.LocalObjectProvider}\n   */\n  this.lop = null;\n\n  this.createObjects = H.lang.bind(this.createObjects, this);\n\n  H.util.EventTarget.call(this);\n};\nH.lang.inherits(H.data.AbstractReader, H.util.EventTarget);\n\n\n/**\n * Fired when the reader state changes, see {@link H.data.AbstractReader#getState}\n * @publish\n * @event H.data.AbstractReader#statechange\n * @type {H.data.AbstractReader.Event}\n */\n\n\n/**\n * The state types of an Reader. Possible states are:\n * <ul>\n *    <li><code>ERROR</code> - request failed or data are malformed</li>\n *    <li><code>LOADING</code> - fetching data from network resource</li>\n *    <li><code>VISIT</code> - parser encountered data at root level</li>\n *    <li><code>READY</code> - reader is ready to fetch and parse new data</li>\n * </ul>\n * @publish\n * @export\n * @enum {number}\n */\nH.data.AbstractReader.State = {\n  'ERROR': -1,\n  'LOADING': 0,\n  'VISIT': 1,\n  'READY': 2\n};\n\n\n/**\n * The initial state of the reader\n * @protected\n * @type {H.data.AbstractReader.State}\n */\nH.data.AbstractReader.prototype.state = H.data.AbstractReader.State['READY'];\n\n\n/**\n * Events fired by Reader. Event <code>statechange</code> is fired every time when reader's\n * parsing state changes. For possible states see {@link H.data.AbstractReader.State}\n * @enum {string}\n */\nH.data.AbstractReader.prototype.EventType = {\n  STATECHANGE: 'statechange'\n};\n\n\n/**\n * Method returns {@link H.map.layer.ObjectLayer} that contains parsed data, and\n * can be added directly to the map. It returns new instance of the class with every invocation.\n * If data hasn't been parsed it will return <code>H.map.layer.ObjectLayer</code> that contains\n * partial information, and reader will add new parsed objects to the layer's provider later on.\n * @publish\n * @export\n * @return {H.map.layer.ObjectLayer}\n */\nH.data.AbstractReader.prototype.getLayer = function() {\n  'use strict';\n  var lopRootGroup;\n  if (!this.lop) {\n    this.lop = new H.map.provider.LocalObjectProvider();\n    lopRootGroup = this.lop.getRootGroup();\n    lopRootGroup.addObjects(this.collection);\n  }\n  return new H.map.layer.ObjectLayer(this.lop);\n};\n\n\n/**\n * Method returns collection of currently parsed, and converted to\n * {@code H.map.Object} data objects. Method returns only currently parsed objects\n * if parsing is ongoing.\n * @publish\n * @export\n * @return {Array.<H.map.Object>}\n */\nH.data.AbstractReader.prototype.getParsedObjects = function() {\n  'use strict';\n  return this.collection.concat([]);\n};\n\n\n/**\n * Returns URL of the current file, which is either in process of fetching/parsing or\n * file that has been already parsed.\n * @publish\n * @export\n * @return {string} url\n */\nH.data.AbstractReader.prototype.getUrl = function() {\n  'use strict';\n  return this.url;\n};\n\n\n/**\n * Method sets reader's URL. Method resets current Reader's state to its initial values\n * (clears data about last parsed objects, etc.), and throws InvalidState exception\n * if Reader's state is not <code>READY</code> or <code>ERROR</code>.\n * @publish\n * @export\n * @param {string} url The new URL\n * @return {H.data.AbstractReader}\n */\nH.data.AbstractReader.prototype.setUrl = function(url) {\n  'use strict';\n  if (this.state === H.data.AbstractReader.State['LOADING'] ||\n      this.state === H.data.AbstractReader.State['VISIT']) {\n    throw new Error('InvalidState: state ' + this.state);\n  }\n  this.collection = [];\n  this.lop = null;\n  this.url = url;\n  return this;\n};\n\n\n/**\n* Returns the reader's processing state for possible states see {@link H.data.AbstractReader.State}\n* @publish\n* @export\n* @return {H.data.AbstractReader.State}\n*/\nH.data.AbstractReader.prototype.getState = function() {\n  'use strict';\n  return this.state;\n};\n\n\n/**\n * Sets the state of this reader and dispatch a \"statechange\" event\n * @protected\n * @param {!H.data.AbstractReader.State} state current reader state\n * @param {H.map.Object=} opt_target optional target that's passed to event listeners\n * @param {string=} opt_msg optional message associated with the state\n */\nH.data.AbstractReader.prototype.setState = function(state, opt_target, opt_msg) {\n  'use strict';\n  this.state = state;\n  this.dispatchEvent(new H.data.AbstractReader.Event(opt_target || this,\n      this.EventType.STATECHANGE, state, opt_msg || ''));\n};\n\n\n/**\n * Method launches parsing of the data file at the current url (see\n * {@link H.data.AbstractReader#setUrl} or {@link H.data.AbstractReader}). Method uses XHR\n * as a transport therefore same origin policy applies, or server should respond with proper CORS headers.\n * @publish\n * @export\n */\nH.data.AbstractReader.prototype.parse = function() {\n  'use strict';\n  var that = this,\n      // XHR response handler. Note that either we get data or error\n      xhrResponse = function(data, err) {\n        if (err) {\n          that.setState(H.data.AbstractReader.State['ERROR'], null, 'Error loading file');\n        } else {\n          that.createObjects(data);\n        }\n      };\n\n  this.setState(H.data.AbstractReader.State['LOADING']);\n\n  // Creation of an Xhr request object automatically will fire of the request\n  new H.net.Xhr(this.url, xhrResponse);\n};\n\n\n/**\n * Abstracted protected method that is used as a callback when data arrives and is responsible for\n * transforming arrived data to {@link H.map.Object}\n * @abstract\n * @protected\n */\nH.data.AbstractReader.prototype.createObjects = goog.abstractMethod;\n\n\n\n//##############################################  AbstractReader.Event  ################################################\n/**\n * The event class for state events that are dispatched by AbstractReader\n * @publish\n * @constructor\n * @extends {H.util.Event}\n * @param {H.data.AbstractReader|H.map.Object} target The target that's passed to event listeners\n * @param {string} type The type of the event\n * @param {H.data.AbstractReader.State} state The state of the target firing an event\n * @param {string} message The message associated with an event\n */\nH.data.AbstractReader.Event = function(target, type, state, message) {\n  'use strict';\n\n  // Invoke the H.util.Event constructor first:\n  H.util.getSuperProto(H.data.AbstractReader.Event).constructor.call(this, type, target);\n\n  /**\n   * State of the target\n   * @type {H.data.AbstractReader.State}\n   */\n  this['state'] = state;\n\n  /**\n   * Optional message associated with the state\n   * @type {string}\n   */\n  this['message'] = message;\n};\nH.lang.inherits(H.data.AbstractReader.Event, H.util.Event);\n",
		"goog.provide('H.data.geojson.ObjectFactory');\n\n\n\n/**\n * This class produces map objects.\n * @constructor\n * @param {function(H.map.Object)} style function that's invoked after object is created and can\n * set style on the object\n */\nH.data.geojson.ObjectFactory = function(style) {\n  'use strict';\n  this.style_ = style;\n};\n\n\n/**\n * Generates out of a given geoJSON a valid H.map.Object.\n * @export\n * @param {!Object} obj GeoJSON object\n * @param {H.map.Group=} opt_group\n * @return {(H.map.Object|undefined)} mapObject\n */\nH.data.geojson.ObjectFactory.prototype.create = function(obj, opt_group) {\n  'use strict';\n  var mapObject,\n      type;\n\n  switch (obj['type']) {\n    case 'Point':\n      mapObject = new H.map.Marker(this.getPoint_(\n          /** @type {Array.<number>} */ (obj['coordinates'])));\n      break;\n    case 'LineString':\n      mapObject = new H.map.Polyline(this.getStrip_(\n          /** @type {Array.<Array.<number>>} */(obj['coordinates'])));\n      break;\n    case 'Polygon':\n      mapObject = new H.map.Polygon(this.getStrip_(obj['coordinates'][0]));\n      break;\n    case 'MultiPoint':\n      mapObject = new H.map.Group();\n      this.getMultiPoint_(mapObject, obj['coordinates']);\n      type = 'multiPoint';\n      break;\n    case 'MultiLineString':\n      mapObject = new H.map.Group();\n      this.getMultiLineString_(mapObject, obj['coordinates']);\n      type = 'multiLineString';\n      break;\n    case 'MultiPolygon':\n      mapObject = new H.map.Group();\n      this.getMultiPolygon_(mapObject, obj['coordinates']);\n      type = 'multiPolygon';\n      break;\n    case 'GeometryCollection':\n      mapObject = new H.map.Group();\n      this.getGeometryCollection_(mapObject, obj['geometries']);\n      type = 'geometryCollection';\n      break;\n  }\n  if (mapObject) {\n    this.addProperties_(mapObject, obj['properties'], type);\n    this.style_(mapObject);\n  }\n\n  if (opt_group && mapObject) {\n    opt_group.addObject(mapObject);\n  }\n  return mapObject;\n};\n\n\n/**\n * Method adds geojson's properties object, and object's type to map object\n * @param {H.map.Object} object map object\n * @param {Object} properties geojson property object\n * @param {string=} opt_type optional type of object\n * @private\n */\nH.data.geojson.ObjectFactory.prototype.addProperties_ = function(object, properties, opt_type) {\n  'use strict';\n  var data = {};\n  if (properties) {\n    data['properties'] = properties;\n  }\n  if (opt_type) {\n    data[opt_type] = true;\n  }\n  object.setData(data);\n};\n\n\n/**\n * Returns a Point from given geoJSON point.\n * @private\n * @param {Array.<number>} coords Array of coordinates\n * @return {H.geo.Point}\n */\nH.data.geojson.ObjectFactory.prototype.getPoint_ = function(coords) {\n  'use strict';\n  return new H.geo.Point(coords[1], coords[0]);\n};\n\n\n/**\n * Returns a strip from given geoJSON lineString or polygon.\n * @private\n * @param {Array.<Array.<number>>} coords\n * @return {H.geo.Strip}\n */\nH.data.geojson.ObjectFactory.prototype.getStrip_ = function(coords) {\n  'use strict';\n  var i = 0,\n      len = coords.length,\n      strip = new H.geo.Strip();\n  for (; i < len; i++) {\n    strip.pushPoint(this.getPoint_(coords[i]));\n  }\n  return strip;\n};\n\n\n/**\n * Creates Points from given geoJSON multiPoint.\n * @private\n * @param {H.map.Group} group\n * @param {Array.<Array.<number>>} coords Array of coordinates\n */\nH.data.geojson.ObjectFactory.prototype.getMultiPoint_ = function(group, coords) {\n  'use strict';\n  var i = 0,\n      len = coords.length,\n      marker;\n  for (; i < len; i++) {\n    marker = new H.map.Marker(this.getPoint_(coords[i]));\n    group.addObject(marker);\n  }\n};\n\n\n/**\n * Creates Polylines from given geoJSON multiLineString.\n * @private\n * @param {H.map.Group} group\n * @param {Array.<Array.<Array.<number>>>} coords Array of coordinates\n */\nH.data.geojson.ObjectFactory.prototype.getMultiLineString_ = function(group, coords) {\n  'use strict';\n  var i = 0,\n      len = coords.length,\n      polyline;\n  for (; i < len; i++) {\n    polyline = new H.map.Polyline(this.getStrip_(coords[i]));\n    group.addObject(polyline);\n  }\n};\n\n\n/**\n * Creates Polygons from given geoJSON multiPolygon.\n * @private\n * @param {H.map.Group} group\n * @param {Array.<number>} coords Array of coordinates\n */\nH.data.geojson.ObjectFactory.prototype.getMultiPolygon_ = function(group, coords) {\n  'use strict';\n  var i = 0,\n      len = coords.length,\n      polygon;\n  for (; i < len; i++) {\n    polygon = new H.map.Polygon(this.getStrip_(coords[i][0]));\n    group.addObject(polygon);\n  }\n};\n\n\n/**\n * Iterates over all geojson objects inside the GeometryCollection.\n * @private\n * @param {H.map.Group} group\n * @param {Array.<!Object>} objs Array of geojson objects\n */\nH.data.geojson.ObjectFactory.prototype.getGeometryCollection_ = function(group, objs) {\n  'use strict';\n  var i = 0,\n      len = objs.length;\n  for (; i < len; i++) {\n    this.create(objs[i], group);\n  }\n};\n",
		"goog.provide('H.data.geojson.Reader');\n\n\ngoog.require('H.data.AbstractReader');\ngoog.require('H.data.geojson.ObjectFactory');\n\n\n\n/**\n * The GeoJSON Reader is responsible for fetching and interpreting GeoJSON data. Reader creates\n * <code>H.map.Object</code> that can be displayed on the map (for more details on GeoJSON\n * see http://geojson.org/).\n * Auxiliary data that accompanies geometries (everthing that <code>properties</code> field contains)\n * is binded to the map object and can be fetched with object's\n * <code>getData</code> method (see {@link H.map.Object#getData})\n *\n * Note that you can load GeoJSON file even from a different domain, if that domain supports\n * Cross-Origin Resource Sharing (see http://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS).\n *\n * @example\n * var reader = new H.data.geojson.Reader('/path/to/geojson/file.json');\n * reader.parse();\n * //assuming that map already exists\n * map.addLayer(reader.getLayer());\n * @constructor\n * @publish\n * @export\n * @extends {H.data.AbstractReader}\n * @param {string} url url of the data file\n * @param {H.data.geojson.Reader.Options=} opt_options additional reader parameters\n */\nH.data.geojson.Reader = function(url, opt_options) {\n  'use strict';\n  var options = opt_options || {};\n\n  this.style_ = options['style'] || this.defaultStyle_;\n  H.data.AbstractReader.call(this, url);\n};\nH.lang.inherits(H.data.geojson.Reader, H.data.AbstractReader);\n\n\n/**\n * Parses passed argument into JSON object (if it is string) and produces map objects out of it.\n * @protected\n * @param {string} data\n */\nH.data.geojson.Reader.prototype.createObjects = function(data) {\n  'use strict';\n  var geoJSON,\n      objectFactory,\n      obj,\n      group,\n      features;\n\n  try {\n    geoJSON = /** @type {!Object}*/(JSON.parse(data));\n\n    if (typeof geoJSON === 'object') {\n      objectFactory = new H.data.geojson.ObjectFactory(this.style_);\n\n      switch (geoJSON['type']) {\n        case 'FeatureCollection':\n          features = geoJSON['features'];\n          if (features) {\n            group = new H.map.Group();\n            this.addObject_(group);\n            for (var i = 0; i < features.length; i++) {\n              obj = this.getFeature_(features[i]);\n              obj = objectFactory.create(obj);\n              if (obj) {\n                group.addObject(obj);\n              }\n            }\n          }\n          break;\n        case 'Feature':\n          obj = this.getFeature_(geoJSON);\n          obj = objectFactory.create(obj);\n          if (obj) {\n            this.addObject_(obj);\n          }\n          break;\n        default :\n          obj = objectFactory.create(geoJSON);\n          if (obj) {\n            this.addObject_(obj);\n          }\n      }\n\n      this.setState(H.data.AbstractReader.State['READY']);\n    } else {\n      this.setState(H.data.AbstractReader.State['ERROR'], undefined, 'Invalid syntax');\n    }\n  } catch (ex) {\n    this.setState(H.data.AbstractReader.State['ERROR'], undefined, 'Parse error. ' + ex.message);\n  }\n};\n\n\n/**\n * Default styling function. at the moment it's meant to do nothing.\n * @private\n */\nH.data.geojson.Reader.prototype.defaultStyle_ = function() {};\n\n\n/**\n * The method takes in geojson feature and transforms it into the object that can be consumed by\n * object factory.\n * TODO: make a typedef for it\n * @private\n * @param {!Object} obj GeoJSON feature to parse\n * @return {!Object} geometry\n */\nH.data.geojson.Reader.prototype.getFeature_ = function(obj) {\n  'use strict';\n  var geometry,\n      feature = {};\n  if (obj['geometry'] && obj['properties']) {\n    geometry = obj['geometry'];\n    feature['type'] = geometry['type'];\n    feature['properties'] = obj['properties'];\n    if (geometry['coordinates']) {\n      feature['coordinates'] = geometry['coordinates'];\n    }\n    if (geometry['geometries']) {\n      feature['geometries'] = geometry['geometries'];\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Is called when a geoJSON object was read and a valid map object was created.\n * @private\n * @param {!H.map.Object} obj Is a map object like group, marker, polyline or polygon\n */\nH.data.geojson.Reader.prototype.addObject_ = function(obj) {\n  'use strict';\n  if (this.lop) {\n    this.lop.getRootGroup().addObject(obj);\n  }\n  this.collection.push(obj);\n  this.setState(H.data.AbstractReader.State['VISIT'], obj);\n};\n\n\n/**\n * Options used to initialize a Reader\n * @publish\n *\n * @property {function(H.map.Object)=} style\n *           Function that is invoked during parsing after object creation,\n *           and is used to set style of the object\n *\n * @typedef {{\n *   style: (function(H.map.Object)|undefined)\n * }}\n */\nH.data.geojson.Reader.Options;\n",
		"goog.provide('H.data.kml.HotSpot');\n\n\n\n/**\n * This class represents the &lt;HotSpot> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document which is currently being parsed.\n */\nH.data.kml.HotSpot = function(node) {\n  'use strict';\n  var attributes = node.attributes,\n      att,\n      i = attributes.length;\n\n  while (i--) {\n    att = attributes[i];\n    switch (att.name) {\n      case 'x':\n        this.x = parseFloat(att.value);\n        break;\n      case 'y':\n        this.y = parseFloat(att.value);\n        break;\n      case 'xunits':\n        this.isFractionalX = H.data.utils.Dom.prototype.getString(att) === 'fraction';\n        break;\n      case 'yunits':\n        this.isFractionalY = H.data.utils.Dom.prototype.getString(att) === 'fraction';\n        break;\n    }\n  }\n};\n",
		"goog.provide('H.data.kml.Icon');\n\n\n\n/**\n * This class represents the &lt;Icon> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document which is currently being parsed.\n */\nH.data.kml.Icon = function(node) {\n  'use strict';\n  var i,\n      childNodes = node.childNodes,\n      childNode,\n      dom = new H.data.utils.Dom();\n  this.offsetX = this.offsetY = 0;\n  i = childNodes.length;\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'href':\n        this.href = dom.getString(childNode);\n        break;\n    }\n  }\n};\n",
		"goog.provide('H.data.utils.Dom');\n\n\n\n/**\n * This is a kml dom helper class. It provides some functionality to handle kml dom.\n * @constructor\n * @export\n */\nH.data.utils.Dom = function() {};\n\n\n/**\n * This method parses the value of an XML DOM node to a\n * Boolean value.\n * @export\n * @param {!Object} node An XML DOM node to parse\n * @return {boolean} A Boolean representation of the node value\n */\nH.data.utils.Dom.prototype.getBoolean = function(node) {\n  return /^1$|^true$/.test(this.getString(node));\n};\n\n\n/**\n * This can be used to parse a DOM node and to get the value as string back.\n * @export\n * @param {!Object} node A DOM node is required.\n * @return {string} Returns parsed node content.\n */\nH.data.utils.Dom.prototype.getString = function(node) {\n  'use strict';\n  try {\n    var string = '',\n        i = 0,\n        childNodes = node.childNodes,\n        len = childNodes.length;\n    if (node.nodeType === 2) {\n      return node.value;\n    } else {\n      for (; i < len; i++) {\n        string += childNodes[i].nodeValue.replace(/^\\s+|\\s+$/g, '');\n      }\n    }\n  } catch (e) {}\n  return string || '';\n};\n\n\n/**\n * This method parses the value of an XML DOM node to\n * a Floating point number.\n * @export\n * @param {!Object} node An XML DOM node to parse\n * @return {number} The value of the node as a float\n */\nH.data.utils.Dom.prototype.getFloat = function(node) {\n  'use strict';\n  return parseFloat(this.getString(node)) || 0;\n};\n\n\n/**\n * This method parses a string containing coordinates to an\n * array of objects, each containing the properties 'lat', 'lng' and\n * 'alt'. The return value contains only valid coordinates.\n * @export\n * @param {string} coordsString A string containing a list of coordinates as\n *   specified in KML specification, for example: '13,53.5,0\n * 14,53,0 13,52.5,0 14,52.5,0' or non standard comma separated list of\n * coordinates like '13,53.5,0,14,53,0,13,52.5,0,14,52.5,0'.\n * In this case specifying altitude(3rd component in each tuple) is required.\n * Please do not use spaces in case if you provide coordinates in 2nd format.\n * @return {Array.<H.geo.Point>} A list of objects containing\n * parsed geographical coordinates\n */\nH.data.utils.Dom.prototype.parseCoords = function(coordsString) {\n  'use strict';\n  var coordStrs = coordsString.split(/\\s+/),\n      l = coordStrs.length,\n      IS_OGC_MODE = !(coordStrs && l == 1),\n      step = IS_OGC_MODE ? 1 : 3,\n      coords = [],\n      coord,\n      i,\n      getNext = function(arr, i) {\n        return IS_OGC_MODE ? arr[i] : (i + 3 > arr.length ? null : arr.slice(i, i + 3));\n      };\n\n  // JSLAPM-1278\n  if (!IS_OGC_MODE) {\n    coordStrs = coordsString.split(',');\n    l = coordStrs.length;\n  }\n\n  for (i = 0; i < l; i += step) {\n    if ((coord = this.parseCoord(getNext(coordStrs, i)))) {\n      coords.push(coord);\n    }\n    else {\n      return [];\n    }\n  }\n\n  return coords;\n};\n\n\n/**\n * This method parses a object containing geographical coordinates\n * from a string. If the input does not contain valid\n * coordinates, the return value is undefined.\n * @export\n * @param {(string|Array.<String>)} coordStr A string containing the values of\n *     geographical coordinate as specified in KML specification,\n *     for example: '13,53.5,0' or '13,53.5'\n *     Or an Array of strings like ['13','53.5','0'] or ['13','53.5']\n * @return {H.geo.Point} An object containing an\n * object containing geographical coordinates (the properties are\n * 'lat', 'lng', and 'alt'\n */\nH.data.utils.Dom.prototype.parseCoord = function(coordStr) {\n  'use strict';\n  if (!coordStr) {\n    return null;\n  }\n\n  var coord = coordStr instanceof Array && coordStr.length > 0 && coordStr.length < 4 ?\n      coordStr : coordStr.split(','),\n      lng = parseFloat(coord[0]),\n      lat = parseFloat(coord[1]),\n      alt = parseFloat(coord[2]);\n  return isNaN(lat) || isNaN(lng) ?\n      null : new H.geo.Point(lat, lng, isNaN(alt) ? undefined : alt);\n};\n\n\n/** This method parses the value of an XML DOM node to a string that\n * represents a color in RGBA format, reversing the order, because\n * the KML specification uses the ABGR format. If parsing\n * fails, the method returns the default hard-coded color.\n * @export\n * @param {!Object} node An XML DOM node to parse\n * @return {string} A string representing a color in #RGBA format\n */\nH.data.utils.Dom.prototype.getColor = function(node) {\n  'use strict';\n  var str = this.getString(node);\n  return /^[0-9a-fA-F]{8}$/.test(str) ?\n      '#' + str.substr(6, 2) + str.substr(4, 2) + str.substr(2, 2) + str.substr(0, 2) :\n      '#000000ff';\n};\n",
		"goog.provide('H.data.kml.IconStyle');\n\ngoog.require('H.data.kml.HotSpot');\ngoog.require('H.data.kml.Icon');\ngoog.require('H.data.utils.Dom');\n\n\n\n/**\n * This class represents the &lt;IconStyle> tag from the KML specification.\n * The constructor initializes a new instance of the class, using the arguments provided by the caller.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document which is currently being parsed.\n */\nH.data.kml.IconStyle = function(node) {\n  'use strict';\n  if (!node) return;\n  var childNodes = node.childNodes,\n      childNode,\n      icon,\n      i = childNodes.length,\n      dom = new H.data.utils.Dom();\n\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'scale':\n        this.scale = dom.getFloat(childNode);\n        break;\n      case 'Icon':\n        icon = new H.data.kml.Icon(childNode);\n        if (icon) this.icon = icon;\n        break;\n      case 'hotSpot':\n        var hotSpot = new H.data.kml.HotSpot(childNode);\n        this.hotSpot = hotSpot;\n        break;\n    }\n  }\n};\n",
		"goog.provide('H.data.utils.ColorHelper');\n\n\n\n/**\n * This is a kml color helper class. It provides some functionality to handle kml\n * colors.\n * @constructor\n * @export\n */\nH.data.utils.ColorHelper = function() {\n  this.internalMap = {\n    '4': function(str) { return ['#', str.charAt(1), str.charAt(1), str.charAt(2), str.charAt(2),\n        str.charAt(3), str.charAt(3), 'ff'].join(''); },\n    '5': function(str) { return ['#', str.charAt(1), str.charAt(1), str.charAt(2), str.charAt(2),\n        str.charAt(3), str.charAt(3), str.charAt(4), str.charAt(4)].join(''); },\n    '7': function(str) { return str + 'ff'; },\n    '9': function(str) { return str; }\n  };\n  this.rgbaMap = {\n    '4': function(str) { return [this.shortHandHexToInt_(str.charAt(1)), this.shortHandHexToInt_(str.charAt(2)),\n                                 this.shortHandHexToInt_(str.charAt(3)), 255]; },\n    '5': function(str) { return [this.shortHandHexToInt_(str.charAt(1)), this.shortHandHexToInt_(str.charAt(2)),\n                                 this.shortHandHexToInt_(str.charAt(3)), this.shortHandHexToInt_(str.charAt(4))]; },\n    '7': function(str) {\n      var val = parseInt(str.substring(1), 16);\n      return [(val >> 16) & 0xff, (val >> 8) & 0xff, val & 0xff, 255];\n    },\n    '9': function(str) {\n      var val = parseInt(str.substring(1), 16);\n      return [(val >> 24) & 0xff, (val >> 16) & 0xff, (val >> 8) & 0xff, val & 0xff];\n    }\n  };\n};\n\n\n/**\n * @private\n * @param {string} str Input string.\n * @return {number} num Returns an integer number.\n */\nH.data.utils.ColorHelper.prototype.shortHandHexToInt_ = function(str) {\n  var num = parseInt(str, 16);\n  return ((num << 4) + num);\n};\n\n\n/**\n * @private\n * @param {number} val Input integer to convert.\n * @return {string} hex Returns the converted hex number.\n */\nH.data.utils.ColorHelper.prototype.intToHex_ = function(val) {\n  return val < 16 ? '0' + Math.round(val).toString(16) : Math.round(val).toString(16);\n};\n\n\n/**\n * @private\n * @param {string} str Color string.\n * @return {boolean} bol Returns true if the given string is a named color.\n */\nH.data.utils.ColorHelper.prototype.isNamedColor_ = function(str) {\n  return !(/^(#|rgb).*/.test(str));\n};\n\n\n/**\n * @private\n * @param {string} str\n * @return {!string} result Normalized number is returned.\n */\nH.data.utils.ColorHelper.prototype.normalize_ = function(str) {\n  var result = '';\n  if (str.charAt(0) === '#') {\n    result = this.internalMap[str.length] ? str : '';\n  }\n  else if (str.substr(0, 3) === 'rgb') {\n    var matches = str.match(/\\d+(\\.\\d+)?/g),\n        len = matches.length;\n    // TODO: return tyoe is not nullable test and fix\n    result = (len > 2 && len < 5) ?\n        ['#', this.intToHex_(+matches[0]), this.intToHex_(+matches[1]), this.intToHex_(+matches[2]),\n         len > 3 ? this.intToHex_(+matches[3] * 255) : 'ff'].join('') : '';\n  }\n  return result;\n};\n\n\n/**\n * @private\n * @param {number} min Below border.\n * @param {number} max Top border.\n * @return {number} num Random number is returned.\n */\nH.data.utils.ColorHelper.prototype.getRandomInt_ = function(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n\n/**\n * @private\n * @return {string} text Random text is returned.\n */\nH.data.utils.ColorHelper.prototype.getRandomStr_ = function() {\n  var text = '';\n  var possible = 'ABCDEF0123456789';\n  // we need 6 symbols, alpha channel is never randomized\n  for (var i = 0; i < 6; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  return text;\n};\n\n\n/**\n * Converts a color string into a 4 element array of RGBA values ranging from\n * 0-255. If the color cannot be converted, it is assumed to be fully opaque black.\n * The argument color string can be in short-hand ({@code #rgb[a]}) or long-hand\n * ({@code #rrggbb[aa]}) hexadecimal notation. The CSS {@code rgb(r, g, b)}\n * notation with absolute values ranging from 0 - 255, as well as the\n * {@code rgba(r, g, b, a)} notation with absolute values is also permitted, but\n * causes more conversion overhead.\n * @param {string} str The color string\n * @param {boolean} normalized If true the color string is assumed to be in normalized form\n * @return {Array.<number>} An array of RGBA color components\n */\nH.data.utils.ColorHelper.prototype.toRGBA = function(str, normalized) {\n  if (!this.isNamedColor_(str)) {\n    if (!normalized) str = this.normalize_(str);\n    var color = this.rgbaMap[str.length](str);\n    color[3] = Math.round((color[3] / 255) * 100) / 100;\n    return color;\n  } else {\n    return [0, 0, 0, 255];\n  }\n};\n\n\n/**\n * Converts a color string into a randomized RGBA string with values ranging from 0 to specified\n * color component. If the color cannot be converted, it is assumed to be fully opaque black.\n *\n * The argument color string can be in short-hand ({@code #rgb[a]}) or long-hand\n * ({@code #rrggbb[aa]}) hexadecimal notation. The CSS {@code rgb(r, g, b)}\n * notation with absolute values ranging from 0 - 255, as well as the {@code rgba(r, g, b, a)}\n * notation with absolute values is also permitted, but causes more conversion overhead.\n *\n * The opacity of a color stays as it is from the alpha component of the passed string and is never randomized.\n * @export\n * @param {string} str The color string\n * @param {boolean} normalized If true the color string is assumed to be in normalized form\n * @return {string} Randomized RGBA color string\n */\nH.data.utils.ColorHelper.prototype.toRandomRGBA = function(str, normalized) {\n  var rgba,\n      result = '';\n  if (!this.isNamedColor_(str)) {\n    rgba = this.toRGBA(str, normalized);\n    for (var i = 0; i < 4; i++) {\n      result += ('' + this.intToHex_(i < 3 ? this.getRandomInt_(0, rgba[i]) : 255 * rgba[i]));\n    }\n    return result;\n  } else {\n    return this.getRandomStr_() + 'ff';\n  }\n};\n",
		"goog.provide('H.data.kml.BalloonStyle');\n\ngoog.require('H.data.utils.ColorHelper');\n\n\n\n/**\n * This class represents the abstract &lt;ColorStyle> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node XML A node from the KML document that is being parsed\n */\nH.data.kml.BalloonStyle = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      dom = new H.data.utils.Dom(),\n      ch = new H.data.utils.ColorHelper();\n\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'bgColor':\n        this.bgColor = dom.getColor(childNode);\n        break;\n      case 'textColor':\n        this.textColor = dom.getColor(childNode);\n        break;\n      case 'text':\n        this.text = dom.getString(childNode);\n        break;\n      case 'displayMode':\n        this.displayMode = dom.getString(childNode);\n        break;\n    }\n  }\n};\n",
		"goog.provide('H.data.kml.ColorStyle');\n\ngoog.require('H.data.utils.ColorHelper');\n\n\n\n/**\n * This class represents the abstract &lt;ColorStyle> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node XML A node from the KML document that is being parsed\n */\nH.data.kml.ColorStyle = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      dom = new H.data.utils.Dom(),\n      ch = new H.data.utils.ColorHelper();\n\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'color':\n        this.color = dom.getColor(childNode);\n        break;\n      case 'colorMode':\n        this.colorMode = dom.getString(childNode);\n        break;\n    }\n  }\n\n  if (this.colorMode === 'random') {\n    this.color = '#' + ch.toRandomRGBA(this.color, false);\n  }\n};\n",
		"goog.provide('H.data.kml.PolyStyle');\n\ngoog.require('H.data.kml.ColorStyle');\n\n\n\n/**\n * This class represents the &lt;PolyStyle> tag from KML specification.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document that is currently being parsed.\n */\nH.data.kml.PolyStyle = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      dom = new H.data.utils.Dom();\n  this.fill = true;\n  this.outline = true;\n  this.colorStyle = new H.data.kml.ColorStyle(node);\n\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'fill':\n        this.fill = dom.getBoolean(childNode);\n        break;\n      case 'outline':\n        this.outline = dom.getBoolean(childNode);\n        break;\n    }\n  }\n};\n",
		"goog.provide('H.data.kml.LineStyle');\n\ngoog.require('H.data.kml.ColorStyle');\n\n\n\n/**\n * This class represents the &lt;LineStyle> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node An XML node from KML document which is currently being parsed\n */\nH.data.kml.LineStyle = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      dom = new H.data.utils.Dom();\n  this.colorStyle = new H.data.kml.ColorStyle(node);\n\n  while (i--) {\n    childNode = childNodes[i];\n    if (childNode.nodeName === 'width') {\n      this.width = dom.getFloat(childNode);\n    }\n  }\n};\n",
		"goog.provide('H.data.kml.Style');\n\ngoog.require('H.data.kml.BalloonStyle');\ngoog.require('H.data.kml.IconStyle');\ngoog.require('H.data.kml.LineStyle');\ngoog.require('H.data.kml.PolyStyle');\n\n\n\n/**\n * This class represents the &lt;Style&gt; tag from KML specification.\n * @constructor\n * @export\n * @param {Node} node An XML node from the KML document which is currently being parsed.\n */\nH.data.kml.Style = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      style;\n  this.id = node.getAttribute('id');\n\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'IconStyle':\n        style = new H.data.kml.IconStyle(childNode);\n        if (style) {\n          this.iconStyle = style;\n        }\n        break;\n      case 'LabelStyle':\n        //style = new LabelStyle(childNode);\n        //if (style) that.labelStyle = style;\n        break;\n      case 'LineStyle':\n        style = new H.data.kml.LineStyle(childNode);\n        if (style) {\n          this.lineStyle = style;\n        }\n        break;\n      case 'PolyStyle':\n        style = new H.data.kml.PolyStyle(childNode);\n        if (style) {\n          this.polyStyle = style;\n        }\n        break;\n      case 'BalloonStyle':\n        style = new H.data.kml.BalloonStyle(childNode);\n        if (style) {\n          this.balloonStyle = style;\n        }\n        break;\n    }\n  }\n};\n",
		"goog.provide('H.data.kml.StyleContainer');\n\n\n\n/**\n * It is mainly used for holding the global styles on which the\n * attribute <code>id</code> is set. If a style does not have the\n * <code>id</code> attribute, it is not added to the array neither in the\n * constructor nor in the <code>addStyle()</code> method.\n * @constructor\n * @export\n */\nH.data.kml.StyleContainer = function() {\n  'use strict';\n  this.styles = {};\n};\n\n\n/**\n * This method adds new element to the internal array.\n * @export\n * @param {(H.data.kml.Style|H.data.kml.StyleMap)} style That provides the style definition; it must contain\n * the attribute <code>id</code>\n */\nH.data.kml.StyleContainer.prototype.addStyle = function(style) {\n  'use strict';\n  if (style && style.id) {\n    this.styles['style_' + style.id] = style;\n  }\n};\n\n\n/**\n * This method gets the concrete style for the feature.\n * @export\n * @param {string} id A unique identifier for the <code>StyleSelector</code>\n * @param {boolean} highlighted A Boolean value that indicates if the\n *     method is to return the style for a highlighted case\n *     (<code>true</code>); if the value is <code>true</code> and if the\n *     particular style is not a <code>StyleMap</code>, then the method returns <code>null</code>,\n *     because there is no highlighted style for the <code>H.data.kml.Style</code> object\n * @return {(undefined|H.data.kml.Style)} style matching the id specified by the caller\n */\nH.data.kml.StyleContainer.prototype.getStyleById = function(id, highlighted) {\n  'use strict';\n  var style = this.styles['style_' + id];\n\n  if (style instanceof H.data.kml.StyleMap) {\n    style = style.getStyle(highlighted);\n  }\n\n  return style;\n};\n",
		"goog.provide('H.data.kml.Feature');\n\ngoog.require('H.data.kml.Style');\n\n\n\n/**\n * This class represents the abstract &lt;Feature> tag from KML specification.\n * @constructor\n * @export\n * @param {Node} node An XML node from a KML document that is being parsed.\n * @param {H.data.kml.StyleContainer} stylesContainer Instance of H.data.kml.StyleContainer.\n */\nH.data.kml.Feature = function(node, stylesContainer) {\n  'use strict';\n  var childNodes = (node && node.childNodes) || [],\n      childNode,\n      style,\n      styleMap,\n      i,\n      id,\n      dom = new H.data.utils.Dom();\n\n  if (!node || !stylesContainer) {\n    throw new Error('Node or stylesContainer is not defined');\n  }\n  this.visibility = true;\n  this.placemark = node;\n  i = childNodes.length;\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'name':\n        this.name = dom.getString(childNode);\n        break;\n      case 'description':\n        this.description = dom.getString(childNode);\n        break;\n      case 'visibility':\n        this.visibility = dom.getBoolean(childNode);\n        break;\n      case 'open':\n        this.open = dom.getBoolean(childNode);\n        break;\n      case 'styleUrl':\n        this.styleUrl = dom.getString(childNode);\n        if (this.styleUrl) {\n          id = this.styleUrl.substr(1);\n          this.featureStyle = stylesContainer.getStyleById(id, false);\n        }\n        break;\n      case 'Style':\n        style = new H.data.kml.Style(childNode);\n        if (style) {\n          this.localStyle = style;\n        }\n        break;\n      case 'StyleMap':\n        // StyleMap components will be applied to the node via styleUrl\n        break;\n    }\n  }\n};\n",
		"goog.provide('H.data.kml.Pair');\n\ngoog.require('H.data.kml.Style');\n\n\n\n/**\n * This class represents the &lt;Pair> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document that is currently being parsed\n * @param {H.data.kml.StyleContainer} styleContainer A list of\n * <code>StyleSelector</code> objects, this is\n * a list of all global styles which can be referenced by id\n */\nH.data.kml.Pair = function(node, styleContainer) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      style,\n      i = childNodes.length,\n      dom = new H.data.utils.Dom();\n  this.styleContainer = styleContainer;\n\n  while (i--) {\n    childNode = childNodes[i];\n    switch (childNode.nodeName) {\n      case 'key':\n        this.key = dom.getString(childNode);\n        break;\n      case 'styleUrl':\n        this.styleUrl = dom.getString(childNode);\n        break;\n    }\n  }\n};\n\n\n/**\n * This method retrieves the styles for the given object.\n * @export\n * @return {(undefined|H.data.kml.Style)} A style object, or <code>undefined</code>\n * if no style is defined\n */\nH.data.kml.Pair.prototype.getStyle = function() {\n  'use strict';\n  var style,\n      key;\n  if (this.styleUrl) {\n    key = (this.key === 'highlight') ? true : false;\n    style = this.styleContainer.getStyleById(this.styleUrl.substr(1), key);\n  }\n  return style;\n};\n",
		"goog.provide('H.data.kml.StyleMap');\n\ngoog.require('H.data.kml.Pair');\n\n\n\n/**\n * This class represents the &lt;StyleMap> element, which provides separate normal\n * and highlighted styles for a placemark so that the highlighted version\n * appears when the user's mouse pointer moves over an icon.\n * The constructor initializes a new instance of the class, using the\n * arguments provided by the caller.\n * @constructor\n * @export\n * @param {Node} node An XML node from the KML document that is being parsed.\n * @param {H.data.kml.StyleContainer} styleContainer Instance of H.data.kml.StyleContainer\n */\nH.data.kml.StyleMap = function(node, styleContainer) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      pair;\n  this.styleContainer = styleContainer;\n  this.id = node.getAttribute('id');\n  this.pairs = [];\n\n  while (i--) {\n    childNode = childNodes[i];\n    if (childNode.nodeName === 'Pair') {\n      pair = new H.data.kml.Pair(childNode, this.styleContainer);\n      if (pair) {\n        this.pairs.push(pair);\n      }\n    }\n  }\n};\n\n\n/**\n * This method retrieves the style for the given object.\n * @export\n * @param {boolean} highlighted  A Boolean value that indicates if the\n * method is to return the style for a highlighted case (<code>true</code>)\n * @return {H.data.kml.Style} An object encapsulating the style for\n * the given class instance\n */\nH.data.kml.StyleMap.prototype.getStyle = function(highlighted) {\n  'use strict';\n  var style = null,\n      key = highlighted ? 'highlight' : 'normal',\n      i = this.pairs.length;\n\n  while (i--) {\n    if (this.pairs[i].key === key) {\n      style = this.pairs[i].getStyle();\n    }\n  }\n  return style;\n};\n",
		"goog.provide('H.data.kml.Point');\n\n\n\n/**\n * This class represents the &lt;Point> tag from the KML specification.\n * The constructor initializes a new instance of the class, using the arguments provided by the caller.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document, which is currently being parsed\n */\nH.data.kml.Point = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      coordinate = null,\n      dom = new H.data.utils.Dom();\n\n  while (i--) {\n    childNode = childNodes[i];\n    if (childNode.nodeName === 'coordinates') {\n      coordinate = dom.getString(childNode);\n    }\n  }\n  this.latLngAlt = null;\n  if (coordinate) {\n    this.latLngAlt = dom.parseCoord(coordinate) || null;\n  }\n};\n\n\n/**\n * Returns a point.\n * @return {H.geo.Point}\n */\nH.data.kml.Point.prototype.getCoordinates = function() {\n  'use strict';\n  return this.latLngAlt;\n};\n",
		"goog.provide('H.data.kml.Polygon');\n\n\n\n/**\n * This class represents the &lt;Polygon> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document, which is currently being parsed\n */\nH.data.kml.Polygon = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      len = childNodes.length,\n      line,\n      childLen,\n      outerBoundaryChildNodes,\n      outerBoundaryChild,\n      dom = new H.data.utils.Dom();\n\n  this.geoStrip = new H.geo.Strip();\n\n  while (len--) {\n    childNode = childNodes[len];\n    if (childNode.nodeName === 'outerBoundaryIs') {\n      outerBoundaryChildNodes = childNode.childNodes;\n      childLen = outerBoundaryChildNodes.length;\n      while (childLen--) {\n        outerBoundaryChild = outerBoundaryChildNodes[childLen];\n        if (outerBoundaryChild.nodeName == 'LinearRing') {\n          line = new H.data.kml.Line(outerBoundaryChild);\n          this.geoStrip = line.getCoordinates();\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Returns the strip.\n * @return {H.geo.Strip}\n */\nH.data.kml.Polygon.prototype.getCoordinates = function() {\n  'use strict';\n  return this.geoStrip;\n};\n",
		"goog.provide('H.data.kml.Line');\n\n\n\n/**\n * This class represents the &lt;LineString> or &lt;LinearRing> tag from the KML specification.\n * @constructor\n * @export\n * @param {!Object} node An XML node from the KML document, which is currently being parsed\n */\nH.data.kml.Line = function(node) {\n  'use strict';\n  var childNodes = node.childNodes,\n      childNode,\n      i = childNodes.length,\n      path,\n      dom = new H.data.utils.Dom();\n\n  while (i--) {\n    childNode = childNodes[i];\n    if (childNode.nodeName === 'coordinates') {\n      this.coordinates = this.parseCoords_(dom.getString(childNode));\n    }\n  }\n};\n\n\n/**\n * This method converts the coordinates from string format to an array. If the array\n * has fewer than two coordinates, then empty array is returned.\n * A reference to the first element from the array is added at the end\n * of the path to close the path, if they are different.\n * @private\n * @param {string} coords\n * @return {Array.<H.geo.Point>} An array of points\n */\nH.data.kml.Line.prototype.parseCoords_ = function(coords) {\n  'use strict';\n  var path = [],\n      length,\n      dom = new H.data.utils.Dom();\n  try {\n    path = dom.parseCoords(coords);\n  } catch (ex) {\n    path = [];\n  }\n  if ((length = path.length) < 2) {\n    return [];\n  }\n  return path;\n};\n\n\n/**\n * Returns the strip.\n * @return {H.geo.Strip}\n */\nH.data.kml.Line.prototype.getCoordinates = function() {\n  'use strict';\n  var geoStrip = new H.geo.Strip(),\n      lineLen = this.coordinates ? this.coordinates.length : 0;\n  while (lineLen--) {\n    geoStrip.pushPoint(this.coordinates[lineLen]);\n  }\n  return geoStrip;\n};\n",
		"goog.provide('H.data.kml.ObjectFactory');\n\ngoog.require('H.data.kml.Line');\ngoog.require('H.data.kml.Point');\ngoog.require('H.data.kml.Polygon');\n\n\n\n/**\n * This class produces map objects.\n * @constructor\n * @param {H.data.kml.StyleContainer} styleContainer Instance of StyleContainer\n * @param {string=} opt_baseUrl The base URL of the KML file which is used to correctly resolve relative paths\n */\nH.data.kml.ObjectFactory = function(styleContainer, opt_baseUrl) {\n  'use strict';\n  var dummyCanvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  dummyCanvas.width = 1;\n  dummyCanvas.height = 1;\n\n\n  /**\n   * Instance of StyleContainer that holds all shared styles\n   * @type {H.data.kml.StyleContainer}\n   */\n  this.styleContainer = styleContainer;\n\n  /**\n   * Icons cache\n   * @private\n   * @type {Object.<string, H.map.Icon>}\n   */\n  this.iconCache_ = {};\n\n  /**\n   * Holds pending icons\n   * @private\n   * @type {Object.<string, H.map.Icon>}\n   */\n  this.pendingIcons_ = {};\n\n  /**\n   * @private\n   * @type {H.map.Icon}\n   */\n  this.emptyIcon_ = new H.map.Icon(dummyCanvas);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.baseUrl_ = opt_baseUrl || '';\n};\n\n\n/**\n * Generates out of a given placemark node a valid H.map.Object.\n * @param {Node} placemarkNode A placemark node to parse\n * @return {(!H.map.Object|undefined)}\n */\nH.data.kml.ObjectFactory.prototype.create = function(placemarkNode) {\n  'use strict';\n  this.feature = new H.data.kml.Feature(placemarkNode, this.styleContainer);\n  return this.getMapObject_(placemarkNode, null);\n};\n\n\n/**\n * @private\n * @param {Node} node The node to parse\n * @param {H.map.Group} group When a placemark consists MultiGeometry tag a\n * group is given\n * @return {(!H.map.Object|undefined)} mapObject\n */\nH.data.kml.ObjectFactory.prototype.getMapObject_ = function(node, group) {\n  var that = this,\n      child,\n      childNodes = node.childNodes,\n      i = childNodes.length,\n      geometry,\n      mapObject,\n      data = {},\n      options;\n\n  while (i--) {\n    child = childNodes[i];\n    switch (child.nodeName) {\n      case 'Point':\n        geometry = new H.data.kml.Point(child);\n        options = this.getOptions_('Marker');\n\n        mapObject = new H.map.Marker(geometry.getCoordinates(),\n            /** @type {H.map.Marker.Options} */ (options));\n\n        // got pending icon with options, wait till it loads\n        if (options.pendingIcon) {\n          H.util.events.listenOnce(options.pendingIcon, 'statechange', (function(marker, options) {\n            return function() {\n              var icon,\n                  iconKey,\n                  size,\n                  anchor = options.anchor,\n                  anchorX,\n                  anchorY,\n                  href = options.href,\n                  scale = options.scale;\n\n              if (this.getState() === H.map.Icon.prototype.State['READY']) {\n                iconKey = that.getIconKey_(href, anchor, scale);\n\n                // when multiple markers wait for the same icon all consecutive\n                // markers should use the same icon\n                icon = that.iconCache_[iconKey];\n\n                // it's the first/single marker that was waiting for the icon,\n                // then create new icon\n                if (!icon) {\n                  anchorX = anchor['x'];\n                  anchorY = anchor['y'];\n\n                  size = this.getSize();\n                  size = {\n                    'w': size['w'] * scale,\n                    'h': size['h'] * scale\n                  };\n\n                  icon = new H.map.Icon(this.getBitmap(), /** @type {H.map.Icon.Options} */ ({\n                    // Coordinate origin from KML is bottom left\n                    'anchor': {\n                      'x': anchor.isFractionalX ? size['w'] * anchorX : anchorX * scale,\n                      'y': anchor.isFractionalY ? size['h'] * (1 - anchorY) : size['h'] - (anchorY * scale)\n                    },\n                    'size': size\n                  }));\n                  // add icon to cache and delete from pending icons dictionary\n                  that.iconCache_[iconKey] = icon;\n                  delete that.pendingIcons_[iconKey];\n                }\n\n                // set new icon to the marker\n                marker.setIcon(icon);\n              }\n            };\n          }(mapObject, options)), false);\n        }\n        break;\n      case 'LineString':\n        geometry = new H.data.kml.Line(child);\n        options = this.getOptions_('Polyline');\n        mapObject = new H.map.Polyline(geometry.getCoordinates(),\n            /** @type {H.map.Polyline.Options} */ (options));\n        break;\n      case 'LinearRing':\n        geometry = new H.data.kml.Line(child);\n        options = this.getOptions_('Polyline');\n        mapObject = new H.map.Polyline(geometry.getCoordinates(),\n            /** @type {H.map.Polyline.Options} */ (options));\n        break;\n      case 'Polygon':\n        geometry = new H.data.kml.Polygon(child);\n        options = this.getOptions_('Polygon');\n        mapObject = new H.map.Polygon(geometry.getCoordinates(),\n            /** @type {H.map.Spatial.Options} */ (options));\n        break;\n      case 'MultiGeometry':\n        mapObject = new H.map.Group();\n        mapObject['multiGeometry'] = 1;\n        mapObject = this.getMapObject_(child, mapObject);\n        break;\n    }\n    if (mapObject) {\n      if (this.feature.name) {\n        data['name'] = this.feature.name;\n      }\n      if (this.feature.description) {\n        data['description'] = this.feature.description;\n      }\n      if (options && options.balloonStyle) {\n        data['balloonStyle'] = options.balloonStyle;\n      }\n      data['kmlNode'] = this.feature.placemark;\n      mapObject.setData(data);\n      if (group) {\n        group.addObject(mapObject);\n      }\n    }\n  }\n\n  if (group) {\n    mapObject = group;\n  }\n  return mapObject;\n};\n\n\n/**\n * Creates the opt_options for the map object like style, visibility or icon.\n * @private\n * @param {string} type Type of map object\n * @return {!Object}\n */\nH.data.kml.ObjectFactory.prototype.getOptions_ = function(type) {\n  'use strict';\n  var feature = this.feature,\n      options = {\n        visibility: feature.visibility\n      },\n      iconStyle,\n      lineStyle,\n      polyStyle,\n      featureStyle,\n      iconKey,\n      colorHelper = new H.data.utils.ColorHelper(),\n      scale = 1,\n      hotSpot,\n      anchor = {'x': 0, 'y': 0, isFractionalX: false, isFractionalY: false},\n      icon,\n      href,\n      state;\n\n  featureStyle = this.mergeStyles_(feature.featureStyle);\n  if (feature.localStyle) {\n    featureStyle = this.mergeStyles_(feature.localStyle, featureStyle);\n  }\n\n  switch (type) {\n    case 'Marker':\n      if (featureStyle && featureStyle.iconStyle) {\n        iconStyle = featureStyle.iconStyle;\n\n        if (iconStyle.scale) {\n          scale = iconStyle.scale;\n        }\n\n        if (iconStyle.hotSpot) {\n          hotSpot = iconStyle.hotSpot;\n          anchor = /** @type {H.math.IPoint} */ ({\n            'x': hotSpot.x,\n            'y': hotSpot.y,\n            isFractionalX: hotSpot.isFractionalX,\n            isFractionalY: hotSpot.isFractionalY\n          });\n        }\n\n        if (iconStyle.icon && iconStyle.icon.href) {\n          href = iconStyle.icon.href;\n\n          // If requested resource URL is relative, prepand KML file URL into it\n          if (!H.data.kml.ObjectFactory.absoluteUrlRegExp_.test(href)) {\n            href = this.baseUrl_ + href;\n          }\n\n          iconKey = this.getIconKey_(href, anchor, scale);\n          state = H.map.Icon.prototype.State;\n\n          // get pending icon or icon from cache\n          icon = this.iconCache_[iconKey] || this.pendingIcons_[iconKey];\n\n          // Icon isn't pending and not in the dictionary create new pending icon\n          if (!icon) {\n            icon = new H.map.Icon(href);\n            this.pendingIcons_[iconKey] = icon;\n          }\n\n          if (icon.getState() === state['LOADING']) {\n            // assemble options that will be used when pending icon arrives\n            options.icon = this.emptyIcon_;\n            options.pendingIcon = icon;\n            options.href = href;\n            options.anchor = anchor;\n            options.scale = scale;\n          } else if (icon.getState() === state['READY']) {\n            options.icon = icon; // got icon from cache can be used directly and immediately\n          }\n        } else if (scale !== 1) {\n          if (!hotSpot) {\n            // use standard marker default anchor {x:14,y:32}\n            anchor = /** @type {H.math.IPoint} */ ({\n              'x': 14,\n              'y': 4,\n              isFractionalX: false,\n              isFractionalY: false\n            });\n          }\n          options.icon = new H.map.Icon(this.getDefaultIcon_(), this.getIconOptions_(scale, anchor));\n        }\n      }\n      break;\n    case 'Polyline':\n      options.style = {};\n      if (featureStyle && featureStyle.lineStyle) {\n        lineStyle = featureStyle.lineStyle;\n        options.style.strokeColor = 'rgba(' +\n            colorHelper.toRGBA(lineStyle.colorStyle.color, true) + ')';\n        if (lineStyle.width >= 0) {\n          options.style.lineWidth = lineStyle.width;\n        }\n      }\n      break;\n    case 'Polygon':\n      options.style = {};\n      if (featureStyle) {\n        if (featureStyle.lineStyle) {\n          lineStyle = featureStyle.lineStyle;\n          options.style.strokeColor = 'rgba(' +\n              colorHelper.toRGBA(lineStyle.colorStyle.color, true) + ')';\n          if (lineStyle.width >= 0) {\n            options.style.lineWidth = lineStyle.width;\n          }\n        }\n\n        if (featureStyle.polyStyle) {\n          polyStyle = featureStyle.polyStyle;\n          if (polyStyle.fill) {\n            options.style.fillColor = 'rgba(' +\n                colorHelper.toRGBA(polyStyle.colorStyle.color, true) + ')';\n          } else {\n            options.style.fillColor = 'rgba(0,0,0,0)';\n          }\n          if (!polyStyle.outline) {\n            options.style.lineWidth = 0;\n          }\n        }\n      }\n      break;\n  }\n  options.balloonStyle = featureStyle.balloonStyle;\n  return options;\n};\n\n\n/**\n * Method iterates over own properties of style object and merges it with supplied object\n * @private\n * @param {H.data.kml.Style} style style ot merge\n * @param {Object=} opt_mergedStyle object to merge to\n * @return {Object} object that contains merged style\n */\nH.data.kml.ObjectFactory.prototype.mergeStyles_ = function(style, opt_mergedStyle) {\n  'use strict';\n  var mergedStyle = opt_mergedStyle || {},\n      key;\n\n  for (key in style) {\n    if (style.hasOwnProperty(key)) {\n      mergedStyle[key] = (typeof style[key]) === 'object' ?\n          this.mergeStyles_(style[key], mergedStyle[key]) : (style[key]);\n    }\n  }\n  return mergedStyle;\n};\n\n\n/**\n * Method creates key string for icon cache\n * @private\n * @param {string} href\n * @param {Object} anchor\n * @param {number} scale\n * @return {string}\n */\nH.data.kml.ObjectFactory.prototype.getIconKey_ = function(href, anchor, scale) {\n  'use strict';\n  return scale + '_' +\n      anchor['x'] + anchor['y'] + anchor.isFractionalX + anchor.isFractionalY + '_' +\n      href;\n};\n\n\n/**\n * Method returns scaled icon options.\n * @private\n * @param {number} scale KML scale factor\n * @param {Object} anchor KML anchor\n * @return {H.map.Icon.Options}\n */\nH.data.kml.ObjectFactory.prototype.getIconOptions_ = function(scale, anchor) {\n  'use strict';\n  var size = {\n    'w': 28 * scale,\n    'h': 36 * scale\n  };\n  // TODO: It would be better to get the scaled standard icon directly from H.map.AbstractMarker\n  return {\n    'size': new H.math.Size(size['w'], size['h']),\n    'anchor': new H.math.Point(anchor.isFractionalX ? size['w'] * anchor.x : anchor.x * scale,\n                                    anchor.isFractionalY ? size['h'] * (1 - anchor.y) : size['h'] - (anchor.y * scale)),\n    'hitArea': new H.map.HitArea(\n        H.map.HitArea.ShapeType.POLYGON, [0 * scale, 16 * scale,\n                                               0 * scale, 7 * scale,\n                                               8 * scale, 0 * scale,\n                                               18 * scale, 0 * scale,\n                                               26 * scale, 7 * scale,\n                                               26 * scale, 16 * scale,\n                                               18 * scale, 34 * scale,\n                                               8 * scale, 34 * scale])\n  };\n};\n\n\n/**\n * Regular expression for checking whether sepcified URL is an absolute or no\n * @private\n * @type {RegExp}\n */\nH.data.kml.ObjectFactory.absoluteUrlRegExp_ = /^[^:\\/]+:/;\n\n\n/**\n * Gives back the HERE maps default marker as svg.\n * @private\n * @return {string}\n */\nH.data.kml.ObjectFactory.prototype.getDefaultIcon_ = function() {\n  'use strict';\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28px\" height=\"36px\">' +\n      '<path d=\"M 19 31 C 19 32.7 16.3 34 13 34 C 9.7 34 7 32.7 7 31 C 7 29.3 9.7 28 13 28 C 16.3 28 19' +\n      ' 29.3 19 31 Z\" fill=\"#000\" fill-opacity=\".2\"/>' +\n      '<path d=\"M 13 0 C 9.5 0 6.3 1.3 3.8 3.8 C 1.4 7.8 0 9.4 0 12.8 C 0 16.3 1.4 19.5 3.8 21.9 L 13 31 L 22.2' +\n      ' 21.9 C 24.6 19.5 25.9 16.3 25.9 12.8 C 25.9 9.4 24.6 6.1 22.1 3.8 C 19.7 1.3 16.5 0 13 0 Z\" fill=\"#fff\"/>' +\n      '<path d=\"M 13 2.2 C 6 2.2 2.3 7.2 2.1 12.8 C 2.1 16.1 3.1 18.4 5.2 20.5 L 13 28.2 L 20.8 20.5 C' +\n      ' 22.9 18.4 23.8 16.2 23.8 12.8 C 23.6 7.07 20 2.2 13 2.2 Z\" fill=\"#18d\"/></svg>';\n};\n",
		"goog.provide('H.data.kml.Reader');\n\n\ngoog.require('H.data.AbstractReader');\n\ngoog.require('H.data.kml.Feature');\ngoog.require('H.data.kml.ObjectFactory');\ngoog.require('H.data.kml.Style');\ngoog.require('H.data.kml.StyleContainer');\ngoog.require('H.data.kml.StyleMap');\n\n\n\n/**\n * The KML Reader is responsible for fetching and interpreting KML data. Reader creates\n * <code>H.map.Object</code> that can be displayed on the map, from KML Features and\n * geometries as described by OGC.\n * Auxiliary data that accompanies geometries (such as name, description,\n * kml node itself etc.) is binded to the map object and can be fetched with object's\n * <code>getData</code> method (see {@link H.map.Object#getData}).\n *\n * Note that you can load KML file even from a different domain, if that domain supports\n * Cross-Origin Resource Sharing (see http://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS).\n *\n *\n * @example\n * var reader = new H.data.kml.Reader('/path/to/kml/file.kml');\n * reader.parse();\n * //assuming that map already exists\n * map.addLayer(reader.getLayer());\n * @constructor\n * @publish\n * @export\n * @extends {H.data.AbstractReader}\n * @param {string} url\n */\nH.data.kml.Reader = function(url) {\n  'use strict';\n  var slashIndex;\n\n  /**\n   * Contains kml-folder entries that must converted to map objects and placed into the\n   * group associated with the node.\n   * @type {Array.<H.data.kml.Reader.QueueEntry>}\n   * @private\n   */\n  this.queue_ = [];\n\n  H.data.AbstractReader.call(this, url);\n\n  slashIndex = url && url.lastIndexOf('/');\n\n  /**\n   * Contains path to the KML file excluding it's name\n   * @type {string}\n   * @private\n   */\n  if (slashIndex >= 0) {\n    this.kmlPath_ = url.substr(0, slashIndex) + '/';\n  }\n};\nH.lang.inherits(H.data.kml.Reader, H.data.AbstractReader);\n\n\n/**\n * Converts passed argument into XML Document, parses KML Nodes and produces map objects out of it.\n * The hierarchy of map objects in the KML tree is preserved.\n * @protected\n * @param {!string} data\n */\nH.data.kml.Reader.prototype.createObjects = function(data) {\n  'use strict';\n  var len,\n      queueEntry,\n      currentGroup = null,\n      nodes,\n      xmlDoc,\n      root,\n      errorEl;\n\n  // Check if data is empty\n  if (!data || data.trim() == '') {\n    this.setState(H.data.AbstractReader.State['ERROR'], undefined, 'Unable to create objects from the empty data');\n  } else {\n    // Convert input string into XML Document\n    // Note that if error occurred during parsing we should exit immediately (fail fast)\n    // instead of wrapping code which parses objects inside try/catch\n    try {\n      xmlDoc = (new DOMParser()).parseFromString(data, 'text/xml');\n    } catch (ex) {\n      // On IE9 DOMParser throws an error instead of returning document with the \"parsererror\" node\n      this.setState(H.data.AbstractReader.State['ERROR'], undefined, 'Error parsing KML document');\n      return;\n    }\n\n    // Due to bug in DOMParser, if there is an error parsing XML Document,\n    // we still get document back which contains \"parsererror\" node inside.\n    // More details at https://bugzilla.mozilla.org/show_bug.cgi?id=45566\n    if (xmlDoc.getElementsByTagName('parsererror').length) {\n      // Take just first error message and set together with the state\n      this.setState(H.data.AbstractReader.State['ERROR'], undefined, 'Error parsing KML document');\n    } else {\n      // Obtain root node of the document\n      root = this.getRoot_(xmlDoc);\n\n      // If root node is not set or it has tag name other than \"kml\" set error state and exit\n      if (!root) {\n        this.setState(H.data.AbstractReader.State['ERROR'], undefined, 'Invalid KML document');\n      } else {\n        this.stylesContainer = this.fetchStyles_(root);\n\n        // Pass defined styles and KML file base URL to the factory\n        this.objectFactory = new H.data.kml.ObjectFactory(this.stylesContainer, this.kmlPath_);\n\n        nodes = root.childNodes;\n        len = nodes.length;\n\n        while (len--) {\n          this.parseNode_(nodes[len], currentGroup);\n          if (!len) {\n            queueEntry = this.queue_.shift();\n            if (queueEntry) {\n              nodes = queueEntry.node.childNodes;\n              currentGroup = queueEntry.group;\n              len = nodes.length;\n            }\n          }\n        }\n        this.setState(H.data.AbstractReader.State['READY']);\n      }\n    }\n  }\n};\n\n\n/**\n * Find all styles e.g. in line and shared styles.\n * @private\n * @param {Node} root This node represents the root tag of KML file. It can be the kml or\n * Document node\n * @return {H.data.kml.StyleContainer} stylesContainer Consists an array of all\n * found styles in kml DOM.\n */\nH.data.kml.Reader.prototype.fetchStyles_ = function(root) {\n  'use strict';\n  var style,\n      stylesContainer = new H.data.kml.StyleContainer(),\n      styleNodes = {\n        styleNodeArr: this.fetchNodes_(root.childNodes, 'Style'),\n        styleMapNodeArr: this.fetchNodes_(root.childNodes, 'StyleMap')\n      },\n      styleLen = styleNodes.styleNodeArr.length;\n  //Style\n  while (styleLen--) {\n    style = new H.data.kml.Style(styleNodes.styleNodeArr[styleLen]);\n    stylesContainer.addStyle(style);\n  }\n  //StyleMap\n  styleLen = styleNodes.styleMapNodeArr.length;\n  while (styleLen--) {\n    style = new H.data.kml.StyleMap(styleNodes.styleMapNodeArr[styleLen], stylesContainer);\n    stylesContainer.addStyle(style);\n  }\n  return stylesContainer;\n};\n\n\n/**\n * Is called when a KML node was read and a valid map object was created.\n * @private\n * @param {!H.map.Object} obj Is a map object like group, marker, polyline or polygon\n * @param {(null|H.map.Group)} group The group represents the KML folder tag\n */\nH.data.kml.Reader.prototype.addObject_ = function(obj, group) {\n  'use strict';\n  if (group) {\n    group.addObject(obj);\n  } else {\n    if (this.lop) {\n      this.lop.getRootGroup().addObject(obj);\n    }\n    this.collection.push(obj);\n    this.setState(H.data.AbstractReader.State['VISIT'], obj);\n  }\n};\n\n\n/**\n * Method produces map objects from given node.\n * @private\n * @param {Node} node The KML node to parse\n * @param {(null|H.map.Group)} group The group represents the KML folder tag\n */\nH.data.kml.Reader.prototype.parseNode_ = function(node, group) {\n  'use strict';\n  var queueEntry,\n      feature,\n      obj;\n  if (node.nodeName === 'Placemark') {\n    // Bring placemark on map\n    obj = this.objectFactory.create(node);\n    if (obj) {\n      this.addObject_(obj, group);\n    }\n  } else if (node.nodeName === 'Folder') {\n    queueEntry = /** #type {H.data.kml.Reader.QueueEntry} */ {\n      group: new H.map.Group(),\n      node: node\n    };\n    // Bring group to map\n    this.addObject_(queueEntry.group, group);\n    // Add to queue\n    this.queue_.push(queueEntry);\n  }\n};\n\n\n/**\n * This method returns root document that contains KML data. In case that the KML file has no 'Document' tag\n * it will start from the 'kml' tag.\n * @private\n * @param {Document} doc KML document\n * @return {(undefined|Node)} node Starting node to parse the KML file correctly or\n * undefined when no &lt;kml&gt; tag was found\n */\nH.data.kml.Reader.prototype.getRoot_ = function(doc) {\n  'use strict';\n  var root = (doc.childNodes && doc.childNodes[0].nodeName === 'kml') ? doc.childNodes[0] : undefined,\n      documentNode;\n\n  // cover case where kml contains document node\n  if (root) {\n    documentNode = this.fetchNodes_(root.childNodes, 'Document', true);\n  }\n  return documentNode || root;\n};\n\n\n/**\n * Searches for a specific tag in the given node children and returns it as array.\n * @private\n * @param {NodeList} nodes These are the children where you expect to find your tag\n * @param {string} tag This string represents the tag to find e.g. 'Style' or 'StyleMap'\n * @param {boolean=} opt_docOnly Flags that function return only one node (if we look up Document node)\n * @return {Array.<Node>} requestedNodes Returns the nodes as array\n */\nH.data.kml.Reader.prototype.fetchNodes_ = function(nodes, tag, opt_docOnly) {\n  'use strict';\n  var len = nodes.length,\n      node,\n      requestedNodes = [];\n  while (len--) {\n    node = nodes[len];\n    if (node.nodeName === tag) {\n      requestedNodes.push(node);\n    }\n  }\n  return opt_docOnly ? requestedNodes[0] : requestedNodes;\n};\n\n\n/**\n * Entry of the parsing queue that holds relation between already created H.map.Group\n * and node that contains data that should be parsed and added to the group.\n * @property {H.map.Group} group\n * @property {Node} node\n *\n * @typedef {{\n *   group: (H.map.Group),\n *   node: (Node)\n * }}\n */\nH.data.kml.Reader.QueueEntry;\n",
		"/*\n * don't provide for uncompiled (will result in provide error due\n * to double provision if H-core is included\n */\nif (COMPILED) {\n  goog.provide('H');\n}\n\n\n/** @suppress {duplicate} */\nvar H = H || {};\n\n\n/**\n * The namespace contains classes and functionality for data visualization.\n * @namespace H.data\n * @publish\n */\ngoog.provide('H.data');\ngoog.require('H.data.geojson');\ngoog.require('H.data.kml');\ngoog.require('H.data.utils');\n\n\n/**\n * Function returns build information\n * @return {Object}\n * @export\n */\nH.data.buildInfo = function() {\n  'use strict';\n  return H.util.BuildInfo.get('{BUILD_NAME}', '{BUILD_VERSION}', '{BUILD_REVISION}');\n};\n"
	]
}