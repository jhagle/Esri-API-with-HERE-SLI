{
	"version": 3,
	"file": "mapsjs-servicejs",
	"lineCount": 58,
	"mappings": "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",
	"sources": [
		"/home/here/repo/ext-platform/dev/node_modules/closure-library/closure/goog/base.js",
		"out/tmp/src/service/Url.js",
		"out/tmp/src/service/jsonp.js",
		"out/tmp/src/service/AbstractRestService.js",
		"out/tmp/src/service/Platform.js",
		"out/tmp/src/service/PlacesService.js",
		"out/tmp/src/service/JsonX.js",
		"out/tmp/src/service/TrafficIncidentsIcons.js",
		"out/tmp/src/service/util.js",
		"out/tmp/src/service/TrafficIncidentsProvider.js",
		"out/tmp/src/service/MapTileCopyrights.js",
		"out/tmp/src/service/MapTileProvider.js",
		"out/tmp/src/service/MapTileService.js",
		"out/tmp/src/service/TrafficIncidentsService.js",
		"out/tmp/src/service/DefaultLayers.js",
		"out/tmp/src/service/metaInfo/Spatial.js",
		"out/tmp/src/service/metaInfo/IParser.js",
		"out/tmp/src/service/metaInfo/Parser.js",
		"out/tmp/src/service/metaInfo/ObjectProvider.js",
		"out/tmp/src/service/metaInfo/IObject.js",
		"out/tmp/src/service/metaInfo/Service.js",
		"out/tmp/src/service/metaInfo/TileProvider.js",
		"out/tmp/src/service/EnterpriseRoutingService.js",
		"out/tmp/src/service/RoutingService.js",
		"out/tmp/src/service/GeocodingService.js",
		"out/tmp/src/service/namespace.js"
	],
	"names": [
		"goog.global",
		"goog.typeOf",
		"value",
		"s",
		"Array",
		"Object",
		"className",
		"prototype",
		"toString",
		"call",
		"length",
		"splice",
		"propertyIsEnumerable",
		"goog.exportSymbol",
		"publicPath",
		"object",
		"parts",
		"split",
		"cur",
		"execScript",
		"part",
		"shift",
		"undefined",
		"H.service.Url",
		"scheme",
		"host",
		"opt_path",
		"opt_params",
		"opt_port",
		"opt_anchor",
		"setScheme",
		"setHost",
		"setPath",
		"setPort",
		"setAnchor",
		"setQuery",
		"Error",
		"H.service.Url.parse",
		"url",
		"opt_baseURL",
		"doc",
		"document",
		"origBase",
		"origHRef",
		"htmlHead",
		"base",
		"link",
		"createElement",
		"getElementsByTagName",
		"href",
		"head",
		"appendChild",
		"fullQualifiedURL",
		"removeChild",
		"parsedParts",
		"parseRx",
		"exec",
		"port",
		"path",
		"params",
		"anchor",
		"user",
		"test",
		"substr",
		"urlParams",
		"paramPart",
		"decodeURIComponent",
		"isNaN",
		"clone",
		"H.service.Url.prototype.clone",
		"scheme_",
		"host_",
		"path_",
		"cloneQuery_",
		"port_",
		"anchor_",
		"goog.exportProperty",
		"H.service.Url.prototype.setScheme",
		"getScheme",
		"H.service.Url.prototype.getScheme",
		"H.service.Url.prototype.setHost",
		"charAt",
		"getHost",
		"H.service.Url.prototype.getHost",
		"H.service.Url.prototype.setPath",
		"getPath",
		"H.service.Url.prototype.getPath",
		"H.service.Url.prototype.setQuery",
		"params_",
		"hasQuery",
		"H.service.Url.prototype.hasQuery",
		"isQueryEmpty_",
		"getQuery",
		"H.service.Url.prototype.getQuery",
		"H.service.Url.prototype.setPort",
		"parseInt",
		"getPort",
		"H.service.Url.prototype.getPort",
		"H.service.Url.prototype.setAnchor",
		"getAnchor",
		"H.service.Url.prototype.getAnchor",
		"mergeQuery",
		"H.service.Url.prototype.mergeQuery",
		"other",
		"key",
		"hasOwnProperty",
		"addSubDomain",
		"H.service.Url.prototype.addSubDomain",
		"subDomain",
		"addSubPath",
		"H.service.Url.prototype.addSubPath",
		"subPath",
		"H.service.Url.prototype.toString",
		"encodeURI",
		"queryToString_",
		"encodeURIComponent",
		"join",
		"H.service.Url.prototype.cloneQuery_",
		"clonedParams",
		"H.service.Url.prototype.queryToString_",
		"list",
		"push",
		"H.service.Url.prototype.isQueryEmpty_",
		"i",
		"H.service.jsonp",
		"options",
		"cleanup",
		"opt_failure",
		"script",
		"timeoutHandle",
		"clearTimeout",
		"H.service.jsonp.requests",
		"requests",
		"id",
		"errback",
		"requestHandle",
		"callback",
		"baseURL",
		"H.service.jsonp.responseId_",
		"responseId_",
		"callbackKey",
		"timeout",
		"setTimeout",
		"onResponse",
		"data",
		"type",
		"src",
		"preventCallbackEncoding",
		"H.service.jsonp.handleResponse",
		"handleResponse",
		"callbackId",
		"H.service.AbstractRestService",
		"opt_options",
		"subDomain_",
		"callbackKey_",
		"baseUrl_",
		"configure",
		"H.service.AbstractRestService.prototype.configure",
		"appId",
		"appCode",
		"useHTTPS",
		"useCIT",
		"opt_baseUrl",
		"url_",
		"H.service.AbstractRestService.prototype.restApiRequest",
		"onResult",
		"onError",
		"failure",
		"H.service.Platform",
		"options_",
		"H.service.mergeOptions",
		"H.service.defaultOptions_",
		"setBaseUrl",
		"setUseCIT",
		"setUseHTTPS",
		"setCredentials_",
		"tileServices_",
		"H.service.Platform.prototype.setCredentials_",
		"app_id",
		"app_code",
		"app_id_",
		"app_code_",
		"H.service.Platform.prototype.configure",
		"configurable",
		"useHTTPS_",
		"useCIT_",
		"H.service.Platform.prototype.setUseHTTPS",
		"H.service.Platform.prototype.setUseCIT",
		"baseHost_",
		"H.service.Platform.prototype.setBaseUrl",
		"baseUrl",
		"H",
		"buildInfo",
		"getBaseUrl",
		"H.service.Platform.prototype.getBaseUrl",
		"H.service.setOptions",
		"H.service.getOptions",
		"defaultOptions",
		"H.service.PlacesService",
		"util",
		"getSuperProto",
		"constructor",
		"lang",
		"inherits",
		"H.service.PlacesService.EntryPoint",
		"request",
		"H.service.PlacesService.prototype.request",
		"entryPoint",
		"entryPointParams",
		"restApiRequest",
		"search",
		"H.service.PlacesService.prototype.search",
		"searchParams",
		"H.service.PlacesService.EntryPoint.SEARCH",
		"suggest",
		"H.service.PlacesService.prototype.suggest",
		"suggestParams",
		"H.service.PlacesService.EntryPoint.SUGGEST",
		"explore",
		"H.service.PlacesService.prototype.explore",
		"exploreParams",
		"H.service.PlacesService.EntryPoint.EXPLORE",
		"around",
		"H.service.PlacesService.prototype.around",
		"aroundParams",
		"H.service.PlacesService.EntryPoint.AROUND",
		"here",
		"H.service.PlacesService.prototype.here",
		"hereParams",
		"H.service.PlacesService.EntryPoint.HERE",
		"categories",
		"H.service.PlacesService.prototype.categories",
		"categoriesParams",
		"H.service.PlacesService.EntryPoint.CATEGORIES",
		"follow",
		"H.service.PlacesService.prototype.follow",
		"hyperlink",
		"opt_additionalParameters",
		"getPlacesService",
		"H.service.Platform.prototype.getPlacesService",
		"H.service.JsonX",
		"headers",
		"TypeError",
		"callback_",
		"request_",
		"net",
		"Xhr",
		"xhrCallback_",
		"bind",
		"H.service.JsonX.prototype.xhrCallback_",
		"opt_responseText",
		"opt_errorType",
		"parsedJSON",
		"JSON",
		"parse",
		"e",
		"abort",
		"H.service.JsonX.prototype.abort",
		"H.service.TrafficIncidentsIcons",
		"icons_",
		"getIcon",
		"H.service.TrafficIncidentsIcons.prototype.getIcon",
		"severity",
		"iconMarkup",
		"color",
		"iconOptions",
		"icon",
		"H.service.TrafficIncidentsIcons.MARKER_",
		"replace",
		"H.service.TrafficIncidentsIcons.CONGESTION_",
		"H.service.TrafficIncidentsIcons.ROADWORKS_",
		"H.service.TrafficIncidentsIcons.ACCIDENT_",
		"H.service.TrafficIncidentsIcons.OTHER_",
		"H.service.TrafficIncidentsIcons.CLOSURE_",
		"H.service.TrafficIncidentsIcons.colors_",
		"map",
		"Icon",
		"H.service.util.hash",
		"str",
		"hash",
		"chr",
		"len",
		"charCodeAt",
		"H.service.util.global",
		"Function",
		"H.service.TrafficIncidentsProvider",
		"service",
		"opt_refreshTime",
		"H.service.TrafficIncidentsService",
		"requestData_",
		"provider",
		"MarkerTileProvider",
		"service_",
		"reload",
		"setInterval",
		"criticalityDict_",
		"H.service.TrafficIncidentsProvider.prototype.requestData_",
		"x",
		"y",
		"z",
		"onSuccess",
		"that",
		"criticalityDict",
		"icons",
		"requestIncidentsByTile",
		"req",
		"result",
		"items",
		"item",
		"location",
		"typeDesc",
		"marker",
		"Marker",
		"setData",
		"H.service.MapTileCopyrights",
		"types_",
		"satellite_",
		"normal_",
		"H.service.MapTileCopyright_",
		"def",
		"l",
		"boxes",
		"box",
		"rect",
		"alt",
		"label",
		"min",
		"max",
		"rects",
		"geo",
		"Rect",
		"outer",
		"mergeRect",
		"intersects",
		"H.service.MapTileCopyright_.prototype.intersects",
		"level",
		"H.service.MapTileCopyrights.inegi_",
		"H.service.MapTileCopyrights.navinfo_",
		"H.service.MapTileProvider",
		"tileType",
		"tileSize",
		"format",
		"tileBaseUrl",
		"version_",
		"shards",
		"shards_",
		"ImageTileProvider",
		"getURL",
		"tileUrl",
		"addEventListener",
		"getCopyrights",
		"H.service.MapTileProvider.prototype.getCopyrights",
		"bounds",
		"copyrights",
		"query",
		"H.service.MapTileService",
		"EventTarget",
		"type_",
		"ignoreTypes_",
		"copyrights_",
		"providers_",
		"H.service.MapTileService.listToObject",
		"infoData",
		"what",
		"H.service.MapTileService.prototype.configure",
		"fetchInfo",
		"getType",
		"H.service.MapTileService.prototype.getType",
		"getVersion",
		"H.service.MapTileService.prototype.getVersion",
		"setVersion_",
		"H.service.MapTileService.prototype.setVersion_",
		"version",
		"H.service.MapTileService.prototype.getCopyrights",
		"updateInfo",
		"H.service.MapTileService.prototype.updateInfo",
		"info",
		"response",
		"dispatchEvent",
		"info_",
		"H.service.MapTileService.prototype.fetchInfo",
		"versionUrl",
		"getInfo",
		"H.service.MapTileService.prototype.getInfo",
		"createTileProvider",
		"H.service.MapTileService.prototype.createTileProvider",
		"createTileLayer",
		"H.service.MapTileService.prototype.createTileLayer",
		"opt_opacity",
		"opt_dark",
		"layer",
		"TileLayer",
		"getMapTileService",
		"H.service.Platform.prototype.getMapTileService",
		"mapTileService",
		"requestIncidents",
		"H.service.TrafficIncidentsService.prototype.requestIncidents",
		"serviceParams",
		"H.service.TrafficIncidentsService.prototype.requestIncidentsByTile",
		"opt_serviceParams",
		"getTrafficIncidentsService",
		"H.service.Platform.prototype.getTrafficIncidentsService",
		"createDefaultLayers",
		"H.service.Platform.prototype.createDefaultLayers",
		"opt_tileSize",
		"opt_ppi",
		"opt_lg",
		"opt_lg2",
		"opt_style",
		"opt_pois",
		"baseMT",
		"aerialMT",
		"trafficMT",
		"panoMT",
		"metaInfoService",
		"getMetaInfoTileService",
		"incidents",
		"incidentsProvider",
		"incidentsLayer_",
		"MarkerTileLayer",
		"H.service.metaInfo.Spatial",
		"isClosed",
		"remoteId",
		"H.service.metaInfo.Spatial.spatialOptions_",
		"geometryDataByTileKey_",
		"Spatial",
		"remoteId_",
		"getRemoteId",
		"H.service.metaInfo.Spatial.prototype.getRemoteId",
		"referenceCounter_",
		"retain",
		"H.service.metaInfo.Spatial.prototype.retain",
		"release",
		"H.service.metaInfo.Spatial.prototype.release",
		"getProvider",
		"removeObject",
		"H.service.metaInfo.Spatial.GeometryData_",
		"geometry",
		"opt_hybridIdx",
		"hybridIdx",
		"H.service.metaInfo.Spatial.emptyGeometryData_",
		"getGeometry",
		"H.service.metaInfo.Spatial.prototype.getGeometry",
		"tile",
		"getGeometryData_",
		"getHybridIdx",
		"H.service.metaInfo.Spatial.prototype.getHybridIdx",
		"H.service.metaInfo.IParser",
		"H.service.metaInfo.IParser.prototype.parse",
		"H.service.metaInfo.Parser",
		"opt_categoryFilter",
		"suppressedCategories_",
		"streetLabelStyles_",
		"H.service.metaInfo.Parser.prototype.parse",
		"category",
		"entityParser",
		"entities",
		"entity",
		"parserResult",
		"H.service.metaInfo.Parser.parseFailed_",
		"H.service.util.global.JSON.parse",
		"ex",
		"UNDEF",
		"H.service.metaInfo.Parser.entityParsers_",
		"street labels",
		"parser",
		"verteces",
		"math",
		"Point",
		"lineWidth",
		"fontSize",
		"getPixelRatio",
		"style",
		"H.service.metaInfo.Parser.streetLabelStyleAttributes_",
		"defaultStyle_",
		"getCopy",
		"H.service.metaInfo.Parser.createSpatial_",
		"city center labels",
		"H.service.metaInfo.Parser.boundingBoxMapToGeometry_",
		"labels",
		"boundingBoxes",
		"boundingBoxMap",
		"buildings",
		"spatial",
		"remoteObjects_",
		"sectors",
		"sector",
		"vertices",
		"indeces",
		"polygons",
		"outlines",
		"apply",
		"H.service.metaInfo.Parser.vertexIndicesToGeometry_",
		"addObject",
		"H.service.metaInfo.Parser.boxToGeometry_",
		"w",
		"h",
		"H.service.metaInfo.Parser.boundingBoxKeys_",
		"H.service.metaInfo.Parser.boundingBoxKeys_.length",
		"indices",
		"subIndices",
		"subGeometry",
		"j",
		"idx",
		"H.service.metaInfo.Parser.spatialOptions_",
		"opt_remoteId",
		"H.service.metaInfo.Parser.cleanupMetaInfoData_",
		"setParentEventTarget",
		"SpatialStyle",
		"H.service.metaInfo.Parser.TRANSPARENT_",
		"isMeaningfull",
		"H.service.metaInfo.IObject",
		"H.service.metaInfo.IObject.prototype.getRemoteId",
		"H.service.metaInfo.IObject.prototype.retain",
		"H.service.metaInfo.IObject.prototype.release",
		"H.service.metaInfo.ObjectProvider",
		"parser_",
		"extend",
		"ObjectProvider",
		"H.service.metaInfo.ObjectProvider.emptyArray_",
		"requestMarkers",
		"H.service.metaInfo.ObjectProvider.prototype.requestMarkers",
		"requestDomMarkers",
		"H.service.metaInfo.ObjectProvider.prototype.requestDomMarkers",
		"providesSpatials",
		"H.service.metaInfo.ObjectProvider.prototype.providesSpatials",
		"requestSpatials",
		"H.service.metaInfo.ObjectProvider.prototype.requestSpatials",
		"requestSpatialsByTile",
		"H.service.metaInfo.ObjectProvider.prototype.requestSpatialsByTile",
		"spatials",
		"$$spatials$$",
		"$$response$$",
		"H.service.metaInfo.ObjectProvider.prototype.addObject",
		"H.service.metaInfo.ObjectProvider.prototype.removeObject",
		"H.service.metaInfo.Service",
		"H.service.metaInfo.Service.listToObject",
		"H.service.metaInfo.Service.prototype.configure",
		"H.service.metaInfo.Service.prototype.getType",
		"H.service.metaInfo.Service.prototype.getVersion",
		"H.service.metaInfo.Service.prototype.setVersion_",
		"H.service.metaInfo.Service.prototype.getCopyrights",
		"H.service.metaInfo.Service.prototype.updateInfo",
		"H.service.metaInfo.Service.prototype.fetchInfo",
		"H.service.metaInfo.Service.prototype.getInfo",
		"H.service.metaInfo.Service.prototype.createTileProvider",
		"pixelratio",
		"H.service.metaInfo.TileProvider",
		"H.service.metaInfo.Service.prototype.createTileLayer",
		"H.service.Platform.prototype.getMetaInfoTileService",
		"updateAndReload_",
		"additionalParams_",
		"pixelratio_",
		"onObjectProviderUpdate_",
		"canvasPool_",
		"onTileDropped_",
		"cache_",
		"RemoteTileProvider",
		"H.service.metaInfo.TileProvider.prototype.onTileDropped_",
		"tileKey",
		"objects",
		"getObjects",
		"releaseCanvas",
		"releaseData",
		"H.service.metaInfo.TileProvider.prototype.onObjectProviderUpdate_",
		"requestInternal",
		"H.service.metaInfo.TileProvider.prototype.requestInternal",
		"get",
		"cancelable",
		"xhr",
		"isCanvasValid",
		"getCanvas_",
		"pop",
		"H.service.util.global.document.createElement",
		"cancel",
		"timeoutId",
		"H.service.util.global.setTimeout",
		"responseText",
		"errorMsg",
		"H.service.util.global.clearTimeout",
		"createTileInternal",
		"H.service.metaInfo.TileProvider.prototype.createTileInternal",
		"objectProvider",
		"canvas",
		"render",
		"SpatialTile",
		"getTileKey",
		"H.service.metaInfo.TileProvider.prototype.updateAndReload_",
		"H.service.EnterpriseRoutingService",
		"calculateRoute",
		"H.service.EnterpriseRoutingService.prototype.calculateRoute",
		"calculateRouteParams",
		"getRoute",
		"H.service.EnterpriseRoutingService.prototype.getRoute",
		"getRouteParams",
		"getLinkInfo",
		"H.service.EnterpriseRoutingService.prototype.getLinkInfo",
		"getLinkInfoParams",
		"calculateIsoline",
		"H.service.EnterpriseRoutingService.prototype.calculateIsoline",
		"calculateIsolineParams",
		"getEnterpriseRoutingService",
		"H.service.Platform.prototype.getEnterpriseRoutingService",
		"H.service.RoutingService",
		"H.service.RoutingService.prototype.calculateRoute",
		"getRoutingService",
		"H.service.Platform.prototype.getRoutingService",
		"H.service.GeocodingService",
		"reverseSubDomain_",
		"geocode",
		"H.service.GeocodingService.prototype.geocode",
		"geoodingParams",
		"reverseGeocode",
		"H.service.GeocodingService.prototype.reverseGeocode",
		"reverseGeocodingParams",
		"H.service.GeocodingService.prototype.search",
		"getGeocodingService",
		"H.service.Platform.prototype.getGeocodingService",
		"H.service.buildInfo",
		"BuildInfo"
	],
	"sourcesContent": [
		"// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will write out Closure's deps file, unless the\n * global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects to\n * include their own deps file(s) from different locations.\n *\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler when --closure_pass\n *     or --mark_as_compiled is specified.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is\n * already defined in the current scope before assigning to prevent\n * clobbering if base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {}; // Identifies this file as the Closure base.\n\n\n/**\n * Reference to the global context.  In most cases this will be 'window'.\n */\ngoog.global = this;\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production js_binary can be easily stripped\n * by specifying --define goog.DEBUG=false to the JSCompiler. For example, most\n * toString() methods should be declared inside an \"if (goog.DEBUG)\" conditional\n * because they are generally used for debugging purposes and it is difficult\n * for the JSCompiler to statically determine whether they are used.\n */\ngoog.DEBUG = true;\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as JSCompiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he), see http://wiki/Main/IIISynonyms.\n */\ngoog.LOCALE = 'en';  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the JSCompiler.\n */\ngoog.TRUSTED_SITE = true;\n\n\n/**\n * Creates object stubs for a namespace.  The presence of one or more\n * goog.provide() calls indicate that the file defines the given\n * objects/namespaces.  Build tools also scan for provide/require statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n * @see goog.require\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice. This is intended\n    // to teach new developers that 'goog.provide' is effectively a variable\n    // declaration. And when JSCompiler transforms goog.provide into a real\n    // variable declaration, the compiled JS should work the same as the raw\n    // JS--even when the raw JS uses goog.provide incorrectly.\n    if (goog.isProvided_(name)) {\n      throw Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name);\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact\n * namespace for the test (e.g. 'goog.stringTest'). The linter will then\n * ignore the extra provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (COMPILED && !goog.DEBUG) {\n    opt_message = opt_message || '';\n    throw Error('Importing test-only code into non-debug environment' +\n                opt_message ? ': ' + opt_message : '.');\n  }\n};\n\n\nif (!COMPILED) {\n\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return !goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares\n   * that 'goog' and 'goog.events' must be namespaces.\n   *\n   * @type {Object}\n   * @private\n   */\n  goog.implicitNamespaces_ = {};\n}\n\n\n/**\n * Builds an object structure for the provided namespace path,\n * ensuring that names that already exist are not overwritten. For\n * example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} opt_object the object to expose at the end of the path.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n * @private\n */\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\n  var parts = name.split('.');\n  var cur = opt_objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && cur.execScript) {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  // Certain browsers cannot parse code in the form for((a in b); c;);\n  // This pattern is produced by the JSCompiler when it collapses the\n  // statement above into the conditional loop below. To prevent this from\n  // happening, use a for-loop and reserve the init logic as below.\n\n  // Parentheses added to eliminate strict JS warning in Firefox.\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && goog.isDef(opt_object)) {\n      // last part and we have an object; use it\n      cur[part] = opt_object;\n    } else if (cur[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Returns an object based on its fully qualified external name.  If you are\n * using a compilation pass that renames property names beware that using this\n * function will not find renamed properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var part; part = parts.shift(); ) {\n    if (goog.isDefAndNotNull(cur[part])) {\n      cur = cur[part];\n    } else {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {Object} obj The namespace to globalize.\n * @param {Object=} opt_global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, opt_global) {\n  var global = opt_global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {Array} provides An array of strings with the names of the objects\n *                         this file provides.\n * @param {Array} requires An array of strings with the names of the objects\n *                         this file requires.\n */\ngoog.addDependency = function(relPath, provides, requires) {\n  if (!COMPILED) {\n    var provide, require;\n    var path = relPath.replace(/\\\\/g, '/');\n    var deps = goog.dependencies_;\n    for (var i = 0; provide = provides[i]; i++) {\n      deps.nameToPath[provide] = path;\n      if (!(path in deps.pathToNames)) {\n        deps.pathToNames[path] = {};\n      }\n      deps.pathToNames[path][provide] = true;\n    }\n    for (var j = 0; require = requires[j]; j++) {\n      if (!(path in deps.requires)) {\n        deps.requires[path] = {};\n      }\n      deps.requires[path][require] = true;\n    }\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an orignal\n// way to do \"debug-mode\" development.  The dependency system can sometimes\n// be confusing, as can the debug DOM loader's asyncronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the\n// script will not load until some point after the current script.  If a\n// namespace is needed at runtime, it needs to be defined in a previous\n// script, or loaded via require() with its registered dependencies.\n// User-defined namespaces may need their own deps file.  See http://go/js_deps,\n// http://go/genjsdeps, or, externally, DepsWriter.\n// http://code.google.com/closure/library/docs/depswriter.html\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work is being done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = true;\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies\n * that works in parallel with the BUILD system. Note that all calls\n * to goog.require will be stripped by the JSCompiler when the\n * --closure_pass option is used.\n * @see goog.provide\n * @param {string} name Namespace to include (as was given in goog.provide())\n *     in the form \"goog.package.part\".\n */\ngoog.require = function(name) {\n\n  // if the object already exists we do not need do do anything\n  // TODO(arv): If we start to support require based on file name this has\n  //            to change\n  // TODO(arv): If we allow goog.foo.* this has to change\n  // TODO(arv): If we implement dynamic load after page load we should probably\n  //            not remove this code for the compiled output\n  if (!COMPILED) {\n    if (goog.isProvided_(name)) {\n      return;\n    }\n\n    if (goog.ENABLE_DEBUG_LOADER) {\n      var path = goog.getPathFromDeps_(name);\n      if (path) {\n        goog.included_[path] = true;\n        goog.writeScripts_();\n        return;\n      }\n    }\n\n    var errorMessage = 'goog.require could not find: ' + name;\n    if (goog.global.console) {\n      goog.global.console['error'](errorMessage);\n    }\n\n\n      throw Error(errorMessage);\n\n  }\n};\n\n\n/**\n * Path for included scripts\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to write out Closure's deps file. By default,\n * the deps are written.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The function is passed the script source, which is a relative URI. It should\n * return true if the script was imported, false otherwise.\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * The identity function. Returns its first argument.\n *\n * @param {*=} opt_returnValue The single value that will be returned.\n * @param {...*} var_args Optional trailing arguments. These are ignored.\n * @return {?} The first argument. We can't know the type -- just pass it along\n *      without type.\n * @deprecated Use goog.functions.identity instead.\n */\ngoog.identityFunction = function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n *\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error\n * will be thrown when bar() is invoked.\n *\n * Note: This does not take the name of the function to override as\n * an argument because that would make it more difficult to obfuscate\n * our JavaScript code.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be\n *   overridden.\n */\ngoog.abstractMethod = function() {\n  throw Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a {@code getInstance} static method that always return the same instance\n * object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n */\ngoog.addSingletonGetter = function(ctor) {\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    return ctor.instance_ = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the {@code goog.testing.singleton} module. The compiler\n * removes this variable if unused.\n * @type {!Array.<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\nif (!COMPILED && goog.ENABLE_DEBUG_LOADER) {\n  /**\n   * Object used to keep track of urls that have already been added. This\n   * record allows the prevention of circular dependencies.\n   * @type {Object}\n   * @private\n   */\n  goog.included_ = {};\n\n\n  /**\n   * This object is used to keep track of dependencies and other data that is\n   * used for loading scripts\n   * @private\n   * @type {Object}\n   */\n  goog.dependencies_ = {\n    pathToNames: {}, // 1 to many\n    nameToPath: {}, // 1 to 1\n    requires: {}, // 1 to many\n    // used when resolving dependencies to prevent us from\n    // visiting the file twice\n    visited: {},\n    written: {} // used to keep track of script files we have written\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    var doc = goog.global.document;\n    return typeof doc != 'undefined' &&\n           'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * Tries to detect the base path of the base.js script that bootstraps Closure\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH) {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    var doc = goog.global.document;\n    var scripts = doc.getElementsByTagName('script');\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var src = scripts[i].src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n\n  /**\n   * Imports a script if, and only if, that script hasn't already been imported.\n   * (Must be called at execution time)\n   * @param {string} src Script source.\n   * @private\n   */\n  goog.importScript_ = function(src) {\n    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||\n        goog.writeScriptTag_;\n    if (!goog.dependencies_.written[src] && importScript(src)) {\n      goog.dependencies_.written[src] = true;\n    }\n  };\n\n\n  /**\n   * The default implementation of the import function. Writes a script tag to\n   * import the script.\n   *\n   * @param {string} src The script source.\n   * @return {boolean} True if the script was imported, false otherwise.\n   * @private\n   */\n  goog.writeScriptTag_ = function(src) {\n    if (goog.inHtmlDocument_()) {\n      var doc = goog.global.document;\n\n      // If the user tries to require a new symbol after document load,\n      // something has gone terribly wrong. Doing a document.write would\n      // wipe out the page.\n      if (doc.readyState == 'complete') {\n        // Certain test frameworks load base.js multiple times, which tries\n        // to write deps.js each time. If that happens, just fail silently.\n        // These frameworks wipe the page between each load of base.js, so this\n        // is OK.\n        var isDeps = /\\bdeps.js$/.test(src);\n        if (isDeps) {\n          return false;\n        } else {\n          throw Error('Cannot write \"' + src + '\" after document load');\n        }\n      }\n\n      doc.write(\n          '<script type=\"text/javascript\" src=\"' + src + '\"></' + 'script>');\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * Resolves dependencies based on the dependencies added using addDependency\n   * and calls importScript_ in the correct order.\n   * @private\n   */\n  goog.writeScripts_ = function() {\n    // the scripts we need to write this time\n    var scripts = [];\n    var seenScript = {};\n    var deps = goog.dependencies_;\n\n    function visitNode(path) {\n      if (path in deps.written) {\n        return;\n      }\n\n      // we have already visited this one. We can get here if we have cyclic\n      // dependencies\n      if (path in deps.visited) {\n        if (!(path in seenScript)) {\n          seenScript[path] = true;\n          scripts.push(path);\n        }\n        return;\n      }\n\n      deps.visited[path] = true;\n\n      if (path in deps.requires) {\n        for (var requireName in deps.requires[path]) {\n          // If the required name is defined, we assume that it was already\n          // bootstrapped by other means.\n          if (!goog.isProvided_(requireName)) {\n            if (requireName in deps.nameToPath) {\n              visitNode(deps.nameToPath[requireName]);\n            } else {\n              throw Error('Undefined nameToPath for ' + requireName);\n            }\n          }\n        }\n      }\n\n      if (!(path in seenScript)) {\n        seenScript[path] = true;\n        scripts.push(path);\n      }\n    }\n\n    for (var path in goog.included_) {\n      if (!deps.written[path]) {\n        visitNode(path);\n      }\n    }\n\n    for (var i = 0; i < scripts.length; i++) {\n      if (scripts[i]) {\n        goog.importScript_(goog.basePath + scripts[i]);\n      } else {\n        throw Error('Undefined script input');\n      }\n    }\n  };\n\n\n  /**\n   * Looks at the dependency rules and tries to determine the script file that\n   * fulfills a particular rule.\n   * @param {string} rule In the form goog.namespace.Class or project.script.\n   * @return {?string} Url corresponding to the rule, or null.\n   * @private\n   */\n  goog.getPathFromDeps_ = function(rule) {\n    if (rule in goog.dependencies_.nameToPath) {\n      return goog.dependencies_.nameToPath[rule];\n    } else {\n      return null;\n    }\n  };\n\n  goog.findBasePath_();\n\n  // Allow projects to manage the deps files themselves.\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.importScript_(goog.basePath + 'deps.js');\n  }\n}\n\n\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {*} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (value) {\n      // Check these first, so we can avoid calling Object.prototype.toString if\n      // possible.\n      //\n      // IE improperly marshals tyepof across execution contexts, but a\n      // cross-context object will still return false for \"instanceof Object\".\n      if (value instanceof Array) {\n        return 'array';\n      } else if (value instanceof Object) {\n        return s;\n      }\n\n      // HACK: In order to use an Object prototype method on the arbitrary\n      //   value, the compiler requires the value be cast to type Object,\n      //   even though the ECMA spec explicitly allows it.\n      var className = Object.prototype.toString.call(\n          /** @type {Object} */ (value));\n      // In Firefox 3.6, attempting to access iframe window objects' length\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\n      // here.\n      if (className == '[object Window]') {\n        return 'object';\n      }\n\n      // We cannot always use constructor == Array or instanceof Array because\n      // different frames have different Array objects. In IE6, if the iframe\n      // where the array was created is destroyed, the array loses its\n      // prototype. Then dereferencing val.splice here throws an exception, so\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\n      // so that will work. In this case, this function will return false and\n      // most array functions will still work because the array is still\n      // array-like (supports length and []) even though it has lost its\n      // prototype.\n      // Mark Miller noticed that Object.prototype.toString\n      // allows access to the unforgeable [[Class]] property.\n      //  15.2.4.2 Object.prototype.toString ( )\n      //  When the toString method is called, the following steps are taken:\n      //      1. Get the [[Class]] property of this object.\n      //      2. Compute a string value by concatenating the three strings\n      //         \"[object \", Result(1), and \"]\".\n      //      3. Return Result(2).\n      // and this behavior survives the destruction of the execution context.\n      if ((className == '[object Array]' ||\n           // In IE all non value types are wrapped as objects across window\n           // boundaries (not iframe though) so we have to do object detection\n           // for this edge case\n           typeof value.length == 'number' &&\n           typeof value.splice != 'undefined' &&\n           typeof value.propertyIsEnumerable != 'undefined' &&\n           !value.propertyIsEnumerable('splice')\n\n          )) {\n        return 'array';\n      }\n      // HACK: There is still an array case that fails.\n      //     function ArrayImpostor() {}\n      //     ArrayImpostor.prototype = [];\n      //     var impostor = new ArrayImpostor;\n      // this can be fixed by getting rid of the fast path\n      // (value instanceof Array) and solely relying on\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\n      // but that would require many more function calls and is not warranted\n      // unless closure code is receiving objects from untrusted sources.\n\n      // IE in cross-window calls does not correctly marshal the function type\n      // (it appears just as an object) so we cannot use just typeof val ==\n      // 'function'. However, if the object has a call property, it is a\n      // function.\n      if ((className == '[object Function]' ||\n          typeof value.call != 'undefined' &&\n          typeof value.propertyIsEnumerable != 'undefined' &&\n          !value.propertyIsEnumerable('call'))) {\n        return 'function';\n      }\n\n\n    } else {\n      return 'null';\n    }\n\n  } else if (s == 'function' && typeof value.call == 'undefined') {\n    // In Safari typeof nodeList returns 'function', and on Firefox\n    // typeof behaves similarly for HTML{Applet,Embed,Object}Elements\n    // and RegExps.  We would like to return object for those and we can\n    // detect an invalid function by making sure that the function\n    // object has a call method.\n    return 'object';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the specified value is not |undefined|.\n * WARNING: Do not use this to test if an object has a property. Use the in\n * operator instead.  Additionally, this function assumes that the global\n * undefined variable has not been redefined.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\ngoog.isDef = function(val) {\n  return val !== undefined;\n};\n\n\n/**\n * Returns true if the specified value is |null|\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is null.\n */\ngoog.isNull = function(val) {\n  return val === null;\n};\n\n\n/**\n * Returns true if the specified value is defined and not null\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is an array\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArray = function(val) {\n  return goog.typeOf(val) == 'array';\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like\n * the value needs to be an object and have a getFullYear() function.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is a string\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Returns true if the specified value is a boolean\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\ngoog.isBoolean = function(val) {\n  return typeof val == 'boolean';\n};\n\n\n/**\n * Returns true if the specified value is a number\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\ngoog.isNumber = function(val) {\n  return typeof val == 'number';\n};\n\n\n/**\n * Returns true if the specified value is a function\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.isFunction = function(val) {\n  return goog.typeOf(val) == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays\n * and functions.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further\n * calls with the same object as a parameter returns the same value. The unique\n * ID is guaranteed to be unique across the current session amongst objects that\n * are passed into {@code getUid}. There is no guarantee that the ID is unique\n * or consistent across sessions. It is unsafe to generate unique ID for\n * function prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\n  // and SubClass.prototype will be the same.\n  return obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using {@code goog.getUid} in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // DOM nodes in IE are not instance of Object and throws exception\n  // for delete. Instead we try to use removeAttribute\n  if ('removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n  /** @preserveTry */\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure javascript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Adds a hash code field to an object. The hash code is unique for the\n * given object.\n * @param {Object} obj The object to get the hash code for.\n * @return {number} The hash code for the object.\n * @deprecated Use goog.getUid instead.\n */\ngoog.getHashCode = goog.getUid;\n\n\n/**\n * Removes the hash code field from an object.\n * @param {Object} obj The object to remove the field from.\n * @deprecated Use goog.removeUid instead.\n */\ngoog.removeHashCode = goog.removeUid;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (obj.clone) {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {Function} fn A function to partially apply.\n * @param {Object|undefined} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @private\n * @suppress {deprecated} The compiler thinks that Function.prototype.bind\n *     is deprecated because some people have declared a pure-JS version.\n *     Only the pure-JS version is truly deprecated.\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {Function} fn A function to partially apply.\n * @param {Object|undefined} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of |this| 'pre-specified'.<br><br>\n *\n * Remaining arguments specified at call-time are appended to the pre-\n * specified ones.<br><br>\n *\n * Also see: {@link #partial}.<br><br>\n *\n * Usage:\n * <pre>var barMethBound = bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which |this| should\n *     point to when the function is run.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to the function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default\n      // Chrome extension environment. This means that for Chrome extensions,\n      // they get the implementation of Function.prototype.bind that\n      // calls goog.bind instead of the native one. Even worse, we don't want\n      // to introduce a circular dependency between goog.bind and\n      // Function.prototype.bind, so we have to hack this to make sure it\n      // works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially\n *     applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Prepend the bound arguments to the current arguments.\n    var newArgs = Array.prototype.slice.call(arguments);\n    newArgs.unshift.apply(newArgs, args);\n    return fn.apply(this, newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n * @param {Object} target Target.\n * @param {Object} source Source.\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n */\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\n  // Unary plus operator converts its operand to a number which in the case of\n  // a date is done by calling getTime().\n  return +new Date();\n});\n\n\n/**\n * Evals javascript in the global scope.  In IE this uses execScript, other\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\n * global scope (for example, in Safari), appends a script tag instead.\n * Throws an exception if neither execScript or eval is defined.\n * @param {string} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  if (goog.global.execScript) {\n    goog.global.execScript(script, 'JavaScript');\n  } else if (goog.global.eval) {\n    // Test to see if eval works\n    if (goog.evalWorksForGlobals_ == null) {\n      goog.global.eval('var _et_ = 1;');\n      if (typeof goog.global['_et_'] != 'undefined') {\n        delete goog.global['_et_'];\n        goog.evalWorksForGlobals_ = true;\n      } else {\n        goog.evalWorksForGlobals_ = false;\n      }\n    }\n\n    if (goog.evalWorksForGlobals_) {\n      goog.global.eval(script);\n    } else {\n      var doc = goog.global.document;\n      var scriptElt = doc.createElement('script');\n      scriptElt.type = 'text/javascript';\n      scriptElt.defer = false;\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\n      scriptElt.appendChild(doc.createTextNode(script));\n      doc.body.appendChild(scriptElt);\n      doc.body.removeChild(scriptElt);\n    }\n  } else {\n    throw Error('goog.globalEval not available');\n  }\n};\n\n\n/**\n * Indicates whether or not we can call 'eval' directly to eval code in the\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\n * empirically tests whether eval works for globals). @see goog.globalEval\n * @type {?boolean}\n * @private\n */\ngoog.evalWorksForGlobals_ = null;\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @type {Object|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a\n * hyphen and passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which\n * these mappings are used. In the BY_PART style, each part (i.e. in\n * between hyphens) of the passed in css name is rewritten according\n * to the map. In the BY_WHOLE style, the full css name is looked up in\n * the map directly. If a rewrite is not specified by the map, the\n * compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls\n * to goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x= 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed\n * only the modifier will be processed, as it is assumed the first\n * argument was generated as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename = goog.cssNameMappingStyle_ == 'BY_WHOLE' ?\n        getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  if (opt_modifier) {\n    return className + '-' + rename(opt_modifier);\n  } else {\n    return rename(className);\n  }\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --closure_pass flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {Object|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object=} opt_values Map of place holder name to value.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values) {\n  var values = opt_values || {};\n  for (var key in values) {\n    var value = ('' + values[key]).replace(/\\$/g, '$$$$');\n    str = str.replace(new RegExp('\\\\{\\\\$' + key + '\\\\}', 'gi'), value);\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primtive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated,\n * unless they are exported in turn via this function or\n * goog.exportProperty\n *\n * <p>Also handy for making public items that are defined in anonymous\n * closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction',\n *                       Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n */\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { }\n *\n * function ChildClass(a, b, c) {\n *   goog.base(this, a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // works\n * </pre>\n *\n * In addition, a superclass' implementation of a method can be invoked\n * as follows:\n *\n * <pre>\n * ChildClass.prototype.foo = function(a) {\n *   ChildClass.superClass_.foo.call(this, a);\n *   // other code\n * };\n * </pre>\n *\n * @param {Function} childCtor Child class.\n * @param {Function} parentCtor Parent class.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {};\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n};\n\n\n/**\n * Call up to the superclass.\n *\n * If this is called from a constructor, then this calls the superclass\n * contructor with arguments 1-N.\n *\n * If this is called from a prototype method, then you must pass\n * the name of the method as the second argument to this function. If\n * you do not, you will get a runtime error. This calls the superclass'\n * method with arguments 2-N.\n *\n * This function only works if you use goog.inherits to express\n * inheritance relationships between your classes.\n *\n * This function is a compiler primitive. At compile-time, the\n * compiler will do macro expansion to remove a lot of\n * the extra overhead that this function introduces. The compiler\n * will also enforce a lot of the assumptions that this function\n * makes, and treat it as a compiler error if you break them.\n *\n * @param {!Object} me Should always be \"this\".\n * @param {*=} opt_methodName The method name if calling a super method.\n * @param {...*} var_args The rest of the arguments.\n * @return {*} The return value of the superclass method.\n */\ngoog.base = function(me, opt_methodName, var_args) {\n  var caller = arguments.callee.caller;\n  if (caller.superClass_) {\n    // This is a constructor. Call the superclass constructor.\n    return caller.superClass_.constructor.apply(\n        me, Array.prototype.slice.call(arguments, 1));\n  }\n\n  var args = Array.prototype.slice.call(arguments, 2);\n  var foundCaller = false;\n  for (var ctor = me.constructor;\n       ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {\n    if (ctor.prototype[opt_methodName] === caller) {\n      foundCaller = true;\n    } else if (foundCaller) {\n      return ctor.prototype[opt_methodName].apply(me, args);\n    }\n  }\n\n  // If we did not find the caller in the prototype chain,\n  // then one of two things happened:\n  // 1) The caller is an instance method.\n  // 2) This method was not called by the right caller.\n  if (me[opt_methodName] === caller) {\n    return me.constructor.prototype[opt_methodName].apply(me, args);\n  } else {\n    throw Error(\n        'goog.base called from a method of one name ' +\n        'to a method of a different name');\n  }\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the\n * aliases applied.  In uncompiled code the function is simply run since the\n * aliases as written are valid JavaScript.\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *    (e.g. \"var Timer = goog.Timer\").\n */\ngoog.scope = function(fn) {\n  fn.call(goog.global);\n};\n\n\n",
		"goog.provide('H.service.Url');\n\n\n\n/**\n* This class represents a URL giving access to the individual parts\n* that make up a URL,such as the scheme, host/domain, path, etc.\n* Use the static parse method to populate a new URL object from a URL string.\n* Be aware that URLs with user and password like \"ftp://user:password@foo.bar/\" are not supported!\n* @constructor\n* @param {string} scheme the URL scheme (e.g. \"http\" or \"https\" or \"mailto\")\n* @param {string} host the host (or domain) part of the URL\n* @param {string=} opt_path the path following the host pointing to a\n*  resource\n* @param {Object=} opt_params the query string parameters of this\n*  URL\n* @param {number=} opt_port The port of the host on which the host\n*  listens. If a string is passed it must be convertible to an integer.\n* @param {string=} opt_anchor an optional anchor part of the URL (usually\n*  preceded by '#');\n*\n* @throws {Error} Throws an error if either the 'scheme' and 'host' are\n*  undefined, if 'opt_params' was specidied but cannot be processed or if the port\n*  is defined but cannot be converted to a number.\n* @export\n* @publish\n*/\nH.service.Url = function(scheme, host, opt_path, opt_params, opt_port, opt_anchor) {\n  'use strict';\n\n  if (scheme && host) {\n    this.setScheme(scheme);\n    this.setHost(host);\n    this.setPath(opt_path);\n    this.setPort(opt_port);\n    this.setAnchor(opt_anchor);\n    this.setQuery(opt_params);\n  } else {\n    throw new Error('Parameters \"scheme\" and \"host\" must be specified');\n  }\n};\n\n\n/**\n * A helper method which translates a URL into a full qualified URL\n * @private\n * @param {string} url The URL to full qualify\n * @param {string=} opt_baseURL The underlying base URL to use.\n *        If omitted, the base URL of the document which loaded the API is used.\n * @return {string} the full qualified URL\n */\nH.service.Url.fullQualifyURL_ = function(url, opt_baseURL) {\n  var doc = document,\n      origBase,\n      origHRef,\n      htmlHead,\n      base,\n      link = doc.createElement('a'),\n      fullQualifiedURL;\n\n  // Save the current original state of the document and set the new base URL:\n  if (opt_baseURL) {\n    origBase = doc.getElementsByTagName('base')[0];\n    origHRef = origBase && origBase.href;\n    htmlHead = doc.head;\n    base = origBase || htmlHead.appendChild(doc.createElement('base'));\n    base.href = opt_baseURL;\n  }\n  // Resolve the URL:\n  link.href = url;\n  fullQualifiedURL = link.href;\n\n  // Restore the original state of the document if needed:\n  if (opt_baseURL) {\n    if (origBase) {\n      origBase.href = origHRef;\n    } else {\n      htmlHead.removeChild(base);\n    }\n  }\n\n  return fullQualifiedURL;\n};\n\n\n/**\n * A helper method to get the base URL of an document\n * @private\n * @param {Document=} opt_doc The document to inspect, if omitted, the API document is used\n * @return {string} the base URL\n */\nH.service.Url.getBaseURI_ = function(opt_doc) {\n  var doc = opt_doc || document,\n      baseURI,\n      base;\n  if (!(baseURI = doc.baseURI)) {\n    base = doc.getElementsByTagName('base')[0];\n    baseURI = base && base.href || doc.location.href;\n  }\n  return baseURI;\n};\n\n\n/**\n* This function parses a URL string and returns a H.service.Url object. The URL\n*  string must contain at least a scheme and a host.\n* @publish\n* @export\n* @param {string} url The URL string to parse.\n* @param {string=} opt_baseURL The base URL to use to resolve relative URLs.\n*        If ommited the base URL of the document which loaded the API is taken.\n* @return {H.service.Url} the parsed URL object\n*/\nH.service.Url.parse = function(url, opt_baseURL) {\n  'use strict';\n\n  url = H.service.Url.fullQualifyURL_(url, opt_baseURL);\n  var parseRx = new RegExp(\n                           '(?:(\\\\w+)://)?(?:([^:]+):([^@/]*)@)?([^/:]+)?' +\n                           '(?:[:]{1}([0-9]+))?(/[^?#]*)?(\\\\?[^#]+)?(#.*)?'),\n      parsedParts = parseRx.exec(url),\n      scheme = parsedParts[1],\n      user = parsedParts[2],\n      host = parsedParts[4],\n      port = parsedParts[5],\n      path = parsedParts[6],\n      params = parsedParts[7],\n      anchor = parsedParts[8],\n      hostSplit;\n  // A workaround for the fact that the regex doesn't parse user names without passwords correctly:\n  if (!user && host && /@/.test(host)) {\n    host = host.split('@')[1];\n  }\n\n  return new H.service.Url(\n      scheme,\n      host,\n      (path && path.length > 0) ? path.substr(1) : '',\n      H.service.Url.parseQuery_(params),\n      isNaN(+port) ? undefined : +port,\n      (anchor && anchor.length > 0) ? anchor.substr(1) : ''\n  );\n};\n\n\n/**\n * Clones this URL object. Optionally, mutations can be passed to this function\n * to modify properties of the cloned object.\n * Note that URL parameters are not replaced but merged with the parameters of\n * this instance.\n *\n * @return {H.service.Url} the clone of the URL object\n * @export\n * @publish\n */\nH.service.Url.prototype.clone = function() {\n  'use strict';\n\n  return new H.service.Url(\n      this.scheme_,\n      this.host_,\n      this.path_,\n      this.cloneQuery_(),\n      this.port_,\n      this.anchor_\n  );\n};\n\n\n/**\n * This function sets the scheme of this URL object.\n * @param {string} scheme the new scheme\n * @return {H.service.Url} this URL object\n * @export\n * @publish\n */\nH.service.Url.prototype.setScheme = function(scheme) {\n  'use strict';\n\n  if (!scheme || (typeof scheme !== 'string')) {\n    throw new Error('The \"scheme\" parameter must be a non-empty string.');\n  }\n  this.scheme_ = scheme;\n  return this;\n};\n\n\n/**\n * This function returns the scheme of this Url object.\n * @return {string} the scheme (for example 'http')\n * @export\n * @publish\n */\nH.service.Url.prototype.getScheme = function() {\n  'use strict';\n  return this.scheme_;\n};\n\n\n/**\n * This function sets the host of this URL object.\n * @param {string} host the new host\n * @return {H.service.Url} this URL object\n * @throws {Error} Throws an error if the host is not a string, empty or if\n *  the host name contains illegal characters (i.e. starts with '-' or '.' or\n *  ends with '.').\n * @export\n * @publish\n */\nH.service.Url.prototype.setHost = function(host) {\n  'use strict';\n\n  if (!host ||\n      (typeof host !== 'string') ||\n      host.charAt(0) === '-' ||\n      host.charAt(0) === '.' ||\n      host.charAt(host.length - 1) === '.') {\n    throw new Error('The \"host\" parameter is not a valid host name.');\n  }\n  this.host_ = host;\n  return this;\n};\n\n\n/**\n * This function returns the host name of this Url object.\n * @return {string} the host (for example 'api.here.com')\n * @export\n * @publish\n */\nH.service.Url.prototype.getHost = function() {\n  'use strict';\n  return this.host_;\n};\n\n\n/**\n * This function sets the path of this URL object.\n * @param {string|undefined} path the new path or a boolean to clear the path\n * @return {H.service.Url} this URL object\n * @export\n * @publish\n */\nH.service.Url.prototype.setPath = function(path) {\n  'use strict';\n  this.path_ = path || undefined;\n  return this;\n};\n\n\n/**\n * This function returns the path part of this Url object.\n * @return {string|undefined} the path (for example 'myresources/resource.html')\n * @export\n * @publish\n */\nH.service.Url.prototype.getPath = function() {\n  'use strict';\n  return this.path_;\n};\n\n\n/**\n * This function sets the specified parameters for this URL object. Keys in this object, which\n * are associated with undefined values will be treated as query string\n * parameters with no value.\n * @param {Object|undefined} params a hash of query string parameters specifying the\n *  parameters to be set.or a boolean to clear the parameters.\n *\n * @return {H.service.Url} this URL object\n * @export\n * @publish\n */\nH.service.Url.prototype.setQuery = function(params) {\n  'use strict';\n  if (params) {\n    if (typeof params == 'object') {\n      this.params_ = params;\n    }\n    else {\n      throw new Error('Parameter \"params\" must be an object.');\n    }\n  } else {\n    this.params_ = {};\n  }\n\n  return this;\n};\n\n\n/**\n * This function returns a boolean value indicating whether there are any query string\n * parameter associated with this URL.\n * @return {boolean} true if there are parameters, false if none are present\n * @export\n * @publish\n */\nH.service.Url.prototype.hasQuery = function() {\n  'use strict';\n  return !this.isQueryEmpty_();\n};\n\n\n/**\n * This function returns the query object of this Url object.\n * @return {Object} the query object\n * @export\n * @publish\n */\nH.service.Url.prototype.getQuery = function() {\n  'use strict';\n  return this.params_;\n};\n\n\n/**\n * This function sets the port number of this URL object.\n * @param {number|undefined} port the new port number or a boolean to clear the\n *  port number (note that 0 is also a boolean)\n * @return {H.service.Url} this URL object\n * @throws {Error} Throws an error if the parameter cannot be converted to a\n *  number.\n * @export\n */\nH.service.Url.prototype.setPort = function(port) {\n  'use strict';\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new Error('Parameter \"port\" must be a number or undefined');\n  }\n\n  this.port_ = +/** @type {number}*/(port) || undefined;\n  return this;\n};\n\n\n/**\n * This function returns the port number of this Url object.\n * @return {number|undefined} the port number\n * @export\n */\nH.service.Url.prototype.getPort = function() {\n  'use strict';\n  return this.port_;\n};\n\n\n/**\n * This function sets the anchor of this URL object.\n * @param {string|boolean|undefined} anchor the new anchor or undefined to clear the\n *  anchor\n * @return {H.service.Url} this URL object\n * @export\n * @publish\n */\nH.service.Url.prototype.setAnchor = function(anchor) {\n  'use strict';\n  this.anchor_ = anchor || undefined;\n  return this;\n};\n\n\n/**\n * This function returns the anchor of this Url object.\n * @return {string|undefined} the anchor\n * @export\n * @publish\n */\nH.service.Url.prototype.getAnchor = function() {\n  'use strict';\n  return this.anchor_;\n};\n\n\n/**\n * This function merges the provided parameters into this URL's existing parameters. Key-value\n * pairs which are defined in the argument and this URL's parameters will be\n * overwritten. Key-value pairs which are defined in the argument and are not\n * defined in this URL's parameters will be added. Prototype properties and\n * function properties will not be merged.\n * @example\n * var url = new H.service.Url('http', 'api.here.com');\n * url.setQuery({ 'foo': 'bar' });\n * url.mergeQuery({ 'foo': 'baz', 'bar': 'foo' });\n *\n * var newQuery = url.getQuery();\n * newQuery['foo'] === 'bar' // false\n * newQuery['foo'] === 'baz' // true\n * newQuery['bar'] === 'foo' // true\n *\n * @param {Object} other the parmeters to be merged into this URL's query\n *  string parameters\n * @return {H.service.Url} this URL object\n * @throws {Error} Throws an error if the argument is not of type 'object'.\n * @export\n * @publish\n */\nH.service.Url.prototype.mergeQuery = function(other) {\n  'use strict';\n  if (typeof other !== 'object') {\n    throw new Error('Parameter \"other\" must be an object.');\n  }\n  this.mergeQuery_(this.params_, other);\n\n  return this;\n};\n\n\n/**\n * This function adds a sub-domain to the host of this URL object.\n * @param {string} subDomain the sub domain (non-empty string) to be added\n * @return {H.service.Url} this URL object\n * @export\n * @publish\n */\nH.service.Url.prototype.addSubDomain = function(subDomain) {\n  'use strict';\n\n  if (!subDomain || (typeof subDomain !== 'string')) {\n    throw new Error('Parameter \"subDomain\" must be a non-empty string');\n  }\n  if (subDomain.substr(subDomain.length - 1) === '.') {\n    //clean trailing '.'\n    subDomain = subDomain.substr(0, subDomain.length - 1);\n  }\n  return this.setHost(subDomain + '.' + this.host_);\n};\n\n\n/**\n * This function adds a sub-path to this URL's path\n * @param {string} subPath the path to be added\n * @return {H.service.Url} this URL object\n * @export\n * @publish\n */\nH.service.Url.prototype.addSubPath = function(subPath) {\n  'use strict';\n\n  if (!subPath || (typeof subPath !== 'string')) {\n    throw new Error('Parameter \"subPath\" must be a non-empty string');\n  }\n  return this.setPath((this.path_ ? this.path_ + '/' : '') + subPath);\n};\n\n\n/**\n * This function formats this URL object to a full URL string.\n * @return {string} the URL's string representation\n * @export\n * @publish\n */\nH.service.Url.prototype.toString = function() {\n  'use strict';\n\n  return [\n    this.scheme_ + '://',\n    this.host_,\n    (this.port_ ? ':' + this.port_ : ''),\n    (this.path_ || !this.isQueryEmpty_() || this.anchor_ ? '/' : ''),\n    (this.path_ ? encodeURI(this.path_) : ''),\n    (this.queryToString_()),\n    (this.anchor_ ? '#' + encodeURIComponent(this.anchor_) : '')\n  ].join('');\n};\n\n\n/**\n * This function clones this query string object. Optionally a hash of parameter mutations can\n *  be passed to modify the clone's parameters.\n * @return {Object} a new object containing the same key-value pairs as this\n *  URL object\n * @private\n * @export\n */\nH.service.Url.prototype.cloneQuery_ = function() {\n  'use strict';\n\n  var clonedParams = {},\n      key;\n  for (key in this.params_) {\n    clonedParams[key] = this.params_[key];\n  }\n  return clonedParams;\n};\n\n\n/**\n * Merges the provided query parameters into this parameter collection. Existing\n * query parameters will be overridden with the values of the argument and\n * non-existing ones will be added. Prototype properties and function\n *  properties will not be merged.\n * @param {Object} params the original parameters to merge to\n * @param {Object} other the parameters to merge\n * @return {Object} the merged parameters\n * @private\n */\nH.service.Url.prototype.mergeQuery_ = function(params, other) {\n  'use strict';\n\n  var key;\n  for (key in other) {\n    //filter prototype properties and functions\n    if (other.hasOwnProperty(key) && (typeof other[key] !== 'function')) {\n      params[key] = other[key];\n    }\n  }\n  return params;\n};\n\n\n/**\n * Returns the string representation of this Url's query string object.\n * @return {string} the formatted URL query string\n * @private\n */\nH.service.Url.prototype.queryToString_ = function() {\n  'use strict';\n\n  var list = [],\n      key,\n      params = this.params_,\n      value;\n  for (key in params) {\n    if (params.hasOwnProperty(key) && typeof params[key] !== 'function') {\n      value = this.params_[key];\n      list.push(\n          encodeURIComponent(key) +\n          (value === undefined ?\n              '' :\n              '=' + encodeURIComponent(value)\n          )\n      );\n    }\n  }\n  return list.length > 0 ? '?' + list.join('&') : '';\n};\n\n\n/**\n * Determines whether any query string parameters are registered with\n * this URL object\n * @private\n * @return {boolean} a boolean value indicating whether this URL object's query\n *  string is empty\n */\nH.service.Url.prototype.isQueryEmpty_ = function() {\n  'use strict';\n\n  var key,\n      i = 0;\n  for (key in this.params_) {\n    if (this.params_.hasOwnProperty(key) &&\n        typeof this.params_[key] !== 'function') {\n      i++;\n      if (i > 0) break;\n    }\n  }\n  return !i;\n};\n\n\n/**\n * Creates a populated Url.QueryString object from a query string part of a URL\n *  string.\n * @param {string} queryString the query string (preceded by a \"?\" character in\n *  URLs).\n * @return {Object} an object populated with the parameter entries as\n *  key-value pairs.\n * @private\n */\nH.service.Url.parseQuery_ = function(queryString) {\n  'use strict';\n\n  var urlParams = {},\n      parseRx,\n      paramPart;\n\n  if (queryString) {\n    parseRx = new RegExp('([?&]?([^=&+]+))(=([^&]+))?', 'g');\n    while ((paramPart = parseRx.exec(queryString))) {\n      urlParams[decodeURIComponent(paramPart[2])] = paramPart[4] ?\n          decodeURIComponent(paramPart[4]) : undefined;\n    }\n  }\n\n  return urlParams;\n};\n",
		"goog.provide('H.service.jsonp');\n\ngoog.require('H.service.Url');\n\n\n/**\n * Sends a JSON-P request and invokes the provided callback once the service\n *  responds.\n * @param {H.service.JsonpOptions} options the options for this JSON-P request\n * @return {H.service.JsonpRequestHandle} the handle of this request\n *\n * @export\n */\n\nH.service.jsonp = function(options) {\n  'use strict';\n\n  if (!options.url || !options.callback) {\n    throw new Error(\n        'Parameter \"options\" must specify at least a URL and a callback.'\n    );\n  } else if (typeof options.callback !== 'function') {\n    throw new Error('Parmaters options.callback must be a function');\n  }\n\n  //this has become some ugly piece of code but it is fairly compact:\n  //-----------------------------------------------------------------\n\n  // Passing the document with the options allows for using multiple documents\n  // as well as mocking the document for unit testing\n  var doc = options.doc || document,\n      head = doc.getElementsByTagName('head')[0],\n      script = doc.createElement('script'),\n      url = options.url instanceof H.service.Url ?\n          options.url :\n          H.service.Url.parse(options.url, options.baseURL),\n      //an ID to refer back to the request later on\n      id = H.service.jsonp.responseId_++,\n      //checking for a callback key or setting default\n      callbackKey = options.callbackKey || 'callback',\n      //getting a local short-cut to the callback function\n      callback = options.callback,\n      //the request handle object\n      requestHandle = {},\n      timeoutHandle = null;\n\n  /**\n   * @param {string=} opt_failure\n   */\n  function cleanup(opt_failure) {\n    //clean up DOM\n    head.removeChild(script);\n    //make sure the callback does not accidentally get called again\n    //check if a timeout was set and clear that\n    timeoutHandle && clearTimeout(timeoutHandle);\n    //remore the handler function from the registry\n    delete H.service.jsonp.requests[id];\n    //if we have a failure we should err back\n    if (opt_failure) {\n      options.errback && options.errback.call(requestHandle, opt_failure);\n    }\n    //if we don't have a failure all is good :)\n  }\n\n  function onResponse(data) {\n    //get a temporary reference to the actual callback function\n    // a) clean up replaces callback with an empty function to prevent\n    //    calling it multiple times\n    // b) clean up should have happend before we do anything else\n    var _callback = callback;\n    //clean up with no parameter (i.e. success)\n    cleanup();\n    //finally call the actual callback with context\n    _callback.call(requestHandle, data);\n  }\n\n  //we add the ID to the handle directly (just to be able to see it from\n  //the outside\n  requestHandle['id'] = id;\n  //we expose a cancel function on the object\n  requestHandle['cancel'] = function() { cleanup('cancelled'); };\n\n  //if a timeout was not set to 0\n  if (options.timeout !== 0) {\n    //we set a timeout of either options.timeout milliseconds or default\n    //(30 seconds)\n    timeoutHandle = setTimeout(\n        function() { cleanup('timeout'); },\n        options.timeout || 30000);\n  }\n\n  //finally we register the onResponse function globally\n  H.service.jsonp.requests[id] = onResponse;\n  //do some touching up of the script tag\n  script.type = 'text/javascript';\n  //set the source\n  //  Note that we do not use the params collection of the H.service.Url.\n  //  This is because params will automatically be encoded and some services\n  //  (our maptiler for example) do not decode before writing it to the content.\n  //  E.g.:\n  //    .../maptile/2.1/info/callback_func=mysjonpcallback[12345]\n  //  becomes:\n  //    .../maptile/2.1/info/callback_func=mysjonpcallback%5B12345%5D\n  //  and comes back as JavScript:\n  //    mysjonpcallback%5B12345%5D( '{ \"response\" :â€¦\n  //  which is not valid JavaScript\n  script.src = url.toString() +\n      (url.hasQuery() ? '&' : '?') +\n      callbackKey + '=' +\n      (options.preventCallbackEncoding ?\n          'H.service.jsonp.handleResponse(' + id + ')' :\n          encodeURI('H.service.jsonp.handleResponse(' + id + ')'));\n  //and append\n  head.appendChild(script);\n\n  //return the handler to allow cancelling.\n  return requestHandle;\n};\n\n\n/**\n * This method searches returns handler for incomming\n * response.\n * @param {number} callbackId\n * @export\n * @return {Function}\n */\nH.service.jsonp.handleResponse = function(callbackId) {\n  'use strict';\n  var callback = H.service.jsonp.requests[callbackId];\n  //return dummy function if callback was cancelled or timeout occured\n  //and response camed in anymway after\n  return callback ? callback : function() {};\n};\n\n\n/**\n * internal response ID counter\n * @private\n */\nH.service.jsonp.responseId_ = 0;\n\n\n/**\n * @dict\n */\nH.service.jsonp.requests = {};\n\n\n/**\n * @typedef {Object}\n * @property {number} id the ID associated internally with this request\n * @property {function()} cancel this function cancels the request and invokes\n *  the errback function\n * @publish\n */\nH.service.JsonpRequestHandle;\n\n\n/**\n * @typedef {{\n *   url: (string|H.service.Url),\n *   baseURL: (string|undefined),\n *   callback: function(*),\n *   errback: (function(string=)|undefined),\n *   timeout: (number|undefined),\n *   callbackKey: (string|undefined),\n *   preventCallbackEncoding: (boolean|undefined),\n *   doc: (HTMLDocument|undefined)\n * }}\n * @property {(string|H.service.Url)} url\n *           The URL of the JSON-P service to be called\n * @property {number=} baseURL\n *           The base URL to use to resolve relative URLs.\n *           If ommited the base URL of the document which loaded the API is taken\n * @property {function(*)} callback\n *           The function to be called once the service responds\n * @property {number=} timeout\n *           The number of milliseconds to wait before assuming a timeout (0 means no timeout)\n * @property {function(string)=} errback\n *           The function to be called if an error occurs. The string can have two values: 'timeout' and 'cancelled'\n * @property {string=} callbackKey\n             The name of the JSON-P callback parameter function\n * @property {boolean} preventCallbackEncoding\n *           Indicates whether the callback value should not be URL encoded\n */\nH.service.JsonpOptions;\n",
		"goog.provide('H.service.AbstractRestService');\n\n\ngoog.require('H.service.IConfigurable');\ngoog.require('H.service.Url');\ngoog.require('H.service.jsonp');\n\n\n\n/**\n * Abstract rest service class\n * @param {H.service.AbstractRestService.Options=} opt_options\n * @constructor\n * @implements {H.service.IConfigurable}\n * @export\n * @publish\n */\nH.service.AbstractRestService = function(opt_options) {\n  'use strict';\n  var options = opt_options || {};\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.subDomain_ = options['subDomain'];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.path_ = options['path'];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.callbackKey_ = options['callbackKey'];\n\n  /**\n   * @type {H.service.Url}\n   * @private\n   */\n  this.baseUrl_ = options['baseUrl'];\n};\n\n\n/**\n * @override\n * @export\n */\nH.service.AbstractRestService.prototype.configure = function(appId, appCode, useHTTPS, useCIT, opt_baseUrl) {\n  'use strict';\n  this.url_ = (this.baseUrl_ || opt_baseUrl).clone();\n  if (this.subDomain_) {\n    this.url_.addSubDomain(this.subDomain_);\n  }\n  if (this.path_) {\n    this.url_.setPath(this.path_);\n  }\n  return this;\n};\n\n\n/**\n * Returns this service's URL according to it's configuration.\n * @return {H.service.Url} the URL of this service\n */\nH.service.AbstractRestService.prototype.getUrl = function() {\n  'use strict';\n\n  return this.url_;\n};\n\n\n/**\n * This method fires request to actual rest service\n * @param {H.service.Url} url\n * @param {Function} onResult\n * @param {Function} onError\n * @return {H.service.JsonpRequestHandle}\n * @protected\n */\nH.service.AbstractRestService.prototype.restApiRequest = function(url, onResult, onError) {\n  'use strict';\n\n  if (!goog.isFunction(onResult)) {\n    throw new Error('onResult callback needed');\n  }\n\n  if (!goog.isFunction(onError)) {\n    throw new Error('onError callback needed');\n  }\n\n  return H.service.jsonp({\n    url: url,\n    callback: function(data) {\n      onResult(data);\n    },\n    errback: function(failure) {\n      onError(new Error('[' + failure + '] ' + url + ' request failed'));\n    },\n    callbackKey: this.callbackKey_\n  });\n};\n\n\n/**\n * @typedef {{\n *   subDomain: (string|undefined),\n *   path: (string|undefined),\n *   callbackKey: (string|undefined)\n * }}\n * @property {string=} subDomain\n * @property {string=} path\n * @property {string=} callbackKey\n */\nH.service.AbstractRestService.Options;\n",
		"goog.provide('H.service.Platform');\n\n\ngoog.require('H.service.Url');\n\n\n\n/**\n * The Platform class represents central class from which all other service\n * stubs are created. It also contains the shared settings to be passed to\n * the individual service stubs, for example the root URL of the platform,\n * application credentials, etc.\n *\n * @example\n * var platform = new H.service.Platform({\n *   app_id: [your app_id],       //set your app_id\n *   app_code: [your app_code],   //set your app_code\n *   useCIT: true                 //configure all services to use the 'CIT' environment\n * });\n *\n * var geocoder = plaform.createGeocodingService();\n * //Now you are ready to talk to the HERE Geocoder API\n *\n * @constructor\n * @param {H.service.Platform.Options} options\n * @publish\n * @export\n */\nH.service.Platform = function(options) {\n  'use strict';\n  var options_ = H.service.mergeOptions(H.service.defaultOptions_, options);\n\n  this.setBaseUrl(options_['baseUrl']);\n  this.setUseCIT(options_['useCIT']);\n  this.setUseHTTPS(options_['useHTTPS']);\n  this.setCredentials_(options_['app_id'], options_['app_code']);\n\n  /**\n   * Dictionary of tile services that were already created.\n   * @private\n   * @dict\n   */\n  this.tileServices_ = {};\n};\n\n\n/**\n * This method sets the credentials to use for authenticating the client\n *  with the platform\n * @param {string} app_id the app id of the client application\n * @param {string} app_code the app code of the client application\n * @private\n */\nH.service.Platform.prototype.setCredentials_ = function(app_id, app_code) {\n  'use strict';\n  this.app_id_ = app_id;\n  this.app_code_ = app_code;\n\n  this.baseUrl_.mergeQuery({\n    'app_id': app_id,\n    'app_code': app_code\n  });\n};\n\n\n/**\n * Method attempts to configure object that implements {@code H.service.IConfigurable}\n * @param {H.service.IConfigurable} configurable\n * @return {H.service.IConfigurable}\n * @export\n * @publish\n */\nH.service.Platform.prototype.configure = function(configurable) {\n  'use strict';\n  if (configurable['configure']) {\n    return configurable['configure'](this.app_id_, this.app_code_,\n        this.useHTTPS_, this.useCIT_, this.getBaseUrl());\n  }\n  throw new Error('Object is not configurable');\n};\n\n\n/**\n * This method enables or disables HTTPS communication with the platform\n * @param {boolean} useHTTPS a boolean value indicating whether to communicate\n *  with the platform via HTTPS\n * @publish\n * @export\n */\nH.service.Platform.prototype.setUseHTTPS = function(useHTTPS) {\n  'use strict';\n  this.useHTTPS_ = useHTTPS;\n  this.baseUrl_.setScheme(useHTTPS ? 'https' : 'http');\n};\n\n\n/**\n * The host of the baseUrl, needed for setUseCIT\n * @private\n * @type {string}\n */\nH.service.Platform.prototype.baseHost_;\n\n\n/**\n * This method configures whether to use the \"customer integration testing\"\n * instance of the platform.\n * @param {boolean} useCIT a boolean value indicating whether the CIT platform\n *  instance is to be used\n * @publish\n * @export\n */\nH.service.Platform.prototype.setUseCIT = function(useCIT) {\n  'use strict';\n  this.useCIT_ = useCIT;\n  this.baseUrl_.setHost((useCIT ? 'cit.' : '') + this.baseHost_);\n};\n\n\n/**\n * This method modifies the base URL to be used when creating service stubs.\n * @param {H.service.Url} baseUrl the new base URL to use\n * @publish\n * @export\n */\nH.service.Platform.prototype.setBaseUrl = function(baseUrl) {\n  'use strict';\n  this.baseHost_ = baseUrl.getHost();\n  this.baseUrl_ = baseUrl = baseUrl.clone();\n  baseUrl.mergeQuery({ 'xnlp': 'CL_JSMv3.' + H.buildInfo()['version']});\n  this.setUseCIT(this.useCIT_);\n  this.setUseHTTPS(this.useHTTPS_);\n  this.setCredentials_(this.app_id_, this.app_code_);\n};\n\n\n/**\n * This method returns the currently used base URL.\n * @publish\n * @export\n * @return {H.service.Url}\n */\nH.service.Platform.prototype.getBaseUrl = function() {\n  'use strict';\n  return this.baseUrl_;\n};\n\n\n/**\n * @publish\n * @property {string} app_id\n *           The application ID to identify the client against the platform (mandatory to provide)\n * @property {string} app_code\n *           The application code to identify the client against the platform (mandatory to provide)\n * @property {H.service.Url=} baseUrl\n *           The base URL of the platform, default is {@code http://api.here.com}\n * @property {boolean=} useCIT\n *           Indicates whether the Customer Integration Testing should be used, default is {@code false}\n * @property {boolean=} useHTTPS\n *           Indicates whether secure communication should be used, default is {@code false}\n *\n * @typedef {{\n *   app_id: ?string,\n *   app_code: ?string,\n *   useHTTPS: boolean,\n *   useCIT: boolean,\n *   baseUrl: H.service.Url\n * }}\n */\nH.service.Platform.Options;\n\n\n/**\n * This property holds the global default options\n * @dict\n * @private\n */\nH.service.defaultOptions_ = {\n  'app_id': null,\n  'app_code': null,\n\n  'useHTTPS': false,\n  'useCIT': false,\n  'baseUrl': new H.service.Url('http', 'api.here.com')\n};\n\n\n/**\n * @export\n * @param {string} key the key which identifies the options to set\n * @param {Object} value the configuration values to set\n */\nH.service.setOptions = function(key, value) {\n  H.service.defaultOptions_[key] = value;\n};\n\n\n/**\n * @export\n * @param {string} key the key which identifies the options to set\n * @return {Object} returns the configuration values\n */\nH.service.getOptions = function(key) {\n  return H.service.defaultOptions_[key];\n};\n\n\n/**\n * Merges an options overriding the provided default options.\n * @param {Object} defaultOptions the default values\n * @param {Object=} opt_options the overriding option values\n * @return {Object}\n */\nH.service.mergeOptions = function(defaultOptions, opt_options) {\n  'use strict';\n  var options = {},\n      key;\n  for (key in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(key) && !(key in options)) {\n      options[key] = defaultOptions[key];\n    }\n    if (opt_options && opt_options.hasOwnProperty(key)) {\n      options[key] = opt_options[key];\n    }\n  }\n\n  return options;\n};\n\n\n/**\n * This type encapsulates URL parameters to be sent to a HERE platform service.\n *\n * When calling HERE REST APIs additional URL parameters can be sent by providing\n * an object parameter which contain URL parameters in key-value format, where\n * keys are URL parameter names and the values are the parameter values.\n *\n * Note: The object assumes that values are in string format.\n *\n * @example\n * serviceParameters = {\n *   paramA: 'valueA',\n *   paramB: 'valueB'\n * }\n *\n * @typedef {Object}\n * @publish\n */\nH.service.ServiceParameters;\n\n\n/**\n * This type encapsulates a response object provider by a HERE platform service.\n *\n * In most cases the HERE Maps API for JavaScript will communicate to the\n * HERE REST APIs via the JSON-P protocol. In such cases the resulting JSON\n * response is parsed and provided to the callback function.\n *\n * The structure of a service response object is specific to each service.\n *\n * @typedef {Object}\n * @publish\n */\nH.service.ServiceResult;\n",
		"goog.provide('H.service.PlacesService');\n\ngoog.require('H.service.AbstractRestService');\ngoog.require('H.service.Platform');\n\n\n\n/**\n * Places service implements a low level places RestApi access.\n * Please refer to [Restful API documentation](http://developer.here.com/rest-apis/documentation/places)\n * for providing parameters and handling response objects.\n *\n * Entry point parameters are specified as objects as key:value pairs which are transformed to URL parameters.\n * Request headers can be specified along with entry point parameters.\n *\n * @example\n * var places = platform.getPlacesService();\n * places.search({\n *  'at': '52.5044,13.3909',\n *  'q': 'pizza',\n *  'Accept-Language': 'de'\n * }, function(response) {\n *  //handle response\n * }, function() {\n *  //handle network error\n * });\n *\n * @constructor\n * @param {H.service.PlacesService.Options=} opt_options\n * @extends {H.service.AbstractRestService}\n * @publish\n * @export\n * @publish\n */\nH.service.PlacesService = function(opt_options) {\n  'use strict';\n\n  var options = H.service.mergeOptions(H.service.getOptions('places'), opt_options);\n  options['callbackKey'] = 'callback';\n\n  H.util.getSuperProto(H.service.PlacesService).constructor.call(this, options);\n};\nH.lang.inherits(H.service.PlacesService, H.service.AbstractRestService);\n\n\n/**\n * List of available entry points\n * @enum {string}\n * @export\n * @publish\n */\nH.service.PlacesService.EntryPoint = {\n  'SEARCH': 'discover/search',\n  'SUGGEST': 'suggest',\n  'EXPLORE': 'discover/explore',\n  'AROUND': 'discover/around',\n  'HERE': 'discover/here',\n  'CATEGORIES': 'categories/places'\n};\n\n\n/**\n * This is generic method to query places RestAPI.\n *\n * @param {string} entryPoint can be one of available entry points {@link H.service.PlacesService.EntryPoint}\n * i.e value of H.service.PlacesService.EntryPoint.SEARCH\n * @param {Object} entryPointParams parameter map key value pairs will be transformed into the\n * url key=value parametes. For entry point parameters description please refer to places\n * restful api [documentation](http://developer.here.com/rest-apis/documentation/places)\n * documentation for available parameters for chose entry point\n * @param {Function} onResult callback which is called when result is returned\n * @param {Function} onError callback which is called when error occured (i.e request timeout)\n * @return {H.service.JsonpRequestHandle} jsonp request handle\n *\n * @example\n * var places = platform.getPlacesService(),\n *     entryPoint = H.service.PlacesService.EntryPoint;\n * places.request(entryPoint.SEARCH, { 'at': '52.5044,13.3909', 'q': 'pizza'}, function(resp) {\n *  console.log(resp);\n * }, function(resp) {\n *  console.log('ERROR: '+resp);\n * });\n *\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.request = function(entryPoint, entryPointParams, onResult, onError) {\n  'use strict';\n  entryPointParams = entryPointParams || {};\n  var url = this.getUrl()\n      .clone()\n      .addSubPath(entryPoint)\n      .mergeQuery(entryPointParams);\n  return this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * Function triggers places api 'search' entry point. Please refer to\n * [documentation](http://developer.here.com/rest-apis/documentation/places/topics_api/resource-search.html)\n * for parameter specification and response handling.\n *\n * @param {H.service.ServiceParameters} searchParams places api search entry\n * point parameters please refer to places api documentation\n * @param {Function} onResult\n * @param {Function} onError\n * @return {H.service.JsonpRequestHandle} jsonp request handle\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.search = function(searchParams, onResult, onError) {\n  'use strict';\n  return this.request(H.service.PlacesService.EntryPoint.SEARCH, searchParams,\n      onResult, onError);\n};\n\n\n/**\n * Function triggers places api 'suggestions' entry point. Please refer to\n * [documentation](http://developer.here.com/rest-apis/documentation/places/topics_api/resource-suggest.html)\n * for parameter specification and response handling.\n *\n * @param {H.service.ServiceParameters} suggestParams places api suggest entry\n * point parameters please refer to places api documentation\n * @param {Function} onResult\n * @param {Function} onError\n * @return {H.service.JsonpRequestHandle} jsonp request handle\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.suggest = function(suggestParams, onResult, onError) {\n  'use strict';\n  return this.request(H.service.PlacesService.EntryPoint.SUGGEST, suggestParams,\n      onResult, onError);\n};\n\n\n/**\n * Function triggers places api 'explore' entry point. Please refer to\n * [documentation](http://developer.here.com/rest-apis/documentation/places/topics_api/resource-explore.html)\n * for parameter specification and response handling.\n *\n * @param {H.service.ServiceParameters} exploreParams places api explore entry\n * point parameters please refer to places api documentation\n * @param {Function} onResult\n * @param {Function} onError\n * @return {H.service.JsonpRequestHandle} jsonp request handle\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.explore = function(exploreParams, onResult, onError) {\n  'use strict';\n  return this.request(H.service.PlacesService.EntryPoint.EXPLORE, exploreParams,\n      onResult, onError);\n};\n\n\n/**\n * Function triggers places api 'around' entry point. Please refer to\n * [documentation](http://developer.here.com/rest-apis/documentation/places/topics_api/resource-around.html)\n * for parameter specification and response handling.\n *\n * @param {H.service.ServiceParameters} aroundParams places api around entry\n * point parameters please refer to places api documentation\n * @param {Function} onResult\n * @param {Function} onError\n * @return {H.service.JsonpRequestHandle} jsonp request handle\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.around = function(aroundParams, onResult, onError) {\n  'use strict';\n  return this.request(H.service.PlacesService.EntryPoint.AROUND, aroundParams,\n      onResult, onError);\n};\n\n\n/**\n * Function triggers places api 'here' entry point. Please refer to\n * [documentation](http://developer.here.com/rest-apis/documentation/places/topics_api/resource-here.html)\n * for parameter specification and response handling.\n *\n * @param {H.service.ServiceParameters} hereParams places api here entry\n * point parameters please refer to places api documentation\n * @param {Function} onResult\n * @param {Function} onError\n * @return {H.service.JsonpRequestHandle} jsonp request handle\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.here = function(hereParams, onResult, onError) {\n  'use strict';\n  return this.request(H.service.PlacesService.EntryPoint.HERE, hereParams,\n      onResult, onError);\n};\n\n\n/**\n * Function triggers places api 'categories' entry point. Please refer to\n * [documentation](http://developer.here.com/rest-apis/documentation/places/topics_api/resource-place-categories.html)\n * for parameter specification and response handling.\n *\n * @param {H.service.ServiceParameters} categoriesParams places api here entry\n * point parameters please refer to places api documentation\n * @param {Function} onResult\n * @param {Function} onError\n * @return {H.service.JsonpRequestHandle} jsonp request handle\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.categories = function(categoriesParams, onResult, onError) {\n  'use strict';\n  return this.request(H.service.PlacesService.EntryPoint.CATEGORIES, categoriesParams,\n      onResult, onError);\n};\n\n\n/**\n * This method should be used to follow hyperlinks available in results returned\n * by dicovery queries.\n *\n * @example\n * var places = platform.getPlacesService(),\n *     entryPoint = H.service.PlacesService.EntryPoint;\n * places.request(entryPoint.SEARCH, { 'at': '52.5044,13.3909', 'q': 'pizza'}, function(response) {\n *    var items = response.results.items;\n *    places.follow(items[0].href, function(resp) {\n *      console.log(resp);\n *    },\n *    function(resp) {\n *      console.log('ERROR: '+resp);\n *    });\n * }, function(resp) {\n *  console.log('ERROR: '+resp);\n * });\n *\n * @param {string} hyperlink\n * @param {Function} onResult\n * @param {Function} onError\n * @param {Object=} opt_additionalParameters additional parameters to send with request\n * @return {H.service.JsonpRequestHandle} jsonp resquest handle\n * @export\n * @publish\n */\nH.service.PlacesService.prototype.follow = function(hyperlink, onResult, onError, opt_additionalParameters) {\n  'use strict';\n  var url = H.service.Url.parse(hyperlink);\n  if (opt_additionalParameters) {\n    url.mergeQuery(opt_additionalParameters);\n  }\n  return this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * @typedef {{\n *   subDomain: (string|undefined),\n *   path: (string|undefined),\n *   baseUrl: (H.service.Url|undefined)\n * }}\n *\n * @property {string=} subDomain the sub-domain of the places service relative\n *  to the platform's base URL, default is {@code 'places'}\n * @property {string=} path the path of the places service, default is\n *  {@code 'places/v1'}\n * @property {H.service.Url=} baseUrl an optional base URL if it differs\n *  from the platform's default base URL\n * @publish\n */\nH.service.PlacesService.Options;\n\n\n//Storing default options\nH.service.setOptions('places', {\n  'subDomain': 'places',\n  'path': 'places/v1'\n});\n\n\n/**\n * This method returns an implementation instance of\n * {@link H.service.PlacesService}\n * @return {H.service.PlacesService} a new places service instance\n * @export\n * @publish\n */\nH.service.Platform.prototype.getPlacesService = function() {\n  'use strict';\n  return /** @type {H.service.PlacesService} */ (this.configure(\n      new H.service.PlacesService()));\n};\n",
		"goog.provide('H.service.JsonX');\n\n\n\n/**\n * Sends a XHR request and invokes the provided callback once the request finished.\n * Must not be published, platform-API internal use only!\n * @export\n * @constructor\n * @param {!(string|H.service.Url)} url The URL of the JSON-XHR service to be called\n * @param {function(?, (string|undefined))} callback The function to be called once the request finished.\n *        It gets the JSON parse result and an optional error type as arguments. Possible error types are:\n *        <ul>\n *          <li>{@code undefined} - if no error occurred </li>\n *          <li>{@code \"abort\"} - if the request was explicit aborted {@see H.service.JsonX.prototype.abort}}</li>\n *          <li>{@code \"timeout\"} - if the request timed out {@see H.net.Xhr.Options#timeout} </li>\n *          <li>{@code \"network\"} - if a {@code NetworkError} occurred </li>\n *          <li>{@code \"parse\"} - if the response has no valid JSON format</li>\n *        </ul>\n *\n * @param {H.net.Xhr.Options=} opt_options The optional parameters for this underlaying XHR request\n */\nH.service.JsonX = function(url, callback, opt_options) {\n  'use strict';\n  var options = opt_options || {},\n      headers;\n\n  if (typeof callback !== 'function') {\n    throw new TypeError('Invalid callback');\n  }\n\n  if (typeof(url) === 'string') {\n    url = /** @type {!H.service.Url} */ (H.service.Url.parse(url, options['baseURL']));\n  } else if (!(url instanceof H.service.Url)) {\n    throw new TypeError('Invalid url');\n  }\n\n  //setup application/json as defautl value for accept header\n  options['headers'] = headers = options['headers'] || {};\n  if (!headers['accept']) {\n    headers['accept'] = 'application/json';\n  }\n\n\n  /**\n   * @private\n   * @type {function(?, (string|undefined))}\n   */\n  this.callback_ = callback;\n\n  /**\n   * @private\n   * @type {H.net.Xhr}\n   */\n  this.request_ = new H.net.Xhr(url.toString(), this.xhrCallback_.bind(this), options);\n};\n\n\n/**\n * The callback for the XHR request\n * @private\n * @param {string=} opt_responseText\n * @param {string=} opt_errorType\n */\nH.service.JsonX.prototype.xhrCallback_ = function(opt_responseText, opt_errorType) {\n  'use strict';\n  var callback = this.callback_,\n      parsedJSON;\n  if (!opt_errorType) {\n    try {\n      parsedJSON = JSON.parse(/** @type {string} */(opt_responseText));\n    } catch (e) {\n      opt_errorType = 'parse';\n    }\n  }\n  delete this.callback_;\n  delete this.request_;\n  callback(parsedJSON, opt_errorType);\n};\n\n\n/**\n * It aborts an ongoing request.\n * If the request is not already finished, the request's callback is invoked with error \"abort\"\n * @export\n */\nH.service.JsonX.prototype.abort = function() {\n  'use strict';\n  // If the request was not finished yet?\n  if (this.request_) {\n    this.request_.abort();\n  }\n};\n\n\n/**\n * @property {number=} timeout\n *           The number of milliseconds to wait before the request timed out (0 means no timeout)\n * @property {boolean=} withCredentials\n *           Indicates whether user credentials should be included with the request, defaults to {@code false}\n *           This option is ignored by IE9 because of technical limitations.\n * @property {boolean=} cors\n *           Indicates a Cross-Origin Resource Sharing request, defaults to {@code false}\n *           This flag is only necessary for IE9, where a XDomainRequest is API-internally used.\n * @property {string=} method\n *           The http request method which should be used. (i.e GET, POST...)\n * @property {Object=} data\n *           The data which will be send by the request\n *\n *           Map of request headers and their values which should\n *           be set for the current request\n * @property {string=} baseURL base url which will be used for\n *           provided url paths\n *\n * @typedef {{\n *   timeout:         (number|undefined),\n *   withCredentials: (boolean|undefined),\n *   cors:            (boolean|undefined),\n *   method:          (string|undefined),\n *   data:            (string|undefined),\n *   headers:         (Object.<string,string>|undefined),\n *   baseURL:         (string|undefined)\n * }}\n */\nH.service.JsonX.Options;\n\n",
		"goog.provide('H.service.TrafficIncidentsIcons');\n\n\n\n/**\n * This class provides marker icons for traffic incidents.\n * @constructor\n */\nH.service.TrafficIncidentsIcons = function() {\n  /**\n   * @private\n   * @dict\n   */\n  this.icons_ = {};\n};\n\n\n/**\n * Returns a marker icon for a given type of incident and a givent severity\n * @param {string} type one of 'CONGESTION', 'ROADWORKS', 'ACCIDENT' or 'OTHER\n * @param {string} severity one of 'VERYHIGH', 'HIGH' or 'BLOCKING'\n * @return {H.map.Icon}\n */\nH.service.TrafficIncidentsIcons.prototype.getIcon = function(type, severity) {\n  var key = type + severity,\n      iconMarkup,\n      color,\n      icon,\n      iconOptions;\n  if (!(icon = this.icons_[key])) {\n    iconOptions = {\n      'size': { 'w': 26, 'h': 32 },\n      'anchor': { 'x': 13, 'y': 30 }\n    };\n\n    if (type !== 'CLOSURE') {\n      iconMarkup = H.service.TrafficIncidentsIcons.MARKER_;\n      switch (type) {\n        case 'CONGESTION':\n          iconMarkup = iconMarkup.replace('{{icon}}', H.service.TrafficIncidentsIcons.CONGESTION_);\n          break;\n        case 'ROADWORKS':\n          iconMarkup = iconMarkup.replace('{{icon}}', H.service.TrafficIncidentsIcons.ROADWORKS_);\n          break;\n        case 'ACCIDENT':\n          iconMarkup = iconMarkup.replace('{{icon}}', H.service.TrafficIncidentsIcons.ACCIDENT_);\n          break;\n        default:\n          iconMarkup = iconMarkup.replace('{{icon}}', H.service.TrafficIncidentsIcons.OTHER_);\n          break;\n      }\n    } else {\n      iconMarkup = H.service.TrafficIncidentsIcons.CLOSURE_;\n      iconOptions['anchor']['y'] = 16;\n    }\n\n    color = H.service.TrafficIncidentsIcons.colors_[severity] ||\n            H.service.TrafficIncidentsIcons.colors_['BLOCKING'];\n    iconMarkup = iconMarkup.replace('{{color}}', color);\n\n    this.icons_[key] = icon = new H.map.Icon(iconMarkup,\n        /** @type {H.map.Icon.Options} */ (iconOptions));\n  }\n  return icon;\n};\n\n\n/**\n * @private\n * @dict\n */\nH.service.TrafficIncidentsIcons.colors_ = {\n  // listed in order of severity\n  'BLOCKING': '#323232',\n  'VERYHIGH': '#d5232f',\n  'HIGH': '#ffa100'\n};\n\n\n/**\n * @private\n * @type {string}\n */\nH.service.TrafficIncidentsIcons.CONGESTION_ =\n    '<path d=\"m 18,15 0,0 c 0,-0.1 0,-0.2 0,-0.4 l 0,-0.2 c 0,-0.1 0,-0.2 0,-0.4 0,0 0,0 0,0 0.6,0 1.1,' +\n    '-0.4 1.1,-1 0,-0.5 -0.5,-1 -1,-1 -0.7,0 -1.1,0.5 -1.1,1 -0.1,0 -0.3,-0.1 -0.4,-0.1 l -0.6,0 -0.3,-' +\n    '0.5 C 15.2,11.6 14.3,11 13.3,11 L 18,11 17.2,9.6 C 17,9.3 16.7,9 16.3,9 L 12.8,9 C 12.4,9 12,9.3 1' +\n    '1.8,9.6 L 11.1,11 9.8,11 C 9.7,11 9.6,11 9.5,11 9.2,11 9,10.9 9,10.6 L 9,10.4 C 9,10.2 9.2,9.9 9.5' +\n    ',9.9 l 1.2,0 0.6,-1.04 c 0.3,-0.5 0.9,-0.9 1.5,-0.9 l 3.5,0 c 0.6,0 1.2,0.4 1.5,0.9 l 0.6,1.04 1.2' +\n    ',0 c 0.2,0 0.4,0.3 0.4,0.5 l 0,0.2 c 0,0.3 -0.2,0.5 -0.4,0.5 l -0.1,0 c 0.3,0.3 0.5,0.7 0.5,1.1 l ' +\n    '0,3.4 c 0,0.2 -0.2,0.4 -0.4,0.4 l -1.1,0 C 18.3,16 18,15.8 18,15.6 L 18,15 z M 8,18.1 c 0.6,0 1.1,' +\n    '-0.5 1.1,-1.1 0,-0.5 -0.5,-1 -1.1,-1 -0.6,0 -1.1,0.5 -1.1,1 0,0.6 0.5,1.1 1.1,1.1 m 7,0 c 0.6,0 1.' +\n    '1,-0.5 1.1,-1.1 0,-0.5 -0.5,-1 -1.1,-1 -0.5,0 -1,0.5 -1,1 0,0.6 0.5,1.1 1,1.1 M 14.2,13.6 C 14,13.' +\n    '3 13.7,13 13.3,13 L 9.8,13 C 9.4,13 9,13.3 8.8,13.6 L 8.1,15 15,15 14.2,13.6 z m -8.2,1 0,-0.2 c 0' +\n    ',-0.2 0.2,-0.5 0.5,-0.5 l 1.1,0 0.7,-1 C 8.6,12.4 9.2,12 9.8,12 l 3.5,0 c 0.6,0 1.2,0.4 1.5,0.9 l ' +\n    '0.6,1 1.2,0 c 0.2,0 0.4,0.3 0.4,0.5 l 0,0.2 c 0,0.3 -0.2,0.5 -0.4,0.5 l -0.1,0 c 0.3,0.3 0.5,0.7 0' +\n    '.5,1.1 l 0,3.4 c 0,0.2 -0.2,0.4 -0.4,0.4 l -1.1,0 C 15.3,20 15,19.8 15,19.6 L 15,19 8,19 8,19.6 C ' +\n    '8,19.8 7.8,20 7.5,20 l -1,0 C 6.2,20 6,19.8 6,19.6 l 0,-3.4 c 0,-0.4 0.2,-0.8 0.6,-1.1 l -0.1,0 C ' +\n    '6.2,15.1 6,14.9 6,14.6\" fill=\"#ffffff\" />';\n\n\n/**\n * @private\n * @type {string}\n */\nH.service.TrafficIncidentsIcons.ROADWORKS_ =\n    '<path d=\"m 9.24,13.2 -3.7,6.8 1.3,0 2.8,-5.1 1.36,1.5 0,3.6 1.1,0 0,-4 -1.4,-1.6 -1.46,-1.2 z M 14.2,' +\n    '9.5 c 0.7,0 1.3,-0.5 1.3,-1.21 0,-0.7 -0.6,-1.2 -1.3,-1.2 -0.7,0 -1.2,0.5 -1.2,1.2 0,0.71 0.5,1.21 1.' +\n    '2,1.21 m -4.46,0.5 1.06,0 -0.96,2.1 -1,-0.8 0.9,-1.3 z m 2.56,4 -1,-0.7 1,-1.9 0,2.6 z m 6.9,1.7 c -0' +\n    '.4,-0.5 -1.5,-1.1 -2.3,0 -0.2,0.3 -0.6,0.7 -0.9,1.2 l -2.7,-2.1 0,-5 -0.8,-0.7 -3.26,0 -1.5,2.3 7.86,' +\n    '6 C 14.7,18.6 13.8,20 13.8,20 l 6,0 1.5,-1.6 c 0,0 -1.7,-2.2 -2.1,-2.7\" fill=\"#ffffff\" />';\n\n\n/**\n * @private\n * @type {string}\n */\nH.service.TrafficIncidentsIcons.ACCIDENT_ =\n    '<path d=\"m 10.2,15.9 c 0.4,-0.5 1,-0.5 1.4,0 0.5,0.4 0.5,1 0,1.4 -0.4,0.4 -1,0.4 -1.4,0 -0.45,-0.4 -' +\n    '0.45,-1 0,-1.4 m 4.9,-5 c 0.4,-0.4 1.1,-0.4 1.5,0 0.4,0.4 0.4,1.1 0,1.5 -0.4,0.4 -1.1,0.4 -1.5,0 -0.' +\n    '4,-0.4 -0.4,-1.1 0,-1.5 m 2.6,3.8 c 0.1,0.3 0,0.7 -0.3,1 l -1.9,1 c 0,0 0,0.8 0,1.1 0,0.3 0,0.2 -0.1' +\n    ',0.3 -0.1,0.1 -0.3,0.2 -0.5,0.2 l -2.6,-0.3 4.9,-4.9 0.5,1.6 z m -6.5,5 0.1,0.2 c 0.2,0.1 0.5,0.1 0.' +\n    '7,0 l 0.8,-0.9 1.8,0.1 c 1.1,0 1.4,0 1.7,-0.6 l 0.1,-1.3 1.8,-0.8 c 0.4,-0.4 0.6,-1.1 0.4,-1.7 l -0.' +\n    '3,-1.1 0.8,-0.8 c 0.2,-0.2 0.2,-0.5 0,-0.7 L 19,12 c -0.2,-0.2 -0.5,-0.2 -0.7,0 l -0.1,0.1 c 0.1,-0.' +\n    '5 -0.1,-0.9 -0.4,-1.3 L 15.5,8.44 C 15.3,8.26 15,8.26 14.8,8.44 l -0.7,0.74 c -0.2,0.19 -0.2,0.49 0,' +\n    '0.68 l 0.3,0.34 -4.92,5 -0.36,-0.4 C 8.93,14.6 8.63,14.6 8.45,14.8 L 7.7,15.6 c -0.18,0.1 -0.18,0.4 ' +\n    '0,0.6 l 2.4,2.4 c 0.3,0.3 0.7,0.4 1.2,0.4 l -0.1,0.1 c -0.2,0.2 -0.2,0.5 0,0.7 m 5.6,-0.8 3.9,0 1.6,' +\n    '-2 -5.5,2 z m -8.08,0 -3.28,-1.8 0.9,1.8 2.38,0 z\" fill=\"#ffffff\" />';\n\n\n/**\n * @private\n * @type {string}\n */\nH.service.TrafficIncidentsIcons.OTHER_ =\n    '<path d=\"m 12.9,15.1 c 0.6,0 1.1,-0.5 1.1,-1 l 0.4,-5.9 c 0,-0.6 -0.6,-1.04 -1.5,-1.04 -0.8,0 -1.4,0.4' +\n    '4 -1.4,1.04 l 0.3,5.9 c 0,0.5 0.6,1 1.1,1 m 0,1.3 c -0.7,0 -1.3,0.6 -1.3,1.3 0,0.8 0.6,1.4 1.3,1.4 0.8' +\n    ',0 1.4,-0.6 1.4,-1.4 0,-0.7 -0.6,-1.3 -1.4,-1.3\" fill=\"#ffffff\" />';\n\n\n/**\n * @private\n * @type {string}\n */\nH.service.TrafficIncidentsIcons.MARKER_ =\n    '<svg width=\"26\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m 16.8,29.4 c 0,-1.1 -1.8,-2 -4' +\n    ',-2 -2.2,0 -4.01,0.9 -4.01,2 0,1.1 1.81,2 4.01,2 2.2,0 4,-0.9 4,-2\" style=\"fill:#878787\"/><path d=\"m 24' +\n    '.1,17.8 c 1.6,-1.6 1.6,-3.8 0,-5.7 L 15.8,1.9 C 15,0.998 14,0.498 12.9,0.498 11.8,0.498 10.7,1.1 10,1.9' +\n    ' L 1.7,12.1 c -1.6,1.9 -1.6,4.1 0,5.7 L 12.9,29 24.1,17.8 z\" stroke=\"#fff\" stroke-width=\"1\" ' +\n    'fill=\"{{color}}\" />{{icon}}</svg>';\n\n\n/**\n * @private\n * @type {string}\n */\nH.service.TrafficIncidentsIcons.CLOSURE_ =\n    '<svg width=\"26\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"13\" cy=\"15\" r=\"11\" ' +\n    'fill=\"{{color}}\" stroke=\"#ffffff\" stroke-width=\"1\"/><rect x=\"6\" y=\"13\" width=\"14\" height=\"5\" ' +\n    'fill=\"#ffffff\" /></svg>';\n",
		"goog.provide('H.service.util');\n\n\n/**\n * String-hash function ported from Java\n * @param {string} str\n * @return {number}\n */\nH.service.util.hash = function(str) {\n  'use strict';\n  var hash = 0,\n      i,\n      chr,\n      len = str.length;\n\n  if (len === 0) {\n    return hash;\n  }\n\n  for (i = 0; i < len; i++) {\n    chr = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n\n  return hash;\n};\n\n\n/**\n * Global object\n */\nH.service.util.global = Function('return this')();\n",
		"goog.provide('H.service.TrafficIncidentsProvider');\n\ngoog.require('H.service.TrafficIncidentsIcons');\ngoog.require('H.service.TrafficIncidentsProvider_jsdoc');\ngoog.require('H.service.util');\n\n\n\n/**\n * This class represents traffic incidents provider which requests traffic incidents data\n * from platform traffic incidents service and converts it to map objects.\n * @extends {H.map.provider.MarkerTileProvider}\n * @constructor\n *\n * @param {H.service.TrafficIncidentsService} service traffic incidents service that serves incidents data\n * @param {number=} opt_refreshTime argument indicates timeframe when provider tiles should be updated (in ms)\n *      defaults to {@code 3} minutes\n * @param {H.service.ServiceParameters=} opt_additionalParameters an additional set of URL parameters\n *\n * @export\n * @publish\n */\nH.service.TrafficIncidentsProvider = function(service, opt_refreshTime, opt_additionalParameters) {\n  'use strict';\n  var that = this,\n      params = opt_additionalParameters ? opt_additionalParameters : {\n        'criticality': 'major,critical'\n      };\n\n  if (!(service instanceof H.service.TrafficIncidentsService)) {\n    throw new Error('IllegalArgument: service');\n  }\n\n  this.requestData_ = H.lang.bind(this.requestData_, this);\n\n  H.map.provider.MarkerTileProvider.call(this, {\n    'max': 20,\n    'min': 8,\n    'requestData': this.requestData_\n  });\n\n  /**\n   * @private\n   * @type {H.service.TrafficIncidentsIcons}\n   */\n  this.icons_ = new H.service.TrafficIncidentsIcons();\n\n  /**\n   * @private\n   * @type {H.service.TrafficIncidentsService}\n   */\n  this.service_ = service;\n\n  /**\n   * @private\n   * @type {Object.<string, string>}\n   */\n  this.params_ = params;\n\n  this.reload = H.lang.bind(this.reload, this);\n  this.refreshHandle_ = setInterval(this.reload, opt_refreshTime || 180000);\n};\nH.lang.inherits(H.service.TrafficIncidentsProvider, H.map.provider.MarkerTileProvider);\n\n\n/**\n * @private\n * @type {Object}\n */\nH.service.TrafficIncidentsProvider.prototype.criticalityDict_ = {\n  'minor': 'HIGH',\n  'low impact': 'HIGH',\n  'major': 'VERYHIGH',\n  'critical': 'BLOCKING'\n};\n\n\n/**\n * Implementation of H.map.provider.MarkerTileProvider requestData function\n * @private\n * @param {number} x x tile coordinate\n * @param {number} y y tile coordinate\n * @param {number} z zoom level\n * @param {function (Array.<H.map.AbstractMarker>)} onSuccess\n * @param {function()} onError\n * @return {H.util.ICancelable}\n */\nH.service.TrafficIncidentsProvider.prototype.requestData_ = function(x, y, z, onSuccess, onError) {\n  'use strict';\n  var that = this,\n      criticalityDict = this.criticalityDict_,\n      icons = this.icons_,\n      req;\n\n  req = this.service_.requestIncidentsByTile(x, y, z, function(result) {\n    var data = [],\n        trafficItem = 'TRAFFIC_ITEM',\n        items = result[trafficItem + 'S'],\n        item,\n        location,\n        typeDesc,\n        marker,\n        icon,\n        i;\n\n    if (items) {\n      items = items[trafficItem];\n      i = items.length;\n      while (i--) {\n        item = items[i];\n\n        typeDesc = item[trafficItem + '_TYPE_DESC'];\n        switch (typeDesc) {\n          case 'ACCIDENT':\n          // expected switch fall-through\n          case 'CONGESTION':\n            icon = typeDesc;\n            break;\n          case 'CONSTRUCTION':\n            icon = 'ROADWORKS';\n            break;\n          default:\n            icon = 'OTHER';\n        }\n        icon = icons.getIcon(icon,\n            criticalityDict[item['CRITICALITY']['DESCRIPTION']]);\n\n        location = item['LOCATION']['GEOLOC']['ORIGIN'];\n        marker = new H.map.Marker(/** @type {H.geo.IPoint} */({\n          'lat': location['LATITUDE'],\n          'lng': location['LONGITUDE']\n        }), /** @type {H.map.Marker.Options} */ ({\n          'provider': that,\n          'icon': icon\n        }));\n        marker.setData(item);\n        data.push(marker);\n      }\n    }\n    onSuccess(data);\n\n  }, onError, this.params_);\n\n  return /** @type {H.util.ICancelable} */ (req);\n};\n\n\n/**\n * Disposes of this map tile provider instance\n */\nH.service.TrafficIncidentsProvider.prototype.dispose = function() {\n  'use strict';\n  H.map.provider.MarkerTileProvider.prototype.dispose.call(this);\n  clearInterval(this.refreshHandle_);\n};\n",
		"goog.provide('H.service.MapTileCopyrights');\n\n\n\n/**\n * This class represents the copyrights for a map tile service. A tile\n * provider can query for the copyrights in a given map view (zoom level and\n *   bounding rectangle) for the correct attribution string.\n *\n * @constructor\n */\nH.service.MapTileCopyrights = function() {\n  'use strict';\n  this.types_ = {\n    'hybrid' : this.satellite_,\n    'satellite' : this.satellite_,\n    'terrain' : this.normal_,\n    'normal' : this.normal_\n  };\n};\n\n\n/**\n * This method allows to query the copyright string for a given map type,\n * zoom level and bounding rectangle. Copyright information is concatenated\n * and returned as a string.\n * @param {string} type the map type\n * @param {number} level the zoom level\n * @param {H.geo.Rect} rect the bounding rectangle of the area for which to\n *  retrieve the attribution string\n * @return {Array.<Object>}\n */\nH.service.MapTileCopyrights.prototype.query = function(type, level, rect) {\n  'use strict';\n  var copyrights = this.types_[type],\n      i,\n      l = copyrights ? copyrights.length : 0,\n      list = [];\n  for (i = 0; i < l; i++) {\n    if (copyrights[i].intersects(level, rect)) {\n      list.push(copyrights[i]);\n    }\n  }\n  return list;\n};\n\n\n\n/**\n * This class represents an internal helper class to query copyrights easily.\n * @param {Object} def a copyright definition as received by the map tile service\n * @constructor\n * @private\n */\nH.service.MapTileCopyright_ = function(def) {\n  'use strict';\n  var i, l,\n      boxes = def['boxes'],\n      box,\n      rect;\n\n  this.alt = def['alt'];\n  this.label = def['label'];\n  this.min = def['minLevel'];\n  this.max = def['maxLevel'];\n  this.rects = [];\n\n  if (boxes && (l = boxes.length)) {\n    box = boxes[0];\n    rect = new H.geo.Rect(box[0], box[1], box[2], box[3]);\n\n    this.rects.push(rect);\n    this.outer = new H.geo.Rect(box[0], box[1], box[2], box[3]);\n\n    for (i = 1; i < l; i++) {\n      box = boxes[i];\n      rect = new H.geo.Rect(box[0], box[1], box[2], box[3]);\n      this.rects.push(rect);\n      this.outer.mergeRect(rect, false, this.outer);\n    }\n  }\n};\n\n\n/**\n * This method checks if a copyright is valid for the given level and bounding\n * rectangle\n * @param {number} level the zoom level\n * @param {H.geo.Rect} rect the rectangular bounding area\n * @return {boolean} true if this copyright is active, false otherwise\n */\nH.service.MapTileCopyright_.prototype.intersects = function(level, rect) {\n  'use strict';\n  var i;\n  if (level >= this.min && level <= this.max) {\n    //if we are in the correct zoom level...\n    if ((i = this.rects.length) && this.outer) {\n      //AND we do have bounding rectangles\n      if (this.outer.intersects(rect)) {\n        //AND the rectangle intersects the outer bounding rect\n        //we need to iterate over the individual rectangles\n        while (i--) {\n          if (this.rects[i].intersects(rect)) {\n            return true;\n          }\n        }\n      }\n    } else {\n      //if we do not have any rects the copyright is valid everywhere\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Copyrights for Mexico\n * @type {H.service.MapTileCopyright_}\n * @private\n */\nH.service.MapTileCopyrights.inegi_ = new H.service.MapTileCopyright_({\n  'label': 'INEGI',\n  'minLevel': 9,\n  'maxLevel': 20,\n  'boxes': [\n    [14.4031, -94.2111, 16, -91],\n    [32, -117.1817, 32.7325, -113.1649],\n    [17.4060, -91, 18, -88.7349],\n    [28, -101, 29.4004, -99.9666],\n    [28, -103, 30, -101],\n    [24, -113, 26, -97],\n    [26, -99, 26.4261, -97.5566],\n    [15.5643, -97.9326, 16, -95.2581],\n    [16, -91, 16.9491, -90.3434],\n    [18, -107, 22, -95],\n    [16, -103, 18, -91],\n    [18, -95, 20, -87],\n    [28, -119, 32, -103],\n    [22, -111, 24, -97],\n    [18, -115, 20, -109],\n    [26, -117, 28, -99]\n  ]\n});\n\n\n/**\n * Copyrights for china\n * @type {H.service.MapTileCopyright_}\n * @private\n */\nH.service.MapTileCopyrights.navinfo_ = new H.service.MapTileCopyright_({\n  'label': 'NavInfo',\n  'minLevel': 6,\n  'maxLevel': 20,\n  'boxes': [\n    [52.7754, 119.9835, 53.5719, 126.1939],\n    [35.4169, 77.1449, 35.7754, 78.5576],\n    [17.7754, 108.5576, 18.7754, 110.5576],\n    [47.9285, 115.4373, 48.2230, 115.5576],\n    [30.7754, 78.5576, 36.7754, 79.5576],\n    [49.7754, 118.4027, 50.9802, 119.5576],\n    [39.7754, 120.5576, 40.7754, 126.5576],\n    [28.7754, 82.5576, 29.7754, 98.5576],\n    [35.7754, 120.5576, 38.7754, 121.5576],\n    [40.7754, 120.5576, 42.7754, 128.5576],\n    [42.7754, 115.5576, 49.7754, 131.5576],\n    [45.7754, 82.3630, 46.2212, 82.5576],\n    [49.7754, 127.5576, 50.7754, 128.5576],\n    [28.2004, 96.2409, 28.7754, 97.5576],\n    [18.7754, 108.5576, 20.7754, 111.5576],\n    [28.6334, 93.5576, 28.7754, 94.0161],\n    [25.1912, 119.5576, 25.7754, 119.9120],\n    [24.7754, 117.5576, 25.7754, 119.5576],\n    [38.7754, 120.5576, 39.7754, 124.5576],\n    [20.7754, 99.5576, 21.7754, 102.5576],\n    [32.7754, 120.5576, 33.5701, 120.8986],\n    [41.7754, 128.5576, 42.7754, 131.5576],\n    [27.6769, 91.7865, 27.7754, 92.1101],\n    [36.7754, 73.5576, 40.7754, 79.5576],\n    [20.7754, 106.5576, 22.7754, 113.5576],\n    [27.7754, 117.5576, 29.7754, 122.5576],\n    [45.7754, 82.5576, 47.7754, 91.5576],\n    [48.7754, 86.6922, 49.2494, 88.1056],\n    [41.7754, 79.2585, 41.8535, 79.5576],\n    [42.7754, 111.5576, 45.7754, 115.5576],\n    [21.7754, 113.5576, 22.7754, 116.5576],\n    [32.2241, 78.3965, 32.6363, 78.5576],\n    [42.7754, 94.5576, 44.7754, 96.5576],\n    [29.7754, 120.5576, 32.7754, 122.5576],\n    [26.7754, 117.5576, 27.7754, 121.5576],\n    [24.5027, 118.5576, 24.7754, 118.8161],\n    [29.7754, 122.5576, 31.7754, 123.5576],\n    [40.7754, 76.5576, 41.7754, 79.5576],\n    [29.7754, 79.5576, 42.7754, 120.5576],\n    [49.7754, 119.5576, 52.7754, 127.5576],\n    [21.7754, 98.5576, 22.7754, 104.5576],\n    [47.7754, 85.4858, 48.7754, 90.1507],\n    [44.8404, 131.5576, 48.4334, 134.8631],\n    [27.7754, 84.5576, 28.7754, 93.5576],\n    [25.7754, 117.5576, 26.7754, 120.5576],\n    [36.7754, 121.5576, 37.7754, 123.5576],\n    [27.2614, 88.7706, 27.7754, 89.2653],\n    [23.7754, 97.5576, 28.7754, 98.5576],\n    [35.7754, 75.5576, 36.7754, 78.5576],\n    [23.7754, 117.5576, 24.7754, 118.5576],\n    [22.7754, 98.5576, 29.7754, 117.5576],\n    [42.7754, 79.5576, 45.7754, 94.5576]\n  ]\n});\n\n\n/**\n * Hardcoded bounding box for map imagery. (see user story MAPSJS-389)\n * structure deliberately replicates server response\n * @type {Array.<H.service.MapTileCopyright_>}\n * @private\n */\nH.service.MapTileCopyrights.prototype.normal_ = [\n  H.service.MapTileCopyrights.inegi_,\n  H.service.MapTileCopyrights.navinfo_\n];\n\n\n/**\n * Hardcoded bounding box for satellite imagery. (see user story MAPSJS-389)\n * structure deliberately replicates server response\n * @type {Array.<H.service.MapTileCopyright_>}\n * @private\n */\nH.service.MapTileCopyrights.prototype.satellite_ = [\n  new H.service.MapTileCopyright_({\n    'label': 'DigitalGlobe',\n    'minLevel': 0,\n    'maxLevel': 20,\n    'boxes': [\n      [90, -180, -90, 180]\n    ]\n  }),\n  H.service.MapTileCopyrights.inegi_,\n  H.service.MapTileCopyrights.navinfo_\n];\n",
		"goog.provide('H.service.MapTileProvider');\n\ngoog.require('H.service.MapTileCopyrights');\ngoog.require('H.service.util');\n\n\n\n/**\n * This class represents a map tile provider which requests map tiles from\n * a platform map tile service.\n *\n * @extends {H.map.provider.ImageTileProvider}\n * @constructor\n *\n * @param {H.service.MapTileService} service the map tile service which serves the tiles\n * @param {string} tileType the map tile type\n * @param {string} scheme the map scheme\n * @param {number} tileSize the map tile size\n * @param {string} format the map tile image format\n * @param {H.service.ServiceParameters=} opt_additionalParameters an additional set of URL parameters\n */\nH.service.MapTileProvider = function(service, tileType, scheme, tileSize, format, opt_additionalParameters) {\n  'use strict';\n  var that = this,\n      params = opt_additionalParameters ? opt_additionalParameters : {},\n      tileBaseUrl = service.getUrl()\n        .clone()\n        .addSubPath(tileType + '/' + service.getVersion() + '/' + scheme)\n        .mergeQuery(params),\n      shards = service.getShards();\n\n  H.map.provider.ImageTileProvider.call(this, {\n    'tileSize': tileSize,\n    'max': (tileSize == 512) ? 19 : 20,\n    'min': (tileSize == 512) ? 2 : 0,\n    'getURL': function(x, y, z) {\n      var tileUrl = that['tileBaseUrl_'].clone();\n      if (shards) {\n        tileUrl.addSubDomain(shards[(z + y + x) % shards.length]);\n      }\n      tileUrl.addSubPath(z + '/' + x + '/' + y + '/' + tileSize + '/' + format);\n      return tileUrl.toString();\n    }\n  });\n\n  /**\n   * @private\n   * @type {H.servive.MapTileService}\n   */\n  this['service_'] = service;\n\n  /**\n   * @private\n   * @type {H.service.Url}\n   */\n  this['tileBaseUrl_'] = tileBaseUrl;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this['tileType_'] = tileType;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this['scheme_'] = scheme;\n\n  /**\n   * @private\n   * @type {Object.<string, string>}\n   */\n  this['params_'] = params;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  // TODO renamed copyrightType_ -> _copyrightType_ due to name clash with parent class\n  //    it must be solved in generic way, otherwise code becomes fragile MAPSJS-69\n  this['copyrightKey_'] = scheme.split('.')[0];\n\n  this['updateAndReload_'] = H.lang.bind(this['updateAndReload_'], this);\n\n  service.addEventListener('versionupdate', this['updateAndReload_']);\n};\nH.lang.inherits(H.service.MapTileProvider, H.map.provider.ImageTileProvider);\n\n\n/**\n * Creates a unique string for the provider.\n *\n * @param {H.service.MapTileService} service the map tile service which serves the tiles\n * @param {string} tileType the map tile type\n * @param {string} scheme the map scheme\n * @param {number} tileSize the map tile size\n * @param {string} format the map tile image format\n * @param {H.service.ServiceParameters=} opt_additionalParameters an additional set of URL parameters\n * @return {number} the unique string for this provider\n */\nH.service.MapTileProvider.hash = function(service, tileType, scheme, tileSize, format, opt_additionalParameters) {\n  return H.service.util.hash(\n      service.getUrl().clone()\n                     .addSubPath(tileType + '/' + service.getVersion() + '/' + scheme + '/' + tileSize + '/' + format)\n                     .mergeQuery(opt_additionalParameters ? opt_additionalParameters : {})\n                     .toString());\n};\n\n\n/**\n * Disposes of this map tile provider instance\n */\nH.service.MapTileProvider.prototype.disposeInternal = function() {\n  'use strict';\n  H.map.provider.ImageTileProvider.prototype.disposeInternal.call(this);\n  this['service_'].removeEventListener('versionupdate', this['updateAndReload_']);\n};\n\n\n/**\n * @override\n */\nH.service.MapTileProvider.prototype.getCopyrights = function(bounds, level) {\n  'use strict';\n  return this['service_'].getCopyrights().query(this['copyrightKey_'], level, bounds);\n};\n\n\n/**\n * Callback is invoked when tile version information arrives from the tile server.\n */\nH.service.MapTileProvider.prototype['updateAndReload_'] = function() {\n  'use strict';\n  var service = this['service_'];\n  this['tileBaseUrl_'] = service.getUrl()\n      .clone()\n      .addSubPath(this['tileType_'] + '/' + service.getVersion() + '/' + this['scheme_'])\n      .mergeQuery(this['params_']);\n  this.reload(false);\n};\n",
		"goog.provide('H.service.MapTileService');\n\n\ngoog.require('H.service.IConfigurable');\ngoog.require('H.service.MapTileProvider');\ngoog.require('H.service.Platform');\ngoog.require('H.service.jsonp');\ngoog.require('H.service.util');\n\n\n\n/**\n * This class encapsulates a map tile end point of the\n * [HERE Map Tile API](http://developer.here.com/rest-apis/documentation/enterprise-map-tile).\n *\n * An instance of this class can be retrieved by calling the factory method on\n * a platform instance. {@link H.service.Platform#getMapTileService}.\n *\n * @example\n * var platform = new H.service.Platform(),\n *     maptiler = platform.getMapTileService({type: 'aerial'}),\n *     tileLayer = maptiler.createTileLayer('maptile', 'hybrid.day', 256, 'jpg');\n * map.setBaseLayer(tileLayer);\n *\n * @extends {H.util.EventTarget}\n * @implements {H.service.IConfigurable}\n * @constructor\n * @param {H.service.MapTileService.Options=} opt_options\n * @publish\n * @export\n */\nH.service.MapTileService = function(opt_options) {\n  'use strict';\n  var options = H.service.mergeOptions(H.service.getOptions('maptile'), opt_options);\n\n  H.util.EventTarget.call(this);\n\n  this.baseUrl_ = options['baseUrl'];\n  this.path_ = options['path'];\n  this.subDomain_ = options['subDomain'];\n  this.shards_ = options['shards'];\n  this.ignoreTypes_ = !!options['ignoreTypes'];\n  this.type_ = this.ignoreTypes_ ? null : options['type'];\n  this.version_ = options['version'];\n\n  this.copyrights_ = new H.service.MapTileCopyrights();\n\n  /**\n   * Stores all providers created by this map tile service\n   * @private\n   * @dict\n   */\n  this.providers_ = {};\n};\nH.lang.inherits(H.service.MapTileService, H.util.EventTarget);\n\n\n/**\n * @param {H.service.MapTileService.Options=} opt_options\n * @return {number}\n */\nH.service.MapTileService.hash = function(opt_options) {\n  var options = H.service.mergeOptions(H.service.getOptions('maptile'),\n      opt_options),\n      str = '';\n\n  str += options['ignoreTypes'] ? '' : options['type'];\n  str += options['path'];\n  str += options['subDomain'];\n  str += options['baseUrl'];\n  str += options['shards'] ? options['shards'].join('') : '';\n\n  return H.service.util.hash(str);\n};\n\n\n/**\n * Transforms an info list from the map tile service into a JS-style object\n * @param {Object} infoData\n * @param {string} what\n */\nH.service.MapTileService.listToObject = function(infoData, what) {\n  'use strict';\n  var result = {},\n      list = infoData[what + 's'][what],\n      i = list.length;\n  while (i--) {\n    result[list[i].id] = list[i];\n  }\n  infoData[what + 's'] = result;\n};\n\n\n/**\n * @override\n * @export\n */\nH.service.MapTileService.prototype.configure = function(appId, appCode,\n    useHTTPS, useCIT, opt_baseUrl) {\n  'use strict';\n\n  this.url_ = (this.baseUrl_ || opt_baseUrl).clone();\n  this.subDomain_ && this.url_.addSubDomain(this.subDomain_);\n  this.type_ && this.url_.addSubDomain(this.type_);\n  this.path_ && this.url_.setPath(this.path_);\n\n\n  if (this.version_ === 'newest') {\n    this.fetchInfo();\n  }\n  return this;\n};\n\n\n/**\n * This method returns the configured service URL.\n * @return {H.service.Url}\n */\nH.service.MapTileService.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * This method returns the sharding sub domains for this service.\n * @return {(Array.<string>|undefined)}\n */\nH.service.MapTileService.prototype.getShards = function() {\n  return this.shards_;\n};\n\n\n/**\n * This method returns the map tile type provided by this service.\n * @return {string} the map tile type\n * @publish\n * @export\n */\nH.service.MapTileService.prototype.getType = function() {\n  'use strict';\n  return this.type_;\n};\n\n\n/**\n * This method returns the map tile service's newest version hash.\n * @return {string} meta information for this map tile service\n * @publish\n * @export\n */\nH.service.MapTileService.prototype.getVersion = function() {\n  'use strict';\n  return this.version_;\n};\n\n\n/**\n * This method sets this map tile service's version string\n * @param {string} version\n * @private\n */\nH.service.MapTileService.prototype.setVersion_ = function(version) {\n  'use strict';\n  this.version_ = version;\n};\n\n\n/**\n * Returns this MapTileService's copyrights collection.\n * @return {H.service.MapTileCopyrights}\n * @export\n */\nH.service.MapTileService.prototype.getCopyrights = function() {\n  'use strict';\n  return this.copyrights_;\n};\n\n\n/**\n * This mathod updates this map tile service's meta information.\n * @param {H.service.ServiceResult} info\n */\nH.service.MapTileService.prototype.updateInfo = function(info) {\n  'use strict';\n  var response = info.response,\n      key,\n      lang,\n      listToObject = H.service.MapTileService.listToObject;\n\n  listToObject(response, 'map');\n  listToObject(response, 'scheme');\n  listToObject(response, 'tiletype');\n  listToObject(response, 'format');\n  listToObject(response, 'resolution');\n  listToObject(response, 'language');\n\n  if (this.version_ === 'newest' && this.type_ !== 'traffic') {\n    for (key in response['maps']) {\n      if (response['maps'][key]['hash'] && response['maps'][key]['newest']) {\n        this.setVersion_(response['maps'][key]['hash']);\n\n        this.dispatchEvent('versionupdate');\n      }\n    }\n  }\n\n  this.info_ = response;\n  this.dispatchEvent('infoupdate');\n};\n\n\n/**\n * This method retrieves meta-information from the map tile backend\n */\nH.service.MapTileService.prototype.fetchInfo = function() {\n  'use strict';\n  var that = this,\n      versionUrl = this.getUrl()\n        .clone()\n        .addSubPath('info')\n        .mergeQuery({'output': 'json'});\n\n  //if we have shards, then we pick the first one\n  this.shards_ && versionUrl.addSubDomain(this.shards_[0]);\n\n  H.service.jsonp({\n    url: versionUrl,\n    callbackKey: 'callback_func',\n    callback: function(data) {\n      //FIX THE JSON-P RESPONSE\n      //Maptiler currently sends extraneous commas at the end of arrays\n      that.updateInfo(/** @type {Object} */(JSON.parse(data.replace(/,\\s?\\]/g, ']'))));\n    },\n    errback: function(failure) {\n      throw new Error('[' + failure + ']: Could not fetch meta-info from map tile service @' + versionUrl.toString());\n    },\n    preventCallbackEncoding: true\n  });\n};\n\n\n/**\n * This method returns the map tile service's meta information. The method will\n * return an object once the map tile service's data has been fetched.\n * @return {H.service.MapTileService.Info|undefined} meta information for this map tile service\n * @publish\n * @export\n */\nH.service.MapTileService.prototype.getInfo = function() {\n  'use strict';\n  return this.info_;\n};\n\n\n/**\n * This method creates a tile provider which uses the specified map tiles. This provider can be used as a data source\n * for an ImageTileLayer.\n *\n * @param {string} tileType the tile type\n * @param {string} scheme the tile scheme\n * @param {number} tileSize the tile size\n * @param {string} format the tile image format\n * @param {H.service.ServiceParameters=} opt_additionalParameters a hash of additional parameters to be\n * @return {H.map.provider.ImageTileProvider} the image tile provider\n * @publish\n * @export\n */\nH.service.MapTileService.prototype.createTileProvider = function(tileType, scheme, tileSize, format,\n    opt_additionalParameters) {\n  'use strict';\n  var hash = H.service.MapTileProvider.hash(this, tileType, scheme, tileSize, format, opt_additionalParameters),\n      provider = this.providers_[hash];\n  if (!provider) {\n    provider = new H.service.MapTileProvider(this, tileType, scheme, tileSize, format, opt_additionalParameters);\n    this.providers_[hash] = provider;\n  }\n\n  return provider;\n};\n\n\n/**\n * This method creates a tile layer. This layer can be used as a layer on a map's data model.\n * @param {string} tileType the tile type\n * @param {string} scheme the tile scheme\n * @param {number} tileSize the tile size\n * @param {string} format the tile image format\n * @param {H.service.ServiceParameters=} opt_additionalParameters Additional parameters for the map tile service\n * @param {number=} opt_opacity The opacity of this layer\n * @param {boolean=} opt_dark Indicates whether the content of this layer is mainly dark, default is {@code false}\n *           See also {@link H.Map.Options#autoColor}\n * @return {H.map.layer.TileLayer} the tile layer\n * @publish\n * @export\n */\nH.service.MapTileService.prototype.createTileLayer = function(tileType, scheme, tileSize, format,\n    opt_additionalParameters, opt_opacity, opt_dark) {\n  'use strict';\n  var provider = this.createTileProvider(tileType, scheme, tileSize, format, opt_additionalParameters);\n  return new H.map.layer.TileLayer(provider, {\n    'opacity': opt_opacity,\n    'dark': !!opt_dark\n  });\n};\n\n\n/**\n * This event is fired when the service's info resource was successfully\n * retrieved and processed.\n * @event H.service.MapTileService#infoupdate\n * @type {H.util.Event}\n * @publish\n */\n\n\n/**\n * This event is fired when the service's version hash was successfully\n * updated.\n * @event H.service.MapTileService#versionupdate\n * @type {H.util.Event}\n * @publish\n */\n\n\n/**\n * This event is fired when the service's copyrights were successfully\n * retrieved.\n * @event H.service.MapTileService#copyrightupdate\n * @type {H.util.Event}\n * @publish\n */\n\n\n/**\n * @typedef {{\n *   type: string,\n *   version: (string|undefined),\n *   subDomain: (string|undefined),\n *   path: (string|undefined)\n * }}\n * @property {string=} type the type of the map tile service to communicate\n *  with, e.g. 'base' (default), 'aerial', etc. (refer to the Map Tile REST API\n *  documentation for available types)\n * @property {string=} version the map version hash to use for retrieving tiles,\n *  default is newest and will be automatically updated\n * @property {string=} subDomain the sub-domain of the map tile service relative\n *  to the platform's base URL, default is {@code 'maps'}\n * @property {string=} path the path of the map tile service, default is\n *  {@code 'maptile/2.1'}\n * @publish\n */\nH.service.MapTileService.Options;\n\n\n//Storing default options\nH.service.setOptions('maptile', {\n  'type': 'base',\n  'version': 'newest',\n  'subDomain': 'maps',\n  'path': 'maptile/2.1',\n  'shards': ['1', '2', '3', '4']\n});\n\n\n/**\n * @typedef {{\n *   maps: Object.<string, Object>,\n *   schemes: Object.<string, Object>,\n *   tiletypes: Object.<string, Object>,\n *   formats: Object.<string, Object>,\n *   resolutions: Object.<string, Object>,\n *   languages: Object.<string, Object>\n * }}\n * @property {Object.<string, Object>} maps\n * @property {Object.<string, Object>} schemes\n * @property {Object.<string, Object>} tiletypes\n * @property {Object.<string, Object>} formats\n * @property {Object.<string, Object>} resolutions\n * @property {Object.<string, Object>} languages\n * @publish\n */\nH.service.MapTileService.Info;\n\n\n/**\n * This method returns a map tile service stub.\n * @param {H.service.MapTileService.Options=} opt_options\n * @return {H.service.MapTileService}\n * @export\n * @publish\n */\nH.service.Platform.prototype.getMapTileService = function(opt_options) {\n  'use strict';\n  var hash = H.service.MapTileService.hash(opt_options),\n      mapTileService = this.tileServices_[hash];\n  if (!mapTileService) {\n    mapTileService = this.configure(new H.service.MapTileService(opt_options));\n    this.tileServices_[hash] = mapTileService;\n  }\n  return /** @type {H.service.MapTileService} */ (mapTileService);\n};\n",
		"goog.provide('H.service.TrafficIncidentsService');\n\ngoog.require('H.service.AbstractRestService');\ngoog.require('H.service.Platform');\n\n\n\n/**\n * TrafficIncindentsService provides functionality to the low level traffic incidents api\n * [Traffic API documentation](http://developer.here.com/rest-apis/documentation/traffic/topics/overview.html)\n * were it is possible to retrieve traffic incident information on a tile basis\n *\n * @constructor\n * @param {H.service.TrafficIncidentsService.Options=} opt_options\n * @extends {H.service.AbstractRestService}\n * @export\n * @publish\n */\nH.service.TrafficIncidentsService = function(opt_options) {\n  'use strict';\n  var options = H.service.mergeOptions(H.service.getOptions('trafficIncidents'), opt_options);\n  options['callbackKey'] = 'jsoncallback';\n\n  H.util.getSuperProto(H.service.TrafficIncidentsService).constructor.call(this, options);\n};\nH.lang.inherits(H.service.TrafficIncidentsService, H.service.AbstractRestService);\n\n\n/**\n * This method requests traffic incidents based on the service parameters provided.\n * @param {H.service.ServiceParameters} serviceParams\n * @param {function(H.service.ServiceResult)} onResponse\n * @param {function()} onError\n * @return {H.service.JsonpRequestHandle}\n *\n * @export\n * @publish\n */\nH.service.TrafficIncidentsService.prototype.requestIncidents = function(serviceParams, onResponse, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('incidents.json')\n      .mergeQuery(serviceParams);\n  return this.restApiRequest(url, onResponse, onError);\n};\n\n\n/**\n * This method requests traffic incident information by tile coordinates\n *\n * @param {number} x tile column number\n * @param {number} y tile row number\n * @param {number} z zoom level\n * @param {function(H.service.ServiceResult)} onResponse callback to handle service resposne\n * @param {function()} onError callback to habdle communication error\n * @param {H.service.ServiceParameters=} opt_serviceParams optional service parameters to be added to the request\n * @return {H.service.JsonpRequestHandle}\n *\n * @publish\n * @export\n */\nH.service.TrafficIncidentsService.prototype.requestIncidentsByTile = function(x, y, z, onResponse,\n    onError, opt_serviceParams) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath(['incidents/json', z, x, y].join('/'))\n      .mergeQuery(opt_serviceParams || {});\n  return this.restApiRequest(url, onResponse, onError);\n};\n\n\n/**\n * @typedef {{\n *   subDomain: (string|undefined),\n *   path: (string|undefined),\n *   baseUrl: (H.service.Url|undefined)\n * }}\n *\n * @property {string=} subDomain the sub-domain of the traffic incidents service relative\n *  to the platform's base URL, default is {@code 'traffic'}\n * @property {string=} path the path of the traffic incidents service, default is\n *  {@code 'traffic/6.1'}\n * @property {H.service.Url=} baseUrl an optional base URL if it differs\n *  from the platform's default base URL\n * @publish\n */\nH.service.TrafficIncidentsService.Options;\n\n\n//Storing default options\nH.service.setOptions('trafficIncidents', {\n  'subDomain': 'traffic',\n  'path': 'traffic/6.1'\n});\n\n\n/**\n * This method returns an implementation instance of\n * {@link H.service.TrafficIncidentsService}\n * @return {H.service.TrafficIncidentsService} a new places service instance\n * @export\n * @publish\n */\nH.service.Platform.prototype.getTrafficIncidentsService = function() {\n  'use strict';\n  return /** @type {H.service.TrafficIncidentsService} */ (this.configure(\n      new H.service.TrafficIncidentsService()));\n};\n",
		"goog.provide('H.service.DefaultLayers');\n\n\ngoog.require('H.service.MapTileService');\ngoog.require('H.service.Platform');\ngoog.require('H.service.TrafficIncidentsProvider');\ngoog.require('H.service.TrafficIncidentsService');\n\n\n/**\n * This method creates a pre-configured set of HERE tile layers for convenient use with the\n * map.\n *\n * This method returns an object holding the three default map types\n *\n * - {@code normal}\n * - {@code satellite}\n * - {@code terrain}\n *\n * Each of the map types in turn contains the following variant tile layers:\n *\n * - {@code map}\n * - {@code xbase}\n * - {@code base}\n * - {@code traffic}\n * - {@code panorama}\n * - {@code labels}\n *\n * In addition the {@code normal} map type contains the {@code transit} and {@code metaInfo} variant.\n * Collection of default map types also includes {@code incidents} type, that provides an overlay that\n * displays current trffic incidents.\n *\n * @example\n * // Create the default layers\n * var layers = platform.createDefaultLayers();\n *\n * // Set the satellite map type's traffic variant as the map's base layer\n * map.setBaseLayer(layers.satellite.traffic);\n *\n * @param {number=} opt_tileSize optional tile size to be queried from the HERE Map Tile API, default is {@code 256}\n * @param {number=} opt_ppi optional 'ppi' parameter to use when querying tiles, default is not specified\n * @param {string=} opt_lg optional primary language parameter, default is not specified\n * @param {string=} opt_lg2 optional secondary language parameter, default is not specified\n * @param {string=} opt_style optional 'style' parameter to use when querying map tiles, default is not specified\n * @param {boolean=} opt_pois indicates if pois are displayed on the map\n *\n * @return {Object.<string, H.service.MapType>} a set of tile layers ready to use\n *\n * @export\n * @publish\n */\nH.service.Platform.prototype.createDefaultLayers = function(opt_tileSize, opt_ppi, \n        opt_lg, opt_lg2, opt_style, opt_pois) {\n  'use strict';\n  var baseMT = this.getMapTileService(),\n      aerialMT = this.getMapTileService({type: 'aerial'}),\n      trafficMT = this.getMapTileService({type: 'traffic'}),\n      panoMT = this.getMapTileService({type: 'pano'}),\n      metaInfoService = this.getMetaInfoTileService(),\n      incidents = this.getTrafficIncidentsService(),\n      incidentsProvider,\n      tileServices = [baseMT, aerialMT],\n      params = /** @type {H.service.ServiceParameters}*/ ({}),\n      groupsDict = {},\n      currentGroup,\n      tileSize = opt_tileSize || 256;\n\n  if (opt_ppi === 320) {\n    params['ppi'] = opt_ppi;\n  }\n  if (opt_lg) {\n    params['lg'] = opt_lg;\n  }\n  if (opt_lg2) {\n    params['lg2'] = opt_lg2;\n  }\n  if (opt_style) {\n    params['style'] = opt_style;\n  }\n\n  // To display POI symbols and labels:\n  if (opt_pois) {\n    params['pois'] = '';\n  }\n\n  incidentsProvider = new H.service.TrafficIncidentsProvider(incidents, undefined, opt_lg ? params : null);\n  this.incidentsLayer_ = new H.map.layer.MarkerTileLayer(incidentsProvider);\n\n  return {\n    'normal': {\n      'xbase': baseMT.createTileLayer('xbasetile', 'normal.day', tileSize, 'png8', params, 1, false),\n      'base': baseMT.createTileLayer('basetile', 'normal.day', tileSize, 'png8', params, 1, false),\n      'map': baseMT.createTileLayer('maptile', 'normal.day', tileSize, 'png8', params, 1, false),\n      'traffic': trafficMT.createTileLayer('traffictile', 'normal.day', tileSize, 'png8', params, 1, false),\n      'transit': baseMT.createTileLayer('maptile', 'normal.day.transit', tileSize, 'png8', params, 1, false),\n      'panorama': panoMT.createTileLayer('rctile', 'normal.day', tileSize, 'png8', params, 1, false),\n      'labels': baseMT.createTileLayer('labeltile', 'normal.day', tileSize, 'png', params, 1, false),\n      'metaInfo': metaInfoService.createTileLayer(tileSize, opt_ppi === 320 ? 2 : 1, ['buildings'], params)\n    },\n    'satellite': {\n      'xbase': aerialMT.createTileLayer('xbasetile', 'hybrid.day', tileSize, 'jpg', params, 1, true),\n      'base': aerialMT.createTileLayer('basetile', 'hybrid.day', tileSize, 'jpg', params, 1, true),\n      'map': aerialMT.createTileLayer('maptile', 'hybrid.day', tileSize, 'jpg', params, 1, true),\n      'traffic': trafficMT.createTileLayer('traffictile', 'hybrid.day', tileSize, 'jpg', params, 1, true),\n      'panorama': panoMT.createTileLayer('rctile', 'hybrid.day', tileSize, 'jpg', params, 1, true),\n      'labels': aerialMT.createTileLayer('labeltile', 'hybrid.day', tileSize, 'png', params, 1, true)\n    },\n    'terrain': {\n      'xbase': aerialMT.createTileLayer('xbasetile', 'terrain.day', tileSize, 'jpg', params, 1, false),\n      'base': aerialMT.createTileLayer('basetile', 'terrain.day', tileSize, 'jpg', params, 1, false),\n      'map': aerialMT.createTileLayer('maptile', 'terrain.day', tileSize, 'jpg', params, 1, false),\n      'traffic': trafficMT.createTileLayer('traffictile', 'terrain.day', tileSize, 'jpg', params, 1, false),\n      'panorama': panoMT.createTileLayer('rctile', 'terrain.day', tileSize, 'jpg', params, 1, false),\n      'labels': aerialMT.createTileLayer('labeltile', 'terrain.day', tileSize, 'png', params, 1, false)\n    },\n    'incidents': this.incidentsLayer_\n  };\n};\n\n\n/**\n * A map type is an object holding tile layers corresponding to a map type (e.g. 'normal', 'satellite' or\n * 'terrain'). A map type contains at least a {@code map} property which defines the basic map layer for\n * a given map type. In addition it can hold other map layers with the given style, e.g. {@code base},\n * {@code xbase}, {@code traffic} etc.\n *\n * @typedef {{\n *  map: (H.map.layer.TileLayer),\n *  xbase: (H.map.layer.TileLayer|undefined),\n *  base: (H.map.layer.TileLayer|undefined),\n *  traffic: (H.map.layer.TileLayer|undefined),\n *  panorama: (H.map.layer.TileLayer|undefined),\n *  labels: (H.map.layer.TileLayer|undefined)\n * }}\n * @property {H.map.layer.TileLayer} map the basic map tiles with all features and labels\n * @property {H.map.layer.TileLayer=} xbase map tiles without features and labels\n * @property {H.map.layer.TileLayer=} base map tiles without labels\n * @property {H.map.layer.TileLayer=} traffic map tiles with traffic flow highlighting\n * @property {H.map.layer.TileLayer=} transit map tiles with public transit lines highlighted\n * @property {H.map.layer.TileLayer=} panorama map tiles highlighting areas with HERE StreetLevel coverage\n * @property {H.map.layer.TileLayer=} labels transparent map tiles with labels only\n *\n * @publish\n */\nH.service.MapType;\n",
		"goog.provide('H.service.metaInfo.Spatial');\n\n\n\n/**\n * This class represents a spatial object which stores and provides projected geometries on tile base.\n * @export\n * @extends {H.map.Spatial}\n * @implements {H.service.metaInfo.IObject}\n * @constructor\n * @param {H.service.metaInfo.ObjectProvider} provider The provider of this object.\n * @param {boolean} isClosed Indicates whether this spatial object represents a closed shape\n * @param {string|undefined} remoteId An ID to use for this object. If the ID evalues to a falsy the ID is ignored.\n * @param {H.map.Spatial.Options=} opt_options The options to apply\n */\nH.service.metaInfo.Spatial = function(provider, isClosed, remoteId, opt_options) {\n  'use strict';\n  var options = opt_options || H.service.metaInfo.Spatial.spatialOptions_;\n\n  // Initialize the map for the geometry data by tile key:\n  this.geometryDataByTileKey_ = {};\n\n  // Call the super constructor:\n  options['provider'] = provider;\n  H.map.Spatial.call(this, isClosed, options);\n\n  if (remoteId) {\n    this.remoteId_ = remoteId;\n  }\n};\nH.lang.inherits(H.service.metaInfo.Spatial, H.map.Spatial);\n\n\n/**\n * A reusable object used as H.map.Spatial.Options to specify the spatial's provider\n * @private\n * @type {H.map.Spatial.Options}\n */\nH.service.metaInfo.Spatial.spatialOptions_ = /** @type {H.map.Spatial.Options}*/ ({});\n\n\n//###############################################  IObject  ############################################################\n/**\n * The unique ID of this object defined by the remote service\n * @type {string}\n */\nH.service.metaInfo.Spatial.prototype.remoteId_;\n\n\n/**\n * @override\n * @export\n */\nH.service.metaInfo.Spatial.prototype.getRemoteId = function() {\n  return this.remoteId_;\n};\n\n\n/**\n * The reference counter for this object\n * @private\n * @type {number}\n */\nH.service.metaInfo.Spatial.prototype.referenceCounter_ = 0;\n\n\n/**\n * @override\n * @export\n */\nH.service.metaInfo.Spatial.prototype.retain = function() {\n  'use strict';\n  if (this.remoteId_) {\n    ++this.referenceCounter_;\n  }\n};\n\n\n/**\n * @override\n * @export\n */\nH.service.metaInfo.Spatial.prototype.release = function() {\n  'use strict';\n  if (this.remoteId_) {\n    // All references released?\n    if (!--this.referenceCounter_) {\n      // We have to release the remote object from its provider:\n      this.getProvider().removeObject(this);\n    }\n  }\n  return this.referenceCounter_ < 1;\n};\n\n\n\n//############################################  GEOMETRY DATA  #########################################################\n/**\n * To store the geometry and the hybrid index of a spatial object for a certain tile\n * @private\n * @constructor\n * @param {Array.<Array.<H.math.Point>>} geometry\n * @param {number=} opt_hybridIdx\n */\nH.service.metaInfo.Spatial.GeometryData_ = function(geometry, opt_hybridIdx) {\n  'use strict';\n\n  /**\n   * @type {Array.<Array.<H.math.Point>>}\n   */\n  this.geometry = geometry;\n\n  if (opt_hybridIdx >= 0) {\n    this.hybridIdx = opt_hybridIdx;\n  }\n};\n\n\n/**\n * @type {number}\n */\nH.service.metaInfo.Spatial.GeometryData_.prototype.hybridIdx = -1;\n\n\n/**\n * A reusable GeometryData_ instance to use if no geometry data could be found\n * @private\n * @type {H.service.metaInfo.Spatial.GeometryData_}\n */\nH.service.metaInfo.Spatial.emptyGeometryData_ = new H.service.metaInfo.Spatial.GeometryData_([]);\n\n\n/**\n * A mapping of tile keys and geometry data for the tile\n * @private\n * @type {Object.<string, H.service.metaInfo.Spatial.GeometryData_>}\n */\nH.service.metaInfo.Spatial.prototype.geometryDataByTileKey_;\n\n\n/**\n * A internal helper function to fetch geometry data for a given tile\n * @private\n * @param {H.map.provider.SpatialTile} tile The tile for which the geometry data are requested\n * @return {H.service.metaInfo.Spatial.GeometryData_}\n */\nH.service.metaInfo.Spatial.prototype.getGeometryData_ = function(tile) {\n  return this.geometryDataByTileKey_[tile['key']] || H.service.metaInfo.Spatial.emptyGeometryData_;\n};\n\n\n//##############################################  GEOMETRY  ############################################################\n/**\n * @override\n * @export\n */\nH.service.metaInfo.Spatial.prototype.getGeometry = function(tile) {\n  'use strict';\n  return this.getGeometryData_(tile).geometry;\n};\n\n\n/**\n * @override\n * @export\n */\nH.service.metaInfo.Spatial.prototype.getHybridIdx = function(tile) {\n  'use strict';\n  return this.getGeometryData_(tile).hybridIdx;\n};\n\n\n/**\n * Sets the geometry for a tile. Be aware that NO invalidation is triggered, because we expect that geometries are only\n * set during RemoteTileProvider#createTileInternal which triggers an update by itself!\n * @param {H.map.provider.SpatialTile} tile The tile for which the geometry is added\n * @param {Array.<Array.<H.math.Point>>} geometry The geometry to add\n * @param {number=} opt_hybridIdx The index where the outline geometry is starting.\n *        If ommited the geometry is treated as none-hybrid\n */\nH.service.metaInfo.Spatial.prototype.setGeometry = function(tile, geometry, opt_hybridIdx) {\n  // TODO Should we throw an exception if hybridIdx is set but this.isClosed() returns false?\n  this.geometryDataByTileKey_[tile['key']] = new H.service.metaInfo.Spatial.GeometryData_(geometry, opt_hybridIdx);\n};\n\n\n/**\n * Removes the geometry for a the given tile. Be aware that NO invalidation is triggered, beacuse we expect that\n * geometries are only removed during a Cache#onDrop!\n * @param {H.map.provider.SpatialTile} tile The tile for which the geometry is removed\n */\nH.service.metaInfo.Spatial.prototype.removeGeometry = function(tile) {\n  delete this.geometryDataByTileKey_[tile['key']];\n};\n",
		"goog.provide('H.service.metaInfo.IParser');\n\n\n\n/**\n * This interface represents functionality to parse a tile based response of a remote object service\n * @interface\n */\nH.service.metaInfo.IParser = function() {};\n\n\n/**\n * To parse a response of a remote object service. If error occurres during parsing, method should\n * return {@code undefined}\n * @export\n * @param {H.service.metaInfo.ObjectProvider} provider The provider to create map objects for\n * @param {H.map.provider.SpatialTile} tile The according tile of the response\n * @param {*} response The response to parse\n * @return {H.service.metaInfo.IParser.Result|undefined}\n */\nH.service.metaInfo.IParser.prototype.parse = function(provider, tile, response) {};\n\n\n/**\n * To store the resulting map objects after parsing a remote object service response\n * @property {Array.<H.map.Spatial>=} spatials\n *    A list of parsed spatial objects or undefined if no spatials result\n * @property {Array.<H.map.Marker>=}\n *    markers A list of parsed marker objects or undefined if no markers result\n * @property {Array.<H.map.DomMarker>=} domMarkers\n *    A list of parsed DOM marker objects or undefined if no DOM markers result\n *\n * @typedef {{\n *   spatials: (Array.<H.map.Spatial>|undefined),\n *   markers: (Array.<H.map.Marker>|undefined),\n *   domMarkers: (Array.<H.map.DomMarker>|undefined)\n * }}\n */\nH.service.metaInfo.IParser.Result;\n",
		"goog.provide('H.service.metaInfo.Parser');\n\ngoog.require('H.service.metaInfo.IParser');\ngoog.require('H.service.metaInfo.Spatial');\n\n\n\n/**\n * A concrete parser implementation for\n * [Metainfo Tiles](http://developer.here.com/rest-apis/documentation/enterprise-map-tile/topics/tile-metainfo.html).\n *\n * The parser provides aditional features like:\n *\n *  * Cleanups of meaningless meta-info properties as well as geometry data to reduce the memory foot print.\n *  * Adds a \"category\" property to each meta-info.\n *  * Stores the meta-info for all created map objects {@see H.map.Object#getData}.\n *  * Creates hybrid spatial objects for buildings (see H.map.Spatial.Options#hybridIdx).\n *  * Determines objects with the same remote ID and utilize the remote object managment of the provider.\n *\n * @implements {H.service.metaInfo.IParser}\n * @constructor\n * @param {Array.<string>=} opt_categoryFilter A list of meta-info category names which should be suppressed.\n *     See section\n *     [Metainfo Tile](http://developer.here.com/rest-apis/documentation/enterprise-map-tile/topics/tile-metainfo.html)\n *     for valid category names.\n */\nH.service.metaInfo.Parser = function(opt_categoryFilter) {\n  'use strict';\n  var i;\n\n  if (opt_categoryFilter) {\n    this.suppressedCategories_ = {};\n    i = opt_categoryFilter.length;\n    while (i--) {\n      this.suppressedCategories_[opt_categoryFilter[i]] = true;\n    }\n  }\n\n  // Initialize the map for reusable \"street label\" styles:\n  this.streetLabelStyles_ = {};\n};\n\n\n/**\n * A mapping of category names and a their suppression state\n * We set a same-named instance property if any category is suppressed\n * @private\n * @type {Object.<string, boolean>}\n */\nH.service.metaInfo.Parser.prototype.suppressedCategories_ = {};\n\n\n/**\n * A flag to indicate whether the parsing failed\n * @private\n * @type {boolean}\n */\nH.service.metaInfo.Parser.parseFailed_;\n\n\n/**\n * A helper method to signalize a failed parse\n * @private\n */\nH.service.metaInfo.Parser.faile_ = function() {\n  H.service.metaInfo.Parser.parseFailed_ = true;\n};\n\n\n/**\n * @override\n * @export\n */\nH.service.metaInfo.Parser.prototype.parse = function(provider, tile, response) {\n  'use strict';\n  var categories,\n      category,\n      entityParser,\n      entities,\n      i,\n      entity,\n      parserResult,\n      UNDEF;\n\n  // Reset the parseFailed-flag:\n  H.service.metaInfo.Parser.parseFailed_ = false;\n\n  // Handle potential exceptions which may occur during JSON parsing:\n  try {\n    response = H.service.util.global.JSON.parse(response);\n  } catch (ex) {\n    H.service.metaInfo.Parser.faile_();\n  }\n  if (response && (categories = response['metadata'])) {\n    parserResult = /** @type {H.service.metaInfo.IParser.Result} */ ({'spatials': []});\n    // Iterate over all categories:\n    for (category in categories) {\n      // Skip categories which are filtered out or for which no entityParser exists:\n      if (!this.suppressedCategories_[category] &&\n          (entityParser = H.service.metaInfo.Parser.entityParsers_[category])) {\n        if (entities = categories[category] || H.service.metaInfo.Parser.faile_()) {\n          // Iterate over all entities within the category:\n          i = entities.length;\n          while (i--) {\n            if (entity = entities[i] || H.service.metaInfo.Parser.faile_()) {\n              entityParser(tile, provider, this, category, entity, parserResult);\n            }\n          }\n        }\n      }\n    }\n  } else {\n    H.service.metaInfo.Parser.faile_();\n  }\n  return H.service.metaInfo.Parser.parseFailed_ ? UNDEF : parserResult;\n\n};\n\n\n//###############################################  ENTITY PARSING  #####################################################\n/**\n * A dictionary of entity parsers for all known meta-info categories.\n * The expected arguments are:\n *\n *  * the according spatial tile of the response\n *  * the objects provider to use for map object creation\n *  * the parser instance\n *  * the category\n *  * the response's entity to parse\n *  * the parser result set to store the resulting objects\n *\n * @private\n * @type {Object.<string, function(\n *     H.map.provider.SpatialTile,\n *     H.service.metaInfo.ObjectProvider,\n *     H.service.metaInfo.Parser,\n *     string,\n *     Object,\n *     H.service.metaInfo.IParser.Result\n * )>}\n */\nH.service.metaInfo.Parser.entityParsers_ = {\n\n\n  //------------------------------------------------  STREET LABELS  ---------------------------------------------------\n  'street labels': function(tile, provider, parser, category, entity, result) {\n    'use strict';\n    var verteces;\n    if (verteces = entity['vertices'] || H.service.metaInfo.Parser.faile_()) {\n      H.service.metaInfo.Parser.createSpatial_(\n          tile,\n          provider,\n          H.service.metaInfo.Parser.verticesToGeometry_(verteces),\n          false,\n          parser.getStreetLabelStyle_(tile, entity['font size']),\n          entity,\n          category,\n          result,\n          -1);\n    }\n    // Pre-cleanup the meta-info data to reduce cleanup effort:\n    delete entity['vertices'];\n  },\n\n\n  //---------------------------------------------  CITY CENTER LABELS  -------------------------------------------------\n  'city center labels': function(tile, provider, parser, category, entity, result) {\n    'use strict';\n    H.service.metaInfo.Parser.createSpatial_(\n        tile,\n        provider,\n        H.service.metaInfo.Parser.boundingBoxMapToGeometry_(entity, []),\n        true,\n        parser.defaultStyle_,\n        entity,\n        category,\n        result,\n        -1);\n  },\n\n\n  //---------------------------------------------------  LABELS  -------------------------------------------------------\n  'labels': function(tile, provider, parser, category, entity, result) {\n    'use strict';\n    var boundingBoxes;\n    if (boundingBoxes = entity['bounding boxes'] || H.service.metaInfo.Parser.faile_()) {\n      H.service.metaInfo.Parser.createSpatial_(\n          tile,\n          provider,\n          H.service.metaInfo.Parser.boundingBoxListToGeometry_(boundingBoxes),\n          true,\n          parser.defaultStyle_,\n          entity,\n          category,\n          result,\n          -1);\n    }\n    // Pre-cleanup the meta-info data to reduce cleanup effort:\n    delete entity['bounding boxes'];\n  },\n\n\n  //-------------------------------------------------  BUILDINGS  ------------------------------------------------------\n  'buildings': function(tile, provider, parser, category, entity, result) {\n    'use strict';\n    // A variant of the buildings entity parser which takes all sectors into account:\n    var remoteId = entity['id'],\n        spatial = provider.fetchObjectById(remoteId),\n        sectors,\n        i,\n        length,\n        sector,\n        vertices,\n        indeces,\n        polygons = [],\n        outlines = [],\n        geometry,\n        hybridIdx;\n\n    if (sectors = entity['sectors'] || H.service.metaInfo.Parser.faile_()) {\n      length = sectors.length;\n      // Iterate over all sectors:\n      for (i = 0; i < length; i++) {\n        if (sector = sectors[i] || H.service.metaInfo.Parser.faile_()) {\n          if (vertices = sector['vertices']) {\n            if (indeces = sector['polygons']) {\n              polygons.push.apply(polygons, H.service.metaInfo.Parser.vertexIndicesToGeometry_(vertices, indeces));\n            }\n            if (indeces = sector['outlines']) {\n              outlines.push.apply(outlines, H.service.metaInfo.Parser.vertexIndicesToGeometry_(vertices, indeces));\n            }\n          }\n          // Pre-cleanup the meta-info data to reduce cleanup effort:\n          delete sector['vertices'];\n          delete sector['polygons'];\n          delete sector['outlines'];\n        }\n      }\n    }\n\n    hybridIdx = polygons.length;\n    geometry = polygons;\n    geometry.push.apply(geometry, outlines);\n\n    if (geometry.length || H.service.metaInfo.Parser.faile_()) {\n      // An object with the same remote ID could be fetched from then provider?\n      if (spatial) {\n        // Just add the geometry for the given tile and store the spatial within the parser result:\n        spatial.setGeometry(tile, geometry, hybridIdx);\n        result['spatials'].push(spatial);\n      } else {\n        // Create a new spatial object, push it to the result list and add it to the remote provider\n        spatial = H.service.metaInfo.Parser.createSpatial_(\n            tile,\n            provider,\n            geometry,\n            true,\n            parser.defaultStyle_,\n            entity,\n            category,\n            result,\n            hybridIdx,\n            remoteId);\n        provider.addObject(spatial);\n      }\n    }\n  }\n\n};\n\n//-------------------------------------------  TRANSIT_STOPS + POIs  ---------------------------------------------------\n// The \"transit_stops\" and \"POIs\" parsers are identical with \"labels\" parser:\nH.service.metaInfo.Parser.entityParsers_['transit_stops'] =\n    H.service.metaInfo.Parser.entityParsers_['POIs'] =\n        H.service.metaInfo.Parser.entityParsers_['labels'];\n\n\n//#############################################  GEOMETRY PARSING  #####################################################\n/**\n * To convert meta-info vertices into a geometry\n * @private\n * @param {Array.<number>} vertices A list vertices as alternating x and y coordinates\n * @return {Array.<Array.<H.math.Point>>} the resulting geometry\n */\nH.service.metaInfo.Parser.verticesToGeometry_ = function(vertices) {\n  'use strict';\n  var i = vertices.length,\n      geometry,\n      x,\n      y;\n  if (i > 0 || H.service.metaInfo.Parser.faile_()) {\n    geometry = new Array(i / 2);\n    while (i) {\n      y = vertices[--i];\n      x = vertices[--i];\n      geometry[i / 2] = new H.math.Point(x, y);\n    }\n  }\n  return geometry ? [geometry] : [];\n};\n\n\n/**\n * To convert a meta-info box into a sub-geometry.\n * @private\n * @param {Array.<number>} box A meta data box, formatted as [left, top, width, height]\n * @return {Array.<H.math.Point>} the resulting sub-geometry. Be aware that it returns an array of\n *                                     H.math.Point but NOT an array of arrays of H.math.Point.\n */\nH.service.metaInfo.Parser.boxToGeometry_ = function(box) {\n  'use strict';\n  var x = box[0],\n      y = box[1],\n      w = box[2],\n      h = box[3];\n  return [\n    new H.math.Point(x, y),          // top left\n    new H.math.Point(x + w, y),      // top right\n    new H.math.Point(x + w, y + h),  // bottom right\n    new H.math.Point(x, y + h)       // bottom left\n  ];\n};\n\n\n/**\n * To convert a list of \"bounding boxes\" into a geometry\n * @private\n * @param {Array.<Object>} boundingBoxList A list of bounding box maps\n * @return {Array.<Array.<H.math.Point>>} the resulting geometry\n */\nH.service.metaInfo.Parser.boundingBoxListToGeometry_ = function(boundingBoxList) {\n  'use strict';\n  var i = boundingBoxList.length,\n      geometry = [],\n      boundingBoxMap;\n  while (i--) {\n    if (boundingBoxMap = boundingBoxList[i] || H.service.metaInfo.Parser.faile_()) {\n      H.service.metaInfo.Parser.boundingBoxMapToGeometry_(boundingBoxMap, geometry);\n    }\n  }\n  return geometry;\n};\n\n\n/**\n * A list of all supported names of bounding boxes\n * @private\n * @type {Array.<string>}\n */\nH.service.metaInfo.Parser.boundingBoxKeys_ = ['text box', 'bullet box', 'annotation box'];\n\n\n/**\n * Parses a map of bounding boxes like\n *   {\n *     \"text box\":       [x, y, w, ,h],\n *     \"bullet box\":     [x, y, w, ,h],\n *     \"annotation box\": [x, y, w, ,h]\n *   }\n * and push the resulting sub-geometries to the given geometry\n * @private\n * @param {Object} boundingBoxMap A map of bounding boxes\n * @param {Array.<Array.<H.math.Point>>} geometry\n * @return {Array.<Array.<H.math.Point>>} the geometry\n */\nH.service.metaInfo.Parser.boundingBoxMapToGeometry_ = function(boundingBoxMap, geometry) {\n  'use strict';\n  var i = H.service.metaInfo.Parser.boundingBoxKeys_.length,\n      key,\n      box;\n  while (i--) {\n    key = H.service.metaInfo.Parser.boundingBoxKeys_[i];\n    if (box = boundingBoxMap[key]) {\n      geometry.push(H.service.metaInfo.Parser.boxToGeometry_(box));\n      // Pre-cleanup the meta-info data to reduce cleanup effort:\n      delete boundingBoxMap[key];\n    }\n  }\n  return geometry;\n};\n\n\n/**\n * To convert meta-info vertex-indices into a geometry\n * @private\n * @param {Array.<number>} vertices A list of vertices as alternating x and y values\n * @param {Array.<Array.<number>>} indices A list of vertex indices to discribe the geometry\n * @return {Array.<Array.<H.math.Point>>} the resulting geometry\n */\nH.service.metaInfo.Parser.vertexIndicesToGeometry_ = function(vertices, indices) {\n  'use strict';\n  var i = indices.length,\n      subIndices,\n      geometry,\n      subGeometry,\n      j,\n      idx;\n\n  // EXAMPLE:\n  // vertices = [1, 2,   4, 2,   4, 6,   1, 6];                           // A rectangular box\n  // indices = [[3, 1, 2], [1, 3, 2]];                                    // tessellated into 2 triangles\n  // geometry = [[(1, 6), (4, 2), (1, 2)], [(4, 2), (1, 6), (4, 6)]];     // the resulting geometry\n  if (i > 0) {\n    geometry = Array(i);\n    while (i--) {\n      if (subIndices = indices[i] || H.service.metaInfo.Parser.faile_()) {\n        j = subIndices.length;\n        if (j > 0) {\n          geometry[i] = subGeometry = Array(j);\n          while (j--) {\n            idx = subIndices[j] * 2;\n            subGeometry[j] = new H.math.Point(vertices[idx], vertices[idx + 1]);\n          }\n        }\n      }\n    }\n  }\n  return geometry || [];\n};\n\n\n//##############################################  SPATIAL CREATION  ####################################################\n/**\n * A reusable object to use as spatial options\n * @private\n * @type {H.map.Spatial.Options}\n */\nH.service.metaInfo.Parser.spatialOptions_ = /** @type {H.map.Spatial.Options} */ ({});\n\n\n/**\n * A helper function to create and prepare a spatial objects\n * @private\n * @param {H.map.provider.SpatialTile} tile\n * @param {H.service.metaInfo.ObjectProvider} provider\n * @param {Array.<Array.<H.math.Point>>} geometry\n * @param {boolean} isClosed\n * @param {H.map.SpatialStyle} style\n * @param {Object} data\n * @param {string} category\n * @param {H.service.metaInfo.IParser.Result} result\n * @param {number} hybridIdx\n * @param {string=} opt_remoteId\n * @return {H.service.metaInfo.Spatial}\n */\nH.service.metaInfo.Parser.createSpatial_ = function(\n    tile, provider, geometry, isClosed, style, data, category, result, hybridIdx, opt_remoteId) {\n  'use strict';\n  var spatial;\n\n  H.service.metaInfo.Parser.spatialOptions_['style'] = style;\n  spatial = new H.service.metaInfo.Spatial(\n      provider, isClosed, opt_remoteId, H.service.metaInfo.Parser.spatialOptions_);\n\n  spatial.setGeometry(tile, geometry, hybridIdx);\n  // Set the meta-info data:\n  H.service.metaInfo.Parser.cleanupMetaInfoData_(0, data);\n  data['category'] = category;\n  spatial.setData(data);\n\n  result['spatials'].push(spatial);\n\n  spatial.setParentEventTarget(provider);\n  return spatial;\n};\n\n\n//###############################################  SPATIAL STYLES  #####################################################\n/**\n * @private\n * @type {string}\n */\nH.service.metaInfo.Parser.TRANSPARENT_ = 'transparent';\n\n\n/**\n * The spatial style to use by default.\n * It has full transparent fill- and stroke-color to be not rendered but detectable in hit test\n * @private\n * @type {H.map.SpatialStyle}\n */\nH.service.metaInfo.Parser.prototype.defaultStyle_ = new H.map.SpatialStyle({\n  strokeColor: H.service.metaInfo.Parser.TRANSPARENT_,\n  fillColor: H.service.metaInfo.Parser.TRANSPARENT_,\n  //strokeColor: 'rgba(0,0,0,.3)',\n  //fillColor: 'rgba(255,0,0,.2)',\n  lineWidth: 0\n});\n\n\n/**\n * Mapping of \"font-size\" to an SpatialStyle with corresponding lineWidth\n * @private\n * @type {Object.<*, H.map.SpatialStyle>}\n */\nH.service.metaInfo.Parser.prototype.streetLabelStyles_;\n\n\n/**\n * Reusable object to pass style attributes to SpatialStyle#getCopy\n * @private\n * @type {H.map.SpatialStyle.Options}\n */\nH.service.metaInfo.Parser.streetLabelStyleAttributes_ = /** @type {H.map.SpatialStyle.Options} */ ({});\n\n\n/**\n * Returns a \"street label\" style according to the given font size\n * @private\n * @param {H.map.provider.SpatialTile} tile\n * @param {string} fontSize\n * @return {H.map.SpatialStyle}\n */\nH.service.metaInfo.Parser.prototype.getStreetLabelStyle_ = function(tile, fontSize) {\n  'use strict';\n  var style,\n      lineWidth = +fontSize / tile.getPixelRatio();\n  style = this.streetLabelStyles_[lineWidth];\n  if (!style) {\n    H.service.metaInfo.Parser.streetLabelStyleAttributes_['lineWidth'] = lineWidth;\n    style = this.streetLabelStyles_[lineWidth] = this.defaultStyle_.getCopy(\n        H.service.metaInfo.Parser.streetLabelStyleAttributes_);\n  }\n  return style;\n};\n\n\n//############################################  META-INFO DATA CLEANUP  ################################################\n/**\n * Cleans up meta-info data by removing all meaningless fields recursively\n * We treat as meaningless: empty strings, false, null, empty arrays and empty objects.\n * Caused of revcursive calls an object like { \"foo\": [], \"bar\": {}, \"foobar\": \"\" } will be cleaned to { } and\n * the return value is false because it's an empty object (after cleanup).\n * An object like { \"foo\": [], \"bar\": {}, \"foobar\": 4711 } will be cleaned to { \"foobar\": 4711 } and\n * the return value is true because it's not empty.\n * @private\n * @param {string|number} key The property name or index of the data value\n * @param {*} value The meta-info data value to clean up\n * @return {boolean} Indicates wheter the data value is meaningfull\n */\nH.service.metaInfo.Parser.cleanupMetaInfoData_ = function(key, value) {\n  'use strict';\n  var i,\n      isMeaningfull = false;\n\n  switch (typeof value) {\n    case 'object': {\n      if (value instanceof Array) {\n        i = value.length;\n        while (i--) {\n          // Recursion!:\n          if (H.service.metaInfo.Parser.cleanupMetaInfoData_(i, value[i])) {\n            isMeaningfull = true;\n          } else {\n            delete value[i];\n          }\n        }\n      } else {\n        // It's an instance of Object or null\n        if (value) {\n          // It's an instance of Object\n          for (i in value) {\n            // Recursion:\n            if (H.service.metaInfo.Parser.cleanupMetaInfoData_(i, value[i])) {\n              isMeaningfull = true;\n            } else {\n              delete value[i];\n            }\n          }\n        }\n      }\n      break;\n    }\n    case 'number': {\n      isMeaningfull = true;\n      break;\n    }\n    default: {\n      isMeaningfull = !!value;\n    }\n  }\n\n  return isMeaningfull;\n};\n",
		"goog.provide('H.service.metaInfo.ObjectProvider');\n\n\ngoog.require('H.service.metaInfo.IObject');\n\n\n\n/**\n * This class represents a provider for remote objects which requests the data from a service and converts them to\n * map objects.\n * @export\n * @extends {H.map.provider.ObjectProvider}\n * @constructor\n * @param {H.service.metaInfo.IParser} parser The parser to use for parsing the responses\n * @param {H.service.metaInfo.ObjectProvider.Options=} opt_options The options for the provider\n *\n */\nH.service.metaInfo.ObjectProvider = function(parser, opt_options) {\n  'use strict';\n\n  /**\n   * @private\n   * @type {H.service.metaInfo.IParser}\n   */\n  this.parser_ = parser;\n\n  /**\n   * @private\n   * @type {H.service.metaInfo.ObjectProvider.Options}\n   */\n  this.options_ = /** @type {H.service.metaInfo.ObjectProvider.Options} */ ({});\n  H.lang.extend(this.options_, opt_options || this.options_);\n\n  H.map.provider.ObjectProvider.call(this, opt_options);\n\n  this.remoteObjects_ = {};\n\n};\nH.lang.inherits(H.service.metaInfo.ObjectProvider, H.map.provider.ObjectProvider);\n\n\n/**\n * @override\n */\nH.service.metaInfo.ObjectProvider.prototype.dispose = function() {\n  'use strict';\n  H.map.provider.ObjectProvider.prototype.dispose.call(this);\n  // TODO\n  // Dispose related instance properties!\n};\n\n\n//################################################  REQUEST OBJECTS  ###################################################\n/**\n * @private\n * @type {Array}\n */\nH.service.metaInfo.ObjectProvider.emptyArray_ = [];\n\n\n/**\n * @export\n * @override\n */\nH.service.metaInfo.ObjectProvider.prototype.requestMarkers = function(rect, zoom, visiblesOnly, cacheOnly) {\n  'use strict';\n  return H.service.metaInfo.ObjectProvider.emptyArray_;\n};\n\n\n/**\n * @export\n * @override\n */\nH.service.metaInfo.ObjectProvider.prototype.requestDomMarkers = function(rect, zoom, visiblesOnly, cacheOnly) {\n  'use strict';\n  return H.service.metaInfo.ObjectProvider.emptyArray_;\n};\n\n\n/**\n * @export\n * @override\n */\nH.service.metaInfo.ObjectProvider.prototype.providesSpatials = function() {\n  'use strict';\n  return true;\n};\n\n\n/**\n * @export\n * @override\n */\nH.service.metaInfo.ObjectProvider.prototype.requestSpatials = function(rect, zoom, visiblesOnly, cacheOnly) {\n  'use strict';\n  return H.service.metaInfo.ObjectProvider.emptyArray_;\n};\n\n\n/**\n * @export\n * @override\n */\nH.service.metaInfo.ObjectProvider.prototype.requestSpatialsByTile = function(tile, visiblesOnly, cacheOnly) {\n  'use strict';\n  var spatials = tile.$$spatials$$,\n      response,\n      parserResult;\n  if (!spatials && (response = tile.$$response$$)) {\n    delete tile.$$response$$;\n    parserResult = this.parser_.parse(this, tile, response);\n    if (parserResult) {\n      spatials =\n          tile.$$spatials$$ =\n              parserResult['spatials'];\n    }\n  }\n  return spatials || H.service.metaInfo.ObjectProvider.emptyArray_;\n};\n\n\n/**\n * To register a response object for a given tile\n * @param {H.map.provider.SpatialTile} tile The tile for which the response should be registered\n * @param {Object.<string,*>|undefined} response The response to register\n */\nH.service.metaInfo.ObjectProvider.prototype.registerResponse = function(tile, response) {\n  'use strict';\n  delete tile.$$spatials$$;\n  tile.$$response$$ = response;\n};\n\n\n//##############################################  REMOTE OBJECTS  ######################################################\n/**\n * To map IDs of remote objects to map objects.\n * @private\n * @type {Object.<string, H.service.metaInfo.Spatial>}\n */\nH.service.metaInfo.ObjectProvider.prototype.remoteObjects_;\n\n\n/**\n * To fetch an managed remote object.\n * The ID must not equal any property name of the Javascript object's prototype!\n * @param {string} id The remote ID of the object to fetch\n * @return {H.map.Object|undefined} the fetched object or undefined if it is not managed\n */\nH.service.metaInfo.ObjectProvider.prototype.fetchObjectById = function(id) {\n  'use strict';\n  return this.remoteObjects_[id];\n};\n\n\n/**\n * To add an objects to the remote object managment.\n * @throws Error if the remote object was already added before\n * @param {H.service.metaInfo.Spatial} object The object to add\n */\nH.service.metaInfo.ObjectProvider.prototype.addObject = function(object) {\n  'use strict';\n  var id = object.getRemoteId();\n  if (this.remoteObjects_[id]) {\n    throw 'Remote object ' + id + ' allready added';\n  }\n  this.remoteObjects_[id] = object;\n};\n\n\n/**\n * To remove an object from the remote object managment.\n * This method must not called before all references to this remote object are released!\n * Otherwise all state (like style, visibility etc.) will be lost\n * The ID must not equal any property name of the Javascript object's prototype!\n * @param {H.service.metaInfo.IObject} object The object to remove\n */\nH.service.metaInfo.ObjectProvider.prototype.removeObject = function(object) {\n  'use strict';\n  delete this.remoteObjects_[object.getRemoteId()];\n};\n\n\n//#################################################  OPTIONS  ##########################################################\n/**\n * Options which are used to initialize the meta-info povider\n * @property {number=} min\n *        The minimal supported zoom level, default is {@code 0}\n * @property {number=} max\n *        The max maximal supported zoom level, default is {@code 22}\n * @typedef {{\n *   min: (number|undefined),\n *   max: (number|undefined)\n * }}\n */\nH.service.metaInfo.ObjectProvider.Options;\n",
		"goog.provide('H.service.metaInfo.IObject');\n\n\n\n/**\n * This interface represents additional properties for map objects from remote object providers\n * @interface\n */\nH.service.metaInfo.IObject = function() {};\n\n\n/**\n * Returns this object's remote ID which is used to identify different remote objects who are represented as one and\n * the same map object.\n * @export\n * @return {string}\n */\nH.service.metaInfo.IObject.prototype.getRemoteId = function() {};\n\n\n/**\n * A method which is called whenever a new reference to this object is retained.\n * @export\n */\nH.service.metaInfo.IObject.prototype.retain = function() {};\n\n\n/**\n * A method which is called whenever a previously retained reference to this object is now released.\n * A concrete implementation of this method has to call H.service.metaInfo.ObjectProvider#removeObject\n * when all references to this object are released.\n * @export\n * @return {boolean} to indicate if all references to this object are released\n */\nH.service.metaInfo.IObject.prototype.release = function() {};\n",
		"goog.provide('H.service.metaInfo.Service');\n\n\ngoog.require('H.service.IConfigurable');\ngoog.require('H.service.Platform');\ngoog.require('H.service.jsonp');\ngoog.require('H.service.util');\n\n\n\n// TODO: ATTENTION! the following code is a copy-paste from MapTileService.\n// The fact is that there's no clearcut way to share functionality between\n// maptile service and meta info tileservice without refactoring half of the platform.\n// we MUST thoroughly review our take on the platform and adjust accordingly\n/**\n * This class encapsulates a\n * [Metainfo Tile](http://developer.here.com/rest-apis/documentation/enterprise-map-tile/topics/tile-metainfo.html)\n * end point of the HERE Map Tile API.\n *\n * An instance of this class can be retrieved by calling the factory method on\n * a platform instance. {@link H.service.Platform#getMetaInfoTileService}.\n * @publish\n * @export\n * @implements {H.service.IConfigurable}\n * @constructor\n * @extends {H.util.EventTarget}\n * @param {H.service.metaInfo.Service.Options=} opt_options additional service parameters\n */\nH.service.metaInfo.Service = function(opt_options) {\n  'use strict';\n  var options = H.service.mergeOptions(H.service.getOptions('maptile'), opt_options || {});\n\n  H.util.EventTarget.call(this);\n\n  this.baseUrl_ = options['baseUrl'];\n  this.path_ = options['path'];\n  this.subDomain_ = options['subDomain'];\n  this.shards_ = options['shards'];\n  this.ignoreTypes_ = !!options['ignoreTypes'];\n  this.type_ = this.ignoreTypes_ ? null : options['type'];\n  this.version_ = options['version'];\n\n  this.copyrights_ = new H.service.MapTileCopyrights();\n};\nH.lang.inherits(H.service.metaInfo.Service, H.util.EventTarget);\n\n\n/**\n * @return {number}\n */\nH.service.metaInfo.Service.hash = function() {\n  var options = H.service.getOptions('metainfotile'),\n      str = '';\n\n  str += options['ignoreTypes'] ? '' : options['type'];\n  str += options['path'];\n  str += options['subDomain'];\n  str += options['baseUrl'];\n  str += options['shards'] ? options['shards'].join('') : '';\n\n  return H.service.util.hash(str);\n};\n\n\n/**\n * Transforms an info list from the map tile service into a JS-style object\n * @param {Object} infoData\n * @param {string} what\n */\nH.service.metaInfo.Service.listToObject = function(infoData, what) {\n  'use strict';\n  var result = {},\n      list = infoData[what + 's'][what],\n      i = list.length;\n  while (i--) {\n    result[list[i].id] = list[i];\n  }\n  infoData[what + 's'] = result;\n};\n\n\n/**\n * @override\n * @export\n */\nH.service.metaInfo.Service.prototype.configure = function(appId, appCode,\n    useHTTPS, useCIT, opt_baseUrl) {\n  'use strict';\n\n  this.url_ = (this.baseUrl_ || opt_baseUrl).clone();\n  this.subDomain_ && this.url_.addSubDomain(this.subDomain_);\n  this.type_ && this.url_.addSubDomain(this.type_);\n  this.path_ && this.url_.setPath(this.path_);\n\n\n  if (this.version_ === 'newest') {\n    this.fetchInfo();\n  }\n  return this;\n};\n\n\n/**\n * This method returns the configured service URL.\n * @return {H.service.Url}\n */\nH.service.metaInfo.Service.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * This method returns the sharding sub domains for this service.\n * @return {(Array.<string>|undefined)}\n */\nH.service.metaInfo.Service.prototype.getShards = function() {\n  return this.shards_;\n};\n\n\n/**\n * This method returns the map tile type provided by this service.\n * @return {string} the map tile type\n */\nH.service.metaInfo.Service.prototype.getType = function() {\n  'use strict';\n  return this.type_;\n};\n\n\n/**\n * This method returns the mmeta info tile service's newest version hash.\n * @publish\n * @export\n * @return {string} meta information for this map tile service\n */\nH.service.metaInfo.Service.prototype.getVersion = function() {\n  'use strict';\n  return this.version_;\n};\n\n\n/**\n * This method sets this meta tile service's version string\n * @private\n * @param {string} version\n */\nH.service.metaInfo.Service.prototype.setVersion_ = function(version) {\n  'use strict';\n  this.version_ = version;\n};\n\n\n/**\n * Returns this MetaInfoTileService's copyrights collection.\n * @export\n * @return {H.service.MapTileCopyrights}\n */\nH.service.metaInfo.Service.prototype.getCopyrights = function() {\n  'use strict';\n  return this.copyrights_;\n};\n\n\n/**\n * This mathod updates this map tile service's meta information.\n * @param {H.service.ServiceResult} info\n */\nH.service.metaInfo.Service.prototype.updateInfo = function(info) {\n  'use strict';\n  var response = info.response,\n      key,\n      lang,\n      listToObject = H.service.metaInfo.Service.listToObject;\n\n  listToObject(response, 'map');\n  listToObject(response, 'scheme');\n  listToObject(response, 'tiletype');\n  listToObject(response, 'format');\n  listToObject(response, 'resolution');\n  listToObject(response, 'language');\n\n  if (this.version_ === 'newest' && this.type_ !== 'traffic') {\n    for (key in response['maps']) {\n      if (response['maps'][key]['hash'] && response['maps'][key]['newest']) {\n        this.setVersion_(response['maps'][key]['hash']);\n\n        this.dispatchEvent('versionupdate');\n      }\n    }\n  }\n\n  this.info_ = response;\n  this.dispatchEvent('infoupdate');\n};\n\n\n/**\n * This method retrieves meta-information from the map tile backend\n */\nH.service.metaInfo.Service.prototype.fetchInfo = function() {\n  'use strict';\n  var that = this,\n      versionUrl = this.getUrl()\n        .clone()\n        .addSubPath('info')\n        .mergeQuery({'output': 'json'});\n\n  //if we have shards, then we pick the first one\n  this.shards_ && versionUrl.addSubDomain(this.shards_[0]);\n\n  H.service.jsonp({\n    url: versionUrl,\n    callbackKey: 'callback_func',\n    callback: function(data) {\n      //FIX THE JSON-P RESPONSE\n      //Maptiler currently sends extraneous commas at the end of arrays\n      that.updateInfo(/** @type {Object} */(JSON.parse(data.replace(/,\\s?\\]/g, ']'))));\n    },\n    errback: function(failure) {\n      throw new Error('[' + failure + ']: Could not fetch meta-info from map tile service @' + versionUrl.toString());\n    },\n    preventCallbackEncoding: true\n  });\n};\n\n\n/**\n * This method returns the meta info tile service's meta information. The method will\n * return an object once the map tile service's data has been fetched.\n * @publish\n * @export\n * @return {H.service.metaInfo.Service.Info|undefined} meta information for this meta info tile service\n */\nH.service.metaInfo.Service.prototype.getInfo = function() {\n  'use strict';\n  return this.info_;\n};\n\n\n/**\n * This method creates a tile provider which uses the meta info tile backend. This provider can be used as a data source\n * for an TileLayer.\n * @publish\n * @export\n * @param {number} tileSize The tile size\n * @param {number} pixelratio\n * @param {Array.<string>=} opt_categoryFilter A list of meta-info category names which should be suppressed. See\n *      [Metainfo Tile](http://developer.here.com/rest-apis/documentation/enterprise-map-tile/topics/tile-metainfo.html)\n *      for valid category names.\n * @param {H.service.ServiceParameters=} opt_additionalParameters Additional parameters for the meta info service\n * @return {H.map.provider.TileProvider} the tile provider\n */\nH.service.metaInfo.Service.prototype.createTileProvider = function(tileSize, pixelratio, opt_categoryFilter,\n    opt_additionalParameters) {\n  'use strict';\n  return new H.service.metaInfo.TileProvider(this, opt_additionalParameters,\n      {'tileSize': tileSize, 'pixelratio': pixelratio, 'categoryFilter': opt_categoryFilter});\n};\n\n\n/**\n * This method creates a tile layer. This layer can be used as a layer on a map's data model.\n * @publish\n * @export\n * @param {number} tileSize the tile size\n * @param {number} pixelratio the tile's pixel ratio, should be aligned with base map tile\n * @param {Array.<string>=} opt_categoryFilter A list of meta-info category names which should be suppressed. See\n *      [Metainfo Tile](http://developer.here.com/rest-apis/documentation/enterprise-map-tile/topics/tile-metainfo.html)\n *      for valid category names.\n * @param {H.service.ServiceParameters=} opt_additionalParameters Additional parameters for the meta info service\n * @return {H.map.layer.TileLayer} the tile layer\n */\nH.service.metaInfo.Service.prototype.createTileLayer = function(tileSize, pixelratio, opt_categoryFilter,\n    opt_additionalParameters) {\n  'use strict';\n  var provider = this.createTileProvider(tileSize, pixelratio, opt_categoryFilter, opt_additionalParameters);\n  return new H.map.layer.TileLayer(provider);\n};\n\n\n/**\n * This event is fired when the service's info resource was successfully\n * retrieved and processed.\n * @publish\n * @event H.service.metaInfo.Service#infoupdate\n * @type {H.util.Event}\n */\n\n\n/**\n * This event is fired when the service's version hash was successfully\n * updated.\n * @publish\n * @event H.service.metaInfo.Service#versionupdate\n * @type {H.util.Event}\n */\n\n\n/**\n * This event is fired when the service's copyrights were successfully\n * retrieved.\n * @publish\n * @event H.service.metaInfo.Service#copyrightupdate\n * @type {H.util.Event}\n */\n\n\n/**\n * @publish\n * @property {Object.<string, Object>} maps\n * @property {Object.<string, Object>} schemes\n * @property {Object.<string, Object>} tiletypes\n * @property {Object.<string, Object>} formats\n * @property {Object.<string, Object>} resolutions\n * @property {Object.<string, Object>} languages\n *\n * @typedef {{\n *   maps: Object.<string, Object>,\n *   schemes: Object.<string, Object>,\n *   tiletypes: Object.<string, Object>,\n *   formats: Object.<string, Object>,\n *   resolutions: Object.<string, Object>,\n *   languages: Object.<string, Object>\n * }}\n */\nH.service.metaInfo.Service.Info;\n\n\n/**\n * This method returns a map tile service stub.\n * @export\n * @publish\n * @param {H.service.metaInfo.Service.Options=} opt_params additional service parameters\n * @return {H.service.metaInfo.Service}\n */\nH.service.Platform.prototype.getMetaInfoTileService = function(opt_params) {\n  'use strict';\n  return /** @type {H.service.metaInfo.Service} */ (this.configure(\n      new H.service.metaInfo.Service(opt_params)));\n};\n\n\n//Storing default options\nH.service.setOptions('metainfotile', {\n  'type': 'base',\n  'version': 'newest',\n  'subDomain': 'maps',\n  'path': 'maptile/2.1',\n  'shards': ['1', '2', '3', '4']\n});\n\n\n/**\n * @publish\n * @property {string=} version the map version hash to use for retrieving tiles,\n *  default is newest and will be automatically updated\n * @property {string=} subDomain the sub-domain of the map tile service relative\n *  to the platform's base URL, default is {@code 'maps'}\n *\n * @typedef {{\n *   version: (string|undefined),\n *   subDomain: (string|undefined)\n * }}\n */\nH.service.metaInfo.Service.Options;\n",
		"goog.provide('H.service.metaInfo.TileProvider');\n\n\ngoog.require('H.service.metaInfo.ObjectProvider');\ngoog.require('H.service.metaInfo.Parser');\ngoog.require('H.service.metaInfo.Service');\n\n\n\n/**\n * This class represents\n * [Metainfo Tiles](http://developer.here.com/rest-apis/documentation/enterprise-map-tile/topics/tile-metainfo.html)\n * that annotate map tiles {@link H.service.MapTileProvider}\n * with additional data that describes objects (buildings, labels, public transport etc.) rendered on\n * map tiles.\n *\n * @publish\n * @extends {H.map.provider.RemoteTileProvider}\n * @constructor\n * @export\n *\n * @param {H.service.metaInfo.Service} service the meta tile service which holds information from\n *   about the soutce of the tiles\n * @param {H.service.ServiceParameters=} opt_params an additional set of URL parameters\n * @param {H.service.metaInfo.TileProvider.Options=} opt_options additional parameters\n */\nH.service.metaInfo.TileProvider = function(service, opt_params, opt_options) {\n  'use strict';\n\n  var options = opt_options || {},\n      params = opt_params || {};\n\n  /**\n   * @private\n   * @type {H.service.ServiceParameters}\n   */\n  this.params_ = params;\n\n  if (!service || !(service instanceof H.service.metaInfo.Service)) {\n    throw new Error('InvalidArgument: service required');\n  }\n\n  /**\n   * Meta info tile service.\n   * @private\n   * @type {H.service.metaInfo.Service}\n   */\n  this.service_ = service;\n\n  this.updateAndReload_ = H.lang.bind(this.updateAndReload_, this);\n  this.service_.addEventListener('versionupdate', this.updateAndReload_);\n\n  /**\n   * @private\n   * @type {H.service.Url}\n   */\n  this.baseUrl_ = service.getUrl()\n      .clone().addSubPath('maptile/' + service.getVersion() + '/normal.day')\n      .mergeQuery(this.additionalParams_)\n      .mergeQuery(params);\n\n  /**\n   * @private\n   * @type {Array.<string>|null}\n   */\n  this.shards_ = service.getShards() || null;\n\n  /**\n   * @type {number}\n   */\n  this['tileSize'] = options['tileSize'] || 256;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelratio_ = options['pixelratio'] || 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tileCacheSize_ = options['tileCacheSize'] || 256;\n\n  /**\n   * Object provider stores geometries and is responsible for geometry management.\n   * @private\n   * @type {H.service.metaInfo.ObjectProvider}\n   */\n  this['objectProvider_'] = new H.service.metaInfo.ObjectProvider(\n      new H.service.metaInfo.Parser(options['categoryFilter']));\n  this['objectProvider_'].setParentEventTarget(this);\n  this.onObjectProviderUpdate_ = H.lang.bind(this.onObjectProviderUpdate_, this);\n  this['objectProvider_'].addEventListener('update', this.onObjectProviderUpdate_);\n\n  /**\n   * Simple canvas pool resembles one in SpatialTileProvider.\n   * TODO: we need proper API-wide canvas pool\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.canvasPool_ = [];\n\n  this.onTileDropped_ = H.lang.bind(this.onTileDropped_, this);\n\n  /**\n   * Tile cache.\n   * @type {H.util.Cache}\n   * @private\n   */\n  this.cache_ = this['getCache']();\n\n  H.map.provider.RemoteTileProvider.call(this, {'min': 0, 'max': 20});\n};\nH.lang.inherits(H.service.metaInfo.TileProvider, H.map.provider.RemoteTileProvider);\n\n\n/**\n * @override\n */\nH.service.metaInfo.TileProvider.prototype.getCache = function() {\n  'use strict';\n  return this.cache_ || new H.util.Cache(this.tileCacheSize_, this.onTileDropped_);\n};\n\n\n/**\n * Method revokes canvas to canvas pool when tile drops from cache.\n * @private\n * @param {string} tileKey The ID of the dropped tile\n * @param {H.map.provider.SpatialTile} tile The dropped tile\n * @param {number} size The size of the entry\n */\nH.service.metaInfo.TileProvider.prototype.onTileDropped_ = function(tileKey, tile, size) {\n  'use strict';\n  // TODO We should release the objects and data not before the tile dropped out of a second cache where the tiles\n  // are stored without their canvas\n  var objectProvider,\n      objects,\n      i,\n      object;\n  // TODO Instead of doing the object releasing in the TileProvider we should do it in the SpatialTile.\n  // retain() and release() should be moved then in to map.Object\n  objectProvider = this['objectProvider_'],\n  objects = tile.getObjects(),\n  i = objects.length;\n  while (i--) {\n    object = objects[i];\n    object.removeGeometry(tile);\n    object.release();\n  }\n  if (tile['data']) {\n    this.canvasPool_.push(tile.releaseCanvas());\n    tile.releaseData();\n  }\n};\n\n\n/**\n * Method fetches canvas from canvas pool or creates new canvas.\n * @private\n * @return {HTMLCanvasElement}\n */\nH.service.metaInfo.TileProvider.prototype.getCanvas_ = function() {\n  'use strict';\n  return this.canvasPool_.pop() || H.service.util.global.document.createElement('canvas');\n};\n\n\n/**\n * Method redispatches update event from object provider.\n * @private\n */\nH.service.metaInfo.TileProvider.prototype.onObjectProviderUpdate_ = function() {\n  'use strict';\n  this.dispatchEvent('update');\n};\n\n\n/**\n * @protected\n * @export\n * @override\n */\nH.service.metaInfo.TileProvider.prototype.requestInternal = function(x, y, z, onSuccess, onError) {\n  'use strict';\n  var tileUrl = this.baseUrl_.clone(),\n      shards = this.shards_,\n      tileSize = this['tileSize'],\n      tileKey = this['getTileKey'](x, y, z),\n      cache = this.cache_,\n      // TODO: here we hit cache for the second time, just to fetch tile for checking\n      // if canvas is valid or not, that's wrong it should be done once in RTP, must be fixed with\n      // aligning spatial tile and tile\n      tile = cache.get(tileKey),\n      cancelable,\n      xhr,\n      errorOccurred;\n\n  // TODO: isCanvasValid - wrong too narrow, too specific for spatial tile see comment in spatial tile\n  if (tile && !tile.isCanvasValid()) {\n    // TODO: here's a bit of a trick: if tile's canvas is invalid we hand back canvas element and not\n    // a data, createTileInternal is aware of this distinction and will simply rerender this canvas\n    onSuccess(this.getCanvas_(), null);\n    cancelable = {\n      'cancel': function() {}\n    };\n  } else {\n\n    if (shards) {\n      tileUrl.addSubDomain(shards[(z + y + x) % shards.length]);\n    }\n\n    tileUrl.addSubPath(z + '/' + x + '/' + y + '/' + tileSize + '/png8');\n\n    // throttle meta info to 500 ms - it's additional data after all.\n    var timeoutId = H.service.util.global.setTimeout(function() {\n      xhr = new H.net.Xhr(tileUrl.toString(), function(responseText, errorMsg) {\n        if (errorMsg) {\n          onError();\n        } else {\n          onSuccess(null, responseText);\n        }\n      });\n    }, 500);\n  }\n\n  return /** @type {H.util.ICancelable}*/ (cancelable || {\n    'cancel': function() {\n      if (xhr) {\n        // TODO: chrome hangs socket when too many aborts happen\n        // xhr.abort();\n      } else {\n        H.service.util.global.clearTimeout(timeoutId);\n      }\n    }\n  });\n};\n\n\n/**\n * @override\n * @export\n * @protected\n */\nH.service.metaInfo.TileProvider.prototype.createTileInternal = function(x, y, z, data, opt_options) {\n  'use strict';\n\n  var objectProvider = this['objectProvider_'],\n      canvas,\n      tile,\n      objects,\n      i;\n\n  canvas = /** @type {HTMLCanvasElement} */ (data) || this.getCanvas_();\n\n  if (data) {\n    // TODO: ok, shoot me, we hit cache again, if we get canvas element we just rerender tile.\n    // for all the love in the world, we must align two level caching between tile & spatial tile\n    tile = /** @type {H.map.provider.SpatialTile} */ (this.cache_.get(this['getTileKey'](x, y, z)));\n    tile.render(/** @type {HTMLCanvasElement} */ (data));\n  } else {\n    // we got actual data, create a new tile and render it\n    tile = new H.map.provider.SpatialTile(\n        this.getTileKey(x, y, z), x, y, z, this['tileSize'], this.pixelratio_, objectProvider);\n    objectProvider.registerResponse(tile, opt_options);\n\n    if (!tile.render(canvas)) {\n      this.canvasPool_.push(canvas);\n    } else {\n      // TODO Instead of doing the object retaining in the TileProvider we should do it in the SpatialTile.\n      // retain() and release() should be moved then in to map.Object\n      objects = tile.getObjects(),\n      i = objects.length;\n      while (i--) {\n        objects[i].retain();\n      }\n    }\n  }\n\n  return tile;\n};\n\n\n/**\n * Disposes of this map tile provider instance.\n */\nH.service.metaInfo.TileProvider.prototype.dispose = function() {\n  'use strict';\n  this['objectProvider_'].dispose();\n  this.service_.removeEventListener('versionupdate', this.updateAndReload_);\n  H.map.provider.RemoteTileProvider.prototype.dispose.call(this);\n};\n\n\n/**\n * Callback that's invoked when version information arrives from the server.\n * @private\n */\nH.service.metaInfo.TileProvider.prototype.updateAndReload_ = function() {\n  'use strict';\n  var service = this.service_;\n  this.baseUrl_ = service.getUrl()\n      .clone()\n      .addSubPath('maptile/' + service.getVersion() + '/normal.day')\n      .mergeQuery(this.additionalParams_)\n      .mergeQuery(this.params_);\n\n  this.reload(false);\n};\n\n\n/**\n * Additional GET parameters needed to fetch meta info.\n * @private\n */\nH.service.metaInfo.TileProvider.prototype.additionalParams_ = {\n  'metadata': 'metaonly',\n  'mgen': '2'\n};\n\n\n/**\n * Configuration object which can be used to initialize the TileProvider.\n * @publish\n * @property {number=} tileCacheSize\n *    The number of fully rendered spatial tiles that are cached for immediate reuse, default is {@code 32}\n * @property {number=} tileSize\n *    The size of the tiles rendered by this provider (must be power of 2, default is {@code 256})\n * @property {number=} pixelRatio\n *    The pixelRatio to use for over-sampling in cases of high-resolution displays\n * @property (Array.<string>=) A list of meta-info category names which should be suppressed. See\n *      [Metainfo Tile](http://developer.here.com/rest-apis/documentation/enterprise-map-tile/topics/tile-metainfo.html)\n *      for valid category names.\n *\n * @typedef {{\n *   tileCacheSize: (number|undefined),\n *   pixelratio: (number|undefined),\n *   tileSize: (number|undefined),\n *   categoryFilter: (Array.<string>|undefined)\n * }}\n */\nH.service.metaInfo.TileProvider.Options;\n",
		"goog.provide('H.service.EnterpriseRoutingService');\n\n\ngoog.require('H.service.Platform');\ngoog.require('H.service.jsonp');\n\n\n\n/**\n * This class encapsulates Enterprise Routing REST API as a service stub.\n * An instance of this class can be retrieved by calling the factory method on\n * a platform instance. {@link H.service.Platform#getEnterpriseRoutingService}.\n *\n * @example\n * var platform = new H.service.Platform(),\n *     router = platform.getEnterpriseRoutingService();\n *\n * var calculateIsoline = {\n *       'start': 'geo!52.5,13.4',\n *       'distance': '1000,2000',\n *       'mode': 'fastest;car;traffic:disabled'\n *     },\n *     onResult = function(result) {\n *       console.log(result.response.isolines[0]);\n *     },\n *     onError = function(error) {\n *        console.log(error);\n *     };\n * router.calculateIsoline(calculateIsoline, onResult, onError);\n *\n * @extends {H.service.AbstractRestService}\n * @constructor\n * @param {H.service.EnterpriseRoutingService.Options=} opt_options\n * @publish\n * @export\n */\nH.service.EnterpriseRoutingService = function(opt_options) {\n  'use strict';\n  var options = H.service.mergeOptions(H.service.getOptions('enterpriseRouting'), opt_options);\n  options['callbackKey'] = 'jsoncallback';\n\n  H.util.getSuperProto(H.service.EnterpriseRoutingService).constructor.call(this, options);\n};\nH.lang.inherits(H.service.EnterpriseRoutingService, H.service.AbstractRestService);\n\n\n/**\n * This method sends a \"calculateroute\" request to Enterprise Routing REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Routing REST API documentation](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n * for information on available parameters and the response object structure.\n *\n * @export\n * @publish\n * @param {H.service.ServiceParameters} calculateRouteParams the service\n *  parameters to be sent with the routing request.\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the\n *  [Enterprise Routing REST API](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n *  provides a response to the request.\n * @param {function(Error)} onError this function will\n *  be called if a communication error occurs during the JSON-P request\n */\nH.service.EnterpriseRoutingService.prototype.calculateRoute = function(calculateRouteParams,\n    onResult, onError) {\n  'use strict';\n\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('calculateroute.json')\n      .mergeQuery(calculateRouteParams);\n  this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * This method sends a \"getroute\" request to Enterprise Routing REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Routing REST API documentation](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n * for information on available parameters and the response object structure.\n *\n * @export\n * @publish\n * @param {H.service.ServiceParameters} getRouteParams the service\n *  parameters to be sent with the routing request.\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the\n *  [Enterprise Routing REST API](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n *  provides a response to the request.\n * @param {function(Error)} onError this function will\n *  be called if a communication error occurs during the JSON-P request\n */\nH.service.EnterpriseRoutingService.prototype.getRoute = function(getRouteParams,\n    onResult, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('getroute.json')\n      .mergeQuery(getRouteParams);\n  this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * This method sends a \"getlinkinfo\" request to Enterprise Routing REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Routing REST API documentation](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n * for information on available parameters and the response object structure.\n *\n * @export\n * @publish\n * @param {H.service.ServiceParameters} getLinkInfoParams the service\n *  parameters to be sent with the routing request.\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the\n *  [Enterprise Routing REST API](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n *  provides a response to the request.\n * @param {function(Error)} onError this function will\n *  be called if a communication error occurs during the JSON-P request\n */\nH.service.EnterpriseRoutingService.prototype.getLinkInfo = function(getLinkInfoParams,\n    onResult, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('getlinkinfo.json')\n      .mergeQuery(getLinkInfoParams);\n  this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * This method sends a \"calculateisoline\" request to Enterprise Routing REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Routing REST API documentation](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n * for information on available parameters and the response object structure.\n *\n * @export\n * @publish\n * @param {H.service.ServiceParameters} calculateIsolineParams the service\n *  parameters to be sent with the routing request.\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the\n *  [Enterprise Routing REST API](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n *  provides a response to the request.\n * @param {function(Error)} onError this function will\n *  be called if a communication error occurs during the JSON-P request\n */\nH.service.EnterpriseRoutingService.prototype.calculateIsoline = function(calculateIsolineParams,\n    onResult, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('calculateisoline.json')\n      .mergeQuery(calculateIsolineParams);\n  this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * @publish\n * @property {string=} subDomain\n *      The sub-domain of the routing service relative to the platform's base URL (default is {@code 'route'})\n * @property {string=} path\n *      The path of the map tile service, default is {@code \"routing/7.2\"}\n * @property {H.service.Url=} baseUrl\n *      The base URL of the service, defaults to the the platform's base URL\n\n * @typedef {{\n *    subDomain: (string|undefined),\n *    path: (string|undefined),\n *    baseUrl: (H.service.Url|undefined)\n * }}\n */\nH.service.EnterpriseRoutingService.Options;\n\n\n//Storing default options\nH.service.setOptions('enterpriseRouting', {\n  'subDomain': 'route',\n  'path': 'routing/6.2',\n  'baseUrl': new H.service.Url('http', 'nlp.nokia.com')\n});\n\n\n/**\n * This method returns a service stub to query the\n * [Enterprise Routing REST API](http://developer.here.com/rest-apis/documentation/enterprise-routing).\n * @param {H.service.EnterpriseRoutingService.Options=} opt_options\n * @return {H.service.EnterpriseRoutingService}\n * @publish\n * @export\n */\nH.service.Platform.prototype.getEnterpriseRoutingService = function(opt_options) {\n  'use strict';\n  return /** @type {H.service.EnterpriseRoutingService} */ (\n      this.configure(new H.service.EnterpriseRoutingService(opt_options)));\n};\n",
		"goog.provide('H.service.RoutingService');\n\n\ngoog.require('H.service.AbstractRestService');\ngoog.require('H.service.Platform');\n\n\n\n/**\n * This class encapsulates the Routing REST API as a service stub.\n * An instance of this class can be retrieved by calling the factory method on\n * a platform instance. {@link H.service.Platform#getRoutingService}.\n *\n * @example\n * var platform = new H.service.Platform(),\n *     router = platform.getRoutingService();\n *\n * var calculateRouteParams = {\n *       'waypoint0': 'geo!52.5,13.4',\n *       'waypoint1': 'geo!52.5,13.45',\n *       'mode': 'fastest;car;traffic:disabled'\n *     },\n *     onResult = function(result) {\n *       console.log(result.response.route[0]);\n *     },\n *     onError = function(error) {\n *        console.log(error);\n *     };\n * router.calculateRoute(calculateRouteParams, onResult, onError);\n *\n * @extends {H.service.AbstractRestService}\n * @constructor\n * @param {H.service.RoutingService.Options=} opt_options\n * @publish\n * @export\n */\nH.service.RoutingService = function(opt_options) {\n  'use strict';\n  var options = H.service.mergeOptions(H.service.getOptions('routing'), opt_options);\n  options['callbackKey'] = 'jsoncallback';\n\n  H.util.getSuperProto(H.service.RoutingService).constructor.call(this, options);\n};\nH.lang.inherits(H.service.RoutingService, H.service.AbstractRestService);\n\n\n/**\n * This method sends a \"calculateroute\" request to Routing REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Routing REST API documentation](http://developer.here.com/rest-apis/documentation/routing)\n * for information on available parameters and the response object structure.\n *\n * @param {H.service.ServiceParameters} calculateRouteParams the service\n *  parameters to be sent with the routing request.\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the\n *  [Routing REST API](http://developer.here.com/rest-apis/documentation/routing)\n *  provides a response to the request.\n * @param {function(Error)} onError this function will\n *  be called if a communication error occurs during the JSON-P request\n * @publish\n * @export\n */\nH.service.RoutingService.prototype.calculateRoute = function(calculateRouteParams, onResult, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('calculateroute.json')\n      .mergeQuery(calculateRouteParams);\n  this.restApiRequest(url, onResult, onError);\n};\n\n\n//Storing default options\nH.service.setOptions('routing', {\n  'subDomain': 'route',\n  'path': 'routing/7.2'\n});\n\n\n/**\n * @typedef {{\n *    subDomain: (string|undefined),\n *    path: (string|undefined),\n *    baseUrl: (H.service.Url|undefined)\n * }}\n * @property {string=} subDomain the sub-domain of the routing service relative\n *  to the platform's base URL, default is {@code 'route'}\n * @property {string=} path the path of the map tile service, default is\n *  {@code 'routing/7.2'}\n * @property {H.service.Url=} baseUrl an optional base URL if it differs\n *  from the platform's default base URL\n * @publish\n */\nH.service.RoutingService.Options;\n\n\n/**\n * This method returns an instance of {@link H.service.RoutingService}.\n * @param {H.service.RoutingService.Options=} opt_options\n * @return {H.service.RoutingService}\n * @publish\n * @export\n */\nH.service.Platform.prototype.getRoutingService = function(opt_options) {\n  'use strict';\n  return /** @type {H.service.RoutingService} */ (this.configure(\n      new H.service.RoutingService(opt_options)));\n};\n",
		"goog.provide('H.service.GeocodingService');\n\n\ngoog.require('H.service.AbstractRestService');\ngoog.require('H.service.Platform');\n\n\n\n/**\n * This class encapsulates the Geocoding REST API in a service stub with calls\n * to its various resources implemented.\n *\n * An instance of this class can be retrieved by calling the factory method on\n * a platform instance. {@link H.service.Platform#createGeocodingService}.\n *\n * @example\n * var platform = new H.service.Platform(),\n *     geocoder = platform.getGeocodingService();\n *\n * var geocodingParams = {\n *       searchText: '425 W Randolph Street, Chicago'\n *     },\n *     onResult = function(result) {\n *       console.log(result.view[0].result[0].displayPosition);\n *     },\n *     onError = function(error) {\n *        console.log(error);\n *     };\n * geocoder.geocode(geocodingParams, onResult, onError);\n *\n * @constructor\n * @extends {H.service.AbstractRestService}\n * @param {H.service.GeocodingService.Options=} opt_options\n * @publish\n * @export\n */\nH.service.GeocodingService = function(opt_options) {\n  'use strict';\n  var options = H.service.mergeOptions(H.service.getOptions('geocoding'), opt_options);\n  options['callbackKey'] = 'jsoncallback';\n\n  H.util.getSuperProto(H.service.GeocodingService).constructor.call(this, options);\n\n  this.reverseSubDomain_ = options['reverseSubDomain'];\n};\nH.lang.inherits(H.service.GeocodingService, H.service.AbstractRestService);\n\n\n/**\n * This method sends a reverse geocoding request to Geocoder REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Geocoder REST API documentation](http://developer.here.com/rest-apis/documentation/geocoder)\n * for information on available parameters and the response object structure.\n *\n * @method\n * @param {H.service.ServiceParameters} geoodingParams the service\n *  parameters to be sent with the geocoding request.\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the Geocoder REST API provides a response to the\n *  request.\n * @param {function(Error)} onError  this function will\n *  be called if a communication error occurs during the JSON-P request\n * @return {H.service.JsonpRequestHandle}\n *\n * @publish\n * @export\n */\nH.service.GeocodingService.prototype.geocode = function(geoodingParams, onResult, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('geocode.json')\n      .mergeQuery(geoodingParams);\n  return this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * This method sends a reverse geocoding request to Geocoder REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Geocoder REST API documentation](http://developer.here.com/rest-apis/documentation/geocoder)\n * for information on available parameters and the response object structure.\n *\n\n * @param {H.service.ServiceParameters} reverseGeocodingParams the\n *  service parameters to be sent with the reverse geocoding request\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the Geocoder REST API provides a response to the\n *  request.\n * @param {function(Error)} onError this function will\n *  be called if a communication error occurs during the JSON-P request\n * @return {H.service.JsonpRequestHandle}\n *\n * @publish\n * @export\n */\nH.service.GeocodingService.prototype.reverseGeocode = function(reverseGeocodingParams, onResult, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('reversegeocode.json')\n      .mergeQuery(reverseGeocodingParams);\n\n  this.reverseSubDomain_ && url.addSubDomain(this.reverseSubDomain_);\n\n  return this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * This method sends a landmark search request to Geocoder REST API and\n * calls the {@code onResult} callback function once the service response\n * was received - providing a {@link H.service.ServiceResult} object -\n * or the {@code onError} callback if a communication error occured.\n *\n * Please refer to the\n * [Geocoder REST API documentation](http://developer.here.com/rest-apis/documentation/geocoder)\n * for information on available parameters and the response object structure.\n *\n * @param {H.service.ServiceParameters} searchParams the\n *  service parameters to be sent with the reverse geocoding request\n * @param {function(H.service.ServiceResult)} onResult this function\n *  will be called once the Geocoder REST API provides a response to the\n *  request.\n * @param {function(Error)} onError this function will\n *  be called if a communication error occurs during the JSON-P request\n * @return {H.service.JsonpRequestHandle}\n *\n * @publish\n * @export\n */\nH.service.GeocodingService.prototype.search = function(searchParams, onResult, onError) {\n  'use strict';\n  var url = this.getUrl()\n      .clone()\n      .addSubPath('search.json')\n      .mergeQuery(searchParams);\n  return this.restApiRequest(url, onResult, onError);\n};\n\n\n/**\n * @typedef {{\n *   subDomain: (string|undefined),\n *   path: (string|undefined)\n * }}\n * @property {string=} subDomain the sub-domain of the geo-coding service relative\n *  to the platform's base URL, default is {@code 'geocoder'}\n * @property {string=} path the path of the map tile service, default is\n *  {@code '6.2'}\n * @publish\n */\nH.service.GeocodingService.Options;\n\n\n//Storing default options\nH.service.setOptions('geocoding', {\n  'subDomain': 'geocoder',\n  'path': '6.2',\n  'reverseSubDomain': 'reverse'\n});\n\n\n/**\n * This method returns an implementation instance of\n * {@link H.service.GeocodingService}\n * @param {H.service.GeocodingService.Options=} opt_options an optional set of options for the new\n *  geocoding service to connect to\n * @return {H.service.GeocodingService} a new geocoding service instance\n * @export\n * @publish\n */\nH.service.Platform.prototype.getGeocodingService = function(opt_options) {\n  'use strict';\n  return /** @type {H.service.GeocodingService} */ (this.configure(\n      new H.service.GeocodingService(opt_options)));\n};\n\n\n\n",
		"if (COMPILED) {\n  goog.provide('H');\n}\n\n\n/** @suppress {duplicate} */\nvar H = H || {};\n\n\n/**\n * This namespace contains classes and interfaces related to the [HERE REST\n * APIs](http://developer.here.com/rest-apis).\n *\n * In particular this namespace contains implementations of service stubs and\n * helper functionality to integrate the HERE Maps for JavaScript API\n * with the following backend services:\n *\n * - [HERE Map Tile API](http://developer.here.com/rest-apis/documentation/enterprise-map-tile)\n * - [HERE Geododer API](http://developer.here.com/rest-apis/documentation/geocoder)\n * - [HERE Routing API](http://developer.here.com/rest-apis/documentation/routing)\n * - [HERE Enterprise Routing API](http://developer.here.com/rest-apis/documentation/enterprise-routing)\n * - [HERE Traffic API](http://developer.here.com/rest-apis/documentation/traffic)\n * - [HERE Places API](http://developer.here.com/rest-apis/documentation/places)\n *\n * @namespace H.service\n * @publish\n */\ngoog.provide('H.service');\n\ngoog.require('H.service.DefaultLayers');\ngoog.require('H.service.EnterpriseRoutingService');\ngoog.require('H.service.GeocodingService');\ngoog.require('H.service.JsonX');\ngoog.require('H.service.MapTileService');\ngoog.require('H.service.RoutingService');\ngoog.require('H.service.PlacesService');\ngoog.require('H.service.Platform');\ngoog.require('H.service.metaInfo');\n\n\n/**\n * Function returns build information\n * @return {H.util.BuildInfo}\n * @export\n */\nH.service.buildInfo = function() {\n  'use strict';\n  return H.util.BuildInfo.get('{BUILD_NAME}', '{BUILD_VERSION}', '{BUILD_REVISION}');\n};\n"
	]
}